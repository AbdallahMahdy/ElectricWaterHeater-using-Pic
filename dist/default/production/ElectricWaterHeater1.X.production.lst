

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jul 19 23:49:38 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 1.45
    48                           ; Generated 16/11/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  0000                     	;# 
   202  0001                     	;# 
   203  0002                     	;# 
   204  0003                     	;# 
   205  0004                     	;# 
   206  0005                     	;# 
   207  0006                     	;# 
   208  0007                     	;# 
   209  0008                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  0088                     	;# 
   241  0089                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  0091                     	;# 
   246  0092                     	;# 
   247  0093                     	;# 
   248  0094                     	;# 
   249  0098                     	;# 
   250  0099                     	;# 
   251  009C                     	;# 
   252  009D                     	;# 
   253  009E                     	;# 
   254  009F                     	;# 
   255  010C                     	;# 
   256  010D                     	;# 
   257  010E                     	;# 
   258  010F                     	;# 
   259  018C                     	;# 
   260  018D                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0008                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0088                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  0091                     	;# 
   306  0092                     	;# 
   307  0093                     	;# 
   308  0094                     	;# 
   309  0098                     	;# 
   310  0099                     	;# 
   311  009C                     	;# 
   312  009D                     	;# 
   313  009E                     	;# 
   314  009F                     	;# 
   315  010C                     	;# 
   316  010D                     	;# 
   317  010E                     	;# 
   318  010F                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0008                     	;# 
   330  0009                     	;# 
   331  000A                     	;# 
   332  000B                     	;# 
   333  000C                     	;# 
   334  000D                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0013                     	;# 
   342  0014                     	;# 
   343  0015                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001D                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  0081                     	;# 
   357  0085                     	;# 
   358  0086                     	;# 
   359  0087                     	;# 
   360  0088                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0098                     	;# 
   370  0099                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  0091                     	;# 
   426  0092                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  010E                     	;# 
   438  010F                     	;# 
   439  018C                     	;# 
   440  018D                     	;# 
   441  0000                     	;# 
   442  0001                     	;# 
   443  0002                     	;# 
   444  0003                     	;# 
   445  0004                     	;# 
   446  0005                     	;# 
   447  0006                     	;# 
   448  0007                     	;# 
   449  0008                     	;# 
   450  0009                     	;# 
   451  000A                     	;# 
   452  000B                     	;# 
   453  000C                     	;# 
   454  000D                     	;# 
   455  000E                     	;# 
   456  000E                     	;# 
   457  000F                     	;# 
   458  0010                     	;# 
   459  0011                     	;# 
   460  0012                     	;# 
   461  0013                     	;# 
   462  0014                     	;# 
   463  0015                     	;# 
   464  0015                     	;# 
   465  0016                     	;# 
   466  0017                     	;# 
   467  0018                     	;# 
   468  0019                     	;# 
   469  001A                     	;# 
   470  001B                     	;# 
   471  001B                     	;# 
   472  001C                     	;# 
   473  001D                     	;# 
   474  001E                     	;# 
   475  001F                     	;# 
   476  0081                     	;# 
   477  0085                     	;# 
   478  0086                     	;# 
   479  0087                     	;# 
   480  0088                     	;# 
   481  0089                     	;# 
   482  008C                     	;# 
   483  008D                     	;# 
   484  008E                     	;# 
   485  0091                     	;# 
   486  0092                     	;# 
   487  0093                     	;# 
   488  0094                     	;# 
   489  0098                     	;# 
   490  0099                     	;# 
   491  009C                     	;# 
   492  009D                     	;# 
   493  009E                     	;# 
   494  009F                     	;# 
   495  010C                     	;# 
   496  010D                     	;# 
   497  010E                     	;# 
   498  010F                     	;# 
   499  018C                     	;# 
   500  018D                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  0008                     	;# 
   510  0009                     	;# 
   511  000A                     	;# 
   512  000B                     	;# 
   513  000C                     	;# 
   514  000D                     	;# 
   515  000E                     	;# 
   516  000E                     	;# 
   517  000F                     	;# 
   518  0010                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0013                     	;# 
   522  0014                     	;# 
   523  0015                     	;# 
   524  0015                     	;# 
   525  0016                     	;# 
   526  0017                     	;# 
   527  0018                     	;# 
   528  0019                     	;# 
   529  001A                     	;# 
   530  001B                     	;# 
   531  001B                     	;# 
   532  001C                     	;# 
   533  001D                     	;# 
   534  001E                     	;# 
   535  001F                     	;# 
   536  0081                     	;# 
   537  0085                     	;# 
   538  0086                     	;# 
   539  0087                     	;# 
   540  0088                     	;# 
   541  0089                     	;# 
   542  008C                     	;# 
   543  008D                     	;# 
   544  008E                     	;# 
   545  0091                     	;# 
   546  0092                     	;# 
   547  0093                     	;# 
   548  0094                     	;# 
   549  0098                     	;# 
   550  0099                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  010F                     	;# 
   559  018C                     	;# 
   560  018D                     	;# 
   561                           
   562                           	psect	idataBANK0
   563  0003                     __pidataBANK0:	
   564                           
   565                           ;initializer for _ElectricHeaterCurrentState
   566  0003  3402               	retlw	2
   567                           
   568                           	psect	nvBANK1
   569  00D3                     __pnvBANK1:	
   570  00D3                     _Temp:	
   571  00D3                     	ds	1
   572  000B                     _INTCONbits	set	11
   573  0008                     _PORTD	set	8
   574  0005                     _PORTAbits	set	5
   575  0006                     _PORTBbits	set	6
   576  0007                     _PORTCbits	set	7
   577  001E                     _ADRESH	set	30
   578  001F                     _ADCON0bits	set	31
   579  0088                     _TRISD	set	136
   580  0081                     _OPTION_REGbits	set	129
   581  0087                     _TRISCbits	set	135
   582  0086                     _TRISBbits	set	134
   583  009E                     _ADRESL	set	158
   584  009F                     _ADCON1bits	set	159
   585  0085                     _TRISAbits	set	133
   586                           
   587                           ; #config settings
   588  0000                     
   589                           	psect	cinit
   590  0015                     start_initialization:	
   591  0015                     __initialization:	
   592                           
   593                           ; Initialize objects allocated to BANK0
   594  0015  120A  118A  2003   	fcall	__pidataBANK0	;fetch initializer
   595  0018  00ED               	movwf	__pdataBANK0& (0+127)
   596                           
   597                           ; Clear objects allocated to BANK1
   598  0019  1683               	bsf	3,5	;RP0=1, select bank1
   599  001A  1303               	bcf	3,6	;RP1=0, select bank1
   600  001B  01D1               	clrf	__pbssBANK1& (0+127)
   601  001C  01D2               	clrf	(__pbssBANK1+1)& (0+127)
   602                           
   603                           ; Clear objects allocated to BANK0
   604  001D  1283               	bcf	3,5	;RP0=0, select bank0
   605  001E  1303               	bcf	3,6	;RP1=0, select bank0
   606  001F  01DE               	clrf	__pbssBANK0& (0+127)
   607  0020  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   608  0021  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   609  0022  01E1               	clrf	(__pbssBANK0+3)& (0+127)
   610  0023  01E2               	clrf	(__pbssBANK0+4)& (0+127)
   611  0024  01E3               	clrf	(__pbssBANK0+5)& (0+127)
   612  0025  01E4               	clrf	(__pbssBANK0+6)& (0+127)
   613  0026  01E5               	clrf	(__pbssBANK0+7)& (0+127)
   614  0027  01E6               	clrf	(__pbssBANK0+8)& (0+127)
   615  0028  01E7               	clrf	(__pbssBANK0+9)& (0+127)
   616  0029  01E8               	clrf	(__pbssBANK0+10)& (0+127)
   617  002A  01E9               	clrf	(__pbssBANK0+11)& (0+127)
   618  002B  01EA               	clrf	(__pbssBANK0+12)& (0+127)
   619  002C  01EB               	clrf	(__pbssBANK0+13)& (0+127)
   620  002D  01EC               	clrf	(__pbssBANK0+14)& (0+127)
   621                           
   622                           ; Clear objects allocated to COMMON
   623  002E  01F7               	clrf	__pbssCOMMON& (0+127)
   624  002F  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   625  0030  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   626  0031                     end_of_initialization:	
   627                           ;End of C runtime variable initialization code
   628                           
   629  0031                     __end_of__initialization:	
   630  0031  0183               	clrf	3
   631  0032  120A  118A  2835   	ljmp	_main	;jump to C main() function
   632                           
   633                           	psect	bssCOMMON
   634  0077                     __pbssCOMMON:	
   635  0077                     _DownSwitch_State:	
   636  0077                     	ds	1
   637  0078                     _UpSwitch_State:	
   638  0078                     	ds	1
   639  0079                     _OnOffSwitch_State:	
   640  0079                     	ds	1
   641                           
   642                           	psect	bssBANK0
   643  005E                     __pbssBANK0:	
   644  005E                     _Time_out:	
   645  005E                     	ds	4
   646  0062                     _SetTempCount:	
   647  0062                     	ds	4
   648  0066                     _u16AnalogeRead:	
   649  0066                     	ds	2
   650  0068                     _ChangeMode:	
   651  0068                     	ds	1
   652  0069                     _Down_switch:	
   653  0069                     	ds	1
   654  006A                     _UP_Switch:	
   655  006A                     	ds	1
   656  006B                     _u16DigitalRead:	
   657  006B                     	ds	2
   658                           
   659                           	psect	dataBANK0
   660  006D                     __pdataBANK0:	
   661  006D                     _ElectricHeaterCurrentState:	
   662  006D                     	ds	1
   663                           
   664                           	psect	bssBANK1
   665  00D1                     __pbssBANK1:	
   666  00D1                     TASK_vidWaterConditioning@i:	
   667  00D1                     	ds	1
   668  00D2                     _CurrentTemp:	
   669  00D2                     	ds	1
   670                           
   671                           	psect	cstackBANK1
   672  00A0                     __pcstackBANK1:	
   673  00A0                     TASK_vidWaterConditioning@SumTemp:	
   674                           
   675                           ; 40 bytes @ 0x0
   676  00A0                     	ds	40
   677  00C8                     TASK_vidWaterConditioning@AllSum:	
   678                           
   679                           ; 4 bytes @ 0x28
   680  00C8                     	ds	4
   681  00CC                     TASK_vidWaterConditioning@AvgTemp:	
   682                           
   683                           ; 4 bytes @ 0x2C
   684  00CC                     	ds	4
   685  00D0                     TASK_vidWaterConditioning@j:	
   686                           
   687                           ; 1 bytes @ 0x30
   688  00D0                     	ds	1
   689                           
   690                           	psect	cstackCOMMON
   691  0070                     __pcstackCOMMON:	
   692  0070                     ?_displaySevenSegment:	
   693  0070                     ?_i2c_start:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_i2c_wb:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_i2c_rb:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_i2c_stop:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_ADC_Init:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_HW_init:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_Task_vidDisplayTemp:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_Task_vidGetTemp:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_TASK_vidReadOnOffSwitch:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_TASK_vidReadUPDOWNSwitch:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_TASK_vidWaterConditioning:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_TASK_vidSwitchOFFALLPeripherals:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_ISR:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ??_ISR:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?_Timer0_init:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_DisplaySevenSegment_init:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_Ndelay:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_i2c_init:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_main:	
   748                           ; 1 bytes @ 0x0
   749                           
   750                           
   751                           ; 1 bytes @ 0x0
   752  0070                     	ds	4
   753  0074                     ??_displaySevenSegment:	
   754  0074                     ??_i2c_start:	
   755                           ; 1 bytes @ 0x4
   756                           
   757  0074                     ??_i2c_wb:	
   758                           ; 1 bytes @ 0x4
   759                           
   760  0074                     ??_i2c_rb:	
   761                           ; 1 bytes @ 0x4
   762                           
   763  0074                     ??_i2c_stop:	
   764                           ; 1 bytes @ 0x4
   765                           
   766  0074                     ??___ftpack:	
   767                           ; 1 bytes @ 0x4
   768                           
   769  0074                     ??_ADC_Init:	
   770                           ; 1 bytes @ 0x4
   771                           
   772  0074                     ??_HW_init:	
   773                           ; 1 bytes @ 0x4
   774                           
   775  0074                     ??_TASK_vidReadOnOffSwitch:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0074                     ??_TASK_vidReadUPDOWNSwitch:	
   779                           ; 1 bytes @ 0x4
   780                           
   781  0074                     ??_TASK_vidSwitchOFFALLPeripherals:	
   782                           ; 1 bytes @ 0x4
   783                           
   784  0074                     ??_Timer0_init:	
   785                           ; 1 bytes @ 0x4
   786                           
   787  0074                     ??_DisplaySevenSegment_init:	
   788                           ; 1 bytes @ 0x4
   789                           
   790  0074                     ??_Ndelay:	
   791                           ; 1 bytes @ 0x4
   792                           
   793  0074                     ??_i2c_init:	
   794                           ; 1 bytes @ 0x4
   795                           
   796  0074                     ??___awdiv:	
   797                           ; 1 bytes @ 0x4
   798                           
   799  0074                     ??___awmod:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0074                     ?_ADC_Read:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0074                     displaySevenSegment@v:	
   806                           ; 2 bytes @ 0x4
   807                           
   808                           
   809                           ; 1 bytes @ 0x4
   810  0074                     	ds	1
   811  0075                     ___awmod@counter:	
   812                           
   813                           ; 1 bytes @ 0x5
   814  0075                     	ds	1
   815  0076                     ??_ADC_Read:	
   816  0076                     ??_u8_ReadExternalEEPROM:	
   817                           ; 1 bytes @ 0x6
   818                           
   819  0076                     ___awmod@sign:	
   820                           ; 1 bytes @ 0x6
   821                           
   822                           
   823                           ; 1 bytes @ 0x6
   824  0076                     	ds	1
   825                           
   826                           	psect	cstackBANK0
   827  0020                     __pcstackBANK0:	
   828  0020                     ?___awdiv:	
   829  0020                     ?___awmod:	
   830                           ; 2 bytes @ 0x0
   831                           
   832  0020                     ?___ftpack:	
   833                           ; 2 bytes @ 0x0
   834                           
   835  0020                     i2c_wb@val:	
   836                           ; 3 bytes @ 0x0
   837                           
   838  0020                     i2c_rb@ack:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0020                     ___awdiv@divisor:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0020                     ___awmod@divisor:	
   845                           ; 2 bytes @ 0x0
   846                           
   847  0020                     ___ftpack@arg:	
   848                           ; 2 bytes @ 0x0
   849                           
   850                           
   851                           ; 3 bytes @ 0x0
   852  0020                     	ds	1
   853  0021                     i2c_wb@i:	
   854  0021                     i2c_rb@ret:	
   855                           ; 1 bytes @ 0x1
   856                           
   857                           
   858                           ; 1 bytes @ 0x1
   859  0021                     	ds	1
   860  0022                     i2c_rb@i:	
   861  0022                     ___awdiv@dividend:	
   862                           ; 1 bytes @ 0x2
   863                           
   864  0022                     ___awmod@dividend:	
   865                           ; 2 bytes @ 0x2
   866                           
   867                           
   868                           ; 2 bytes @ 0x2
   869  0022                     	ds	1
   870  0023                     ?_u8_ReadExternalEEPROM:	
   871  0023                     ___ftpack@exp:	
   872                           ; 1 bytes @ 0x3
   873                           
   874  0023                     u8_ReadExternalEEPROM@addr:	
   875                           ; 1 bytes @ 0x3
   876                           
   877                           
   878                           ; 2 bytes @ 0x3
   879  0023                     	ds	1
   880  0024                     ___awdiv@counter:	
   881  0024                     ___ftpack@sign:	
   882                           ; 1 bytes @ 0x4
   883                           
   884                           
   885                           ; 1 bytes @ 0x4
   886  0024                     	ds	1
   887  0025                     ?___lltoft:	
   888  0025                     ?___lwtoft:	
   889                           ; 3 bytes @ 0x5
   890                           
   891  0025                     u8_ReadExternalEEPROM@ret:	
   892                           ; 3 bytes @ 0x5
   893                           
   894  0025                     ___awdiv@sign:	
   895                           ; 1 bytes @ 0x5
   896                           
   897  0025                     ___lwtoft@c:	
   898                           ; 1 bytes @ 0x5
   899                           
   900  0025                     ___lltoft@c:	
   901                           ; 2 bytes @ 0x5
   902                           
   903                           
   904                           ; 4 bytes @ 0x5
   905  0025                     	ds	1
   906  0026                     u8_ReadExternalEEPROM@al:	
   907  0026                     ___awdiv@quotient:	
   908                           ; 1 bytes @ 0x6
   909                           
   910                           
   911                           ; 2 bytes @ 0x6
   912  0026                     	ds	1
   913  0027                     u8_ReadExternalEEPROM@ah:	
   914                           
   915                           ; 1 bytes @ 0x7
   916  0027                     	ds	1
   917  0028                     ??_Task_vidDisplayTemp:	
   918  0028                     ?_Vid_WriteExternalEEPROM:	
   919                           ; 1 bytes @ 0x8
   920                           
   921  0028                     ??___lwtoft:	
   922                           ; 1 bytes @ 0x8
   923                           
   924  0028                     Vid_WriteExternalEEPROM@addr:	
   925                           ; 1 bytes @ 0x8
   926                           
   927                           
   928                           ; 2 bytes @ 0x8
   929  0028                     	ds	1
   930  0029                     ??___lltoft:	
   931  0029                     ?___ftmul:	
   932                           ; 1 bytes @ 0x9
   933                           
   934  0029                     ___ftmul@f1:	
   935                           ; 3 bytes @ 0x9
   936                           
   937                           
   938                           ; 3 bytes @ 0x9
   939  0029                     	ds	1
   940  002A                     Task_vidDisplayTemp@u8Temprature:	
   941  002A                     Vid_WriteExternalEEPROM@val:	
   942                           ; 1 bytes @ 0xA
   943                           
   944  002A                     ___lltoft@exp:	
   945                           ; 1 bytes @ 0xA
   946                           
   947                           
   948                           ; 1 bytes @ 0xA
   949  002A                     	ds	1
   950  002B                     ??_Vid_WriteExternalEEPROM:	
   951                           
   952                           ; 1 bytes @ 0xB
   953  002B                     	ds	1
   954  002C                     ___ftmul@f2:	
   955                           
   956                           ; 3 bytes @ 0xC
   957  002C                     	ds	1
   958  002D                     Vid_WriteExternalEEPROM@ah:	
   959                           
   960                           ; 1 bytes @ 0xD
   961  002D                     	ds	1
   962  002E                     Vid_WriteExternalEEPROM@al:	
   963                           
   964                           ; 1 bytes @ 0xE
   965  002E                     	ds	1
   966  002F                     ??___ftmul:	
   967  002F                     Vid_WriteExternalEEPROM@nt:	
   968                           ; 1 bytes @ 0xF
   969                           
   970                           
   971                           ; 1 bytes @ 0xF
   972  002F                     	ds	1
   973  0030                     Vid_WriteExternalEEPROM@tmp:	
   974                           
   975                           ; 2 bytes @ 0x10
   976  0030                     	ds	3
   977  0033                     ___ftmul@exp:	
   978                           
   979                           ; 1 bytes @ 0x13
   980  0033                     	ds	1
   981  0034                     ___ftmul@f3_as_product:	
   982                           
   983                           ; 3 bytes @ 0x14
   984  0034                     	ds	3
   985  0037                     ___ftmul@cntr:	
   986                           
   987                           ; 1 bytes @ 0x17
   988  0037                     	ds	1
   989  0038                     ___ftmul@sign:	
   990                           
   991                           ; 1 bytes @ 0x18
   992  0038                     	ds	1
   993  0039                     ?___ftdiv:	
   994  0039                     ___ftdiv@f2:	
   995                           ; 3 bytes @ 0x19
   996                           
   997                           
   998                           ; 3 bytes @ 0x19
   999  0039                     	ds	3
  1000  003C                     ___ftdiv@f1:	
  1001                           
  1002                           ; 3 bytes @ 0x1C
  1003  003C                     	ds	3
  1004  003F                     ??___ftdiv:	
  1005                           
  1006                           ; 1 bytes @ 0x1F
  1007  003F                     	ds	4
  1008  0043                     ___ftdiv@cntr:	
  1009                           
  1010                           ; 1 bytes @ 0x23
  1011  0043                     	ds	1
  1012  0044                     ___ftdiv@f3:	
  1013                           
  1014                           ; 3 bytes @ 0x24
  1015  0044                     	ds	3
  1016  0047                     ___ftdiv@exp:	
  1017                           
  1018                           ; 1 bytes @ 0x27
  1019  0047                     	ds	1
  1020  0048                     ___ftdiv@sign:	
  1021                           
  1022                           ; 1 bytes @ 0x28
  1023  0048                     	ds	1
  1024  0049                     ?___fttol:	
  1025  0049                     ___fttol@f1:	
  1026                           ; 4 bytes @ 0x29
  1027                           
  1028                           
  1029                           ; 3 bytes @ 0x29
  1030  0049                     	ds	4
  1031  004D                     ??___fttol:	
  1032                           
  1033                           ; 1 bytes @ 0x2D
  1034  004D                     	ds	4
  1035  0051                     ___fttol@sign1:	
  1036                           
  1037                           ; 1 bytes @ 0x31
  1038  0051                     	ds	1
  1039  0052                     ___fttol@lval:	
  1040                           
  1041                           ; 4 bytes @ 0x32
  1042  0052                     	ds	4
  1043  0056                     ___fttol@exp1:	
  1044                           
  1045                           ; 1 bytes @ 0x36
  1046  0056                     	ds	1
  1047  0057                     ??_Task_vidGetTemp:	
  1048  0057                     ??_TASK_vidWaterConditioning:	
  1049                           ; 1 bytes @ 0x37
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x37
  1053  0057                     	ds	6
  1054  005D                     ??_main:	
  1055                           
  1056                           ; 1 bytes @ 0x3D
  1057  005D                     	ds	1
  1058                           
  1059                           	psect	maintext
  1060  0035                     __pmaintext:	
  1061 ;;
  1062 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1063 ;;
  1064 ;; *************** function _main *****************
  1065 ;; Defined at:
  1066 ;;		line 25 in file "main.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;		None
  1069 ;; Auto vars:     Size  Location     Type
  1070 ;;		None
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  1    wreg      void 
  1073 ;; Registers used:
  1074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1075 ;; Tracked objects:
  1076 ;;		On entry : B00/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1080 ;;      Params:         0       0       0       0       0
  1081 ;;      Locals:         0       0       0       0       0
  1082 ;;      Temps:          0       1       0       0       0
  1083 ;;      Totals:         0       1       0       0       0
  1084 ;;Total ram usage:        1 bytes
  1085 ;; Hardware stack levels required when called:    5
  1086 ;; This function calls:
  1087 ;;		_ADC_Init
  1088 ;;		_DisplaySevenSegment_init
  1089 ;;		_HW_init
  1090 ;;		_TASK_vidReadOnOffSwitch
  1091 ;;		_TASK_vidReadUPDOWNSwitch
  1092 ;;		_TASK_vidSwitchOFFALLPeripherals
  1093 ;;		_TASK_vidWaterConditioning
  1094 ;;		_Task_vidDisplayTemp
  1095 ;;		_Task_vidGetTemp
  1096 ;;		_Timer0_init
  1097 ;;		_Vid_WriteExternalEEPROM
  1098 ;;		_i2c_init
  1099 ;;		_u8_ReadExternalEEPROM
  1100 ;; This function is called by:
  1101 ;;		Startup code after reset
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _main
  1107  0035                     _main:	
  1108                           
  1109                           ;main.c: 28: ADC_Init();
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1113  0035  120A  158A  2706  120A  118A  	fcall	_ADC_Init
  1114                           
  1115                           ;main.c: 29: HW_init();
  1116  003A  120A  158A  2721  120A  118A  	fcall	_HW_init
  1117                           
  1118                           ;main.c: 30: Timer0_init();
  1119  003F  120A  158A  26C0  120A  118A  	fcall	_Timer0_init
  1120                           
  1121                           ;main.c: 31: DisplaySevenSegment_init();
  1122  0044  120A  158A  2695  120A  118A  	fcall	_DisplaySevenSegment_init
  1123                           
  1124                           ;main.c: 32: i2c_init();
  1125  0049  120A  158A  2699  120A  118A  	fcall	_i2c_init
  1126                           
  1127                           ;main.c: 34: Temp = u8_ReadExternalEEPROM(10);
  1128  004E  300A               	movlw	10
  1129  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0051  00A3               	movwf	u8_ReadExternalEEPROM@addr
  1132  0052  3000               	movlw	0
  1133  0053  00A4               	movwf	u8_ReadExternalEEPROM@addr+1
  1134  0054  120A  118A  2760  120A  118A  	fcall	_u8_ReadExternalEEPROM
  1135  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1136  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1137  005B  00DD               	movwf	??_main
  1138  005C  085D               	movf	??_main,w
  1139  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1140  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1141  005F  00D3               	movwf	_Temp^(0+128)	;volatile
  1142                           
  1143                           ;main.c: 35: if((Temp < 35) || (Temp > 75))
  1144  0060  3023               	movlw	35
  1145  0061  0253               	subwf	_Temp^(0+128),w	;volatile
  1146  0062  1C03               	skipc
  1147  0063  2868               	goto	l2504
  1148  0064  304C               	movlw	76
  1149  0065  0253               	subwf	_Temp^(0+128),w	;volatile
  1150  0066  1C03               	skipc
  1151  0067  296E               	goto	l2600
  1152  0068                     l2504:	
  1153                           
  1154                           ;main.c: 36: {
  1155                           ;main.c: 38: Temp = 60;
  1156  0068  303C               	movlw	60
  1157  0069  1283               	bcf	3,5	;RP0=0, select bank0
  1158  006A  1303               	bcf	3,6	;RP1=0, select bank0
  1159  006B  00DD               	movwf	??_main
  1160  006C  085D               	movf	??_main,w
  1161  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1162  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1163  006F  00D3               	movwf	_Temp^(0+128)	;volatile
  1164                           
  1165                           ;main.c: 42: {
  1166                           ;main.c: 43: switch(ElectricHeaterCurrentState)
  1167                           
  1168                           ;main.c: 39: }
  1169                           ;main.c: 41: while(1)
  1170  0070  296E               	goto	l2600
  1171  0071                     l2506:	
  1172                           ;main.c: 44: {
  1173                           ;main.c: 45: case ElectricWaterHeaterOn:
  1174                           
  1175                           
  1176                           ;main.c: 46: TASK_vidReadOnOffSwitch( );
  1177  0071  120A  158A  26ED  120A  118A  	fcall	_TASK_vidReadOnOffSwitch
  1178                           
  1179                           ;main.c: 47: TASK_vidReadUPDOWNSwitch( );
  1180  0076  120A  158A  2796  120A  118A  	fcall	_TASK_vidReadUPDOWNSwitch
  1181                           
  1182                           ;main.c: 48: if(ChangeMode == (1u))
  1183  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1184  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1185  007D  0368               	decf	_ChangeMode,w
  1186  007E  1D03               	btfss	3,2
  1187  007F  288E               	goto	l2518
  1188                           
  1189                           ;main.c: 49: {
  1190                           ;main.c: 50: INTCONbits.TMR0IE = 0;
  1191  0080  128B               	bcf	11,5	;volatile
  1192                           
  1193                           ;main.c: 51: TASK_vidSwitchOFFALLPeripherals();
  1194  0081  120A  158A  26AA  120A  118A  	fcall	_TASK_vidSwitchOFFALLPeripherals
  1195                           
  1196                           ;main.c: 52: ElectricHeaterCurrentState = ElectricWaterHeaterOff ;
  1197  0086  3002               	movlw	2
  1198  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0089  00DD               	movwf	??_main
  1201  008A  085D               	movf	??_main,w
  1202  008B  00ED               	movwf	_ElectricHeaterCurrentState
  1203                           
  1204                           ;main.c: 53: ChangeMode = (0u);
  1205  008C  01E8               	clrf	_ChangeMode
  1206                           
  1207                           ;main.c: 54: }
  1208  008D  296E               	goto	l2600
  1209  008E                     l2518:	
  1210                           
  1211                           ;main.c: 55: else if(UP_Switch == (1u) || Down_switch == (1u))
  1212  008E  036A               	decf	_UP_Switch,w
  1213  008F  1D03               	btfss	3,2
  1214  0090  0369               	decf	_Down_switch,w
  1215  0091  1D03               	btfss	3,2
  1216  0092  28A0               	goto	l2528
  1217                           
  1218                           ;main.c: 56: {
  1219                           ;main.c: 57: ElectricHeaterCurrentState = ElectricalWaterHeaterSet ;
  1220  0093  01ED               	clrf	_ElectricHeaterCurrentState
  1221  0094  0AED               	incf	_ElectricHeaterCurrentState,f
  1222                           
  1223                           ;main.c: 58: Time_out=0;
  1224  0095  3000               	movlw	0
  1225  0096  00E1               	movwf	_Time_out+3
  1226  0097  3000               	movlw	0
  1227  0098  00E0               	movwf	_Time_out+2
  1228  0099  3000               	movlw	0
  1229  009A  00DF               	movwf	_Time_out+1
  1230  009B  3000               	movlw	0
  1231  009C  00DE               	movwf	_Time_out
  1232                           
  1233                           ;main.c: 59: UP_Switch = (0u);
  1234  009D  01EA               	clrf	_UP_Switch
  1235                           
  1236                           ;main.c: 60: Down_switch = (0u);
  1237  009E  01E9               	clrf	_Down_switch
  1238                           
  1239                           ;main.c: 61: }
  1240  009F  296E               	goto	l2600
  1241  00A0                     l2528:	
  1242                           
  1243                           ;main.c: 62: else
  1244                           ;main.c: 63: {
  1245                           ;main.c: 64: Task_vidGetTemp();
  1246  00A0  120A  118A  24D1  120A  118A  	fcall	_Task_vidGetTemp
  1247                           
  1248                           ;main.c: 65: Task_vidDisplayTemp(CurrentTemp);
  1249  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  1250  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  1251  00A7  0852               	movf	_CurrentTemp^(0+128),w
  1252  00A8  120A  118A  2671  120A  118A  	fcall	_Task_vidDisplayTemp
  1253  00AD  293A               	goto	L3
  1254  00AE                     l2538:	
  1255                           ;main.c: 74: case ElectricalWaterHeaterSet:
  1256                           
  1257                           ;main.c: 70: }
  1258                           ;main.c: 71: }
  1259                           ;main.c: 73: break;
  1260                           
  1261                           ;main.c: 69: SetTempCount=0;
  1262                           
  1263                           ;main.c: 67: {
  1264                           ;main.c: 68: TASK_vidWaterConditioning();
  1265                           
  1266                           ;main.c: 66: if(SetTempCount>=3)
  1267                           
  1268                           
  1269                           ;main.c: 76: TASK_vidReadUPDOWNSwitch( );
  1270  00AE  120A  158A  2796  120A  118A  	fcall	_TASK_vidReadUPDOWNSwitch
  1271                           
  1272                           ;main.c: 77: if ( ( UP_Switch == (1u) )
  1273                           ;main.c: 78: && ( Down_switch == (0u) ) )
  1274  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1275  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1276  00B5  036A               	decf	_UP_Switch,w
  1277  00B6  1D03               	btfss	3,2
  1278  00B7  28DC               	goto	l2554
  1279  00B8  0869               	movf	_Down_switch,w
  1280  00B9  1D03               	btfss	3,2
  1281  00BA  28DC               	goto	l2554
  1282                           
  1283                           ;main.c: 79: {
  1284                           ;main.c: 80: if(Temp < 75)
  1285  00BB  304B               	movlw	75
  1286  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1287  00BD  1303               	bcf	3,6	;RP1=0, select bank1
  1288  00BE  0253               	subwf	_Temp^(0+128),w	;volatile
  1289  00BF  1803               	skipnc
  1290  00C0  28C4               	goto	l2548
  1291                           
  1292                           ;main.c: 81: {
  1293                           ;main.c: 82: Temp = Temp + (unsigned char)5;
  1294  00C1  0853               	movf	_Temp^(0+128),w	;volatile
  1295  00C2  3E05               	addlw	5
  1296  00C3  28C9               	goto	L1
  1297  00C4                     l2548:	
  1298                           ;main.c: 83: }
  1299                           
  1300                           
  1301                           ;main.c: 84: else if(Temp >= (unsigned char) 75)
  1302  00C4  304B               	movlw	75
  1303  00C5  0253               	subwf	_Temp^(0+128),w	;volatile
  1304  00C6  1C03               	skipc
  1305  00C7  28D0               	goto	l273
  1306                           
  1307                           ;main.c: 85: {
  1308                           ;main.c: 86: Temp = (unsigned char) 75;
  1309  00C8  304B               	movlw	75
  1310  00C9                     L1:	
  1311  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1312  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1313  00CB  00DD               	movwf	??_main
  1314  00CC  085D               	movf	??_main,w
  1315  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1316  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1317  00CF  00D3               	movwf	_Temp^(0+128)	;volatile
  1318  00D0                     l273:	
  1319                           
  1320                           ;main.c: 87: }
  1321                           ;main.c: 88: Time_out = 0;
  1322  00D0  3000               	movlw	0
  1323  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1324  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1325  00D3  00E1               	movwf	_Time_out+3
  1326  00D4  3000               	movlw	0
  1327  00D5  00E0               	movwf	_Time_out+2
  1328  00D6  3000               	movlw	0
  1329  00D7  00DF               	movwf	_Time_out+1
  1330  00D8  3000               	movlw	0
  1331  00D9  00DE               	movwf	_Time_out
  1332                           
  1333                           ;main.c: 89: UP_Switch = (0u);
  1334  00DA  01EA               	clrf	_UP_Switch
  1335                           
  1336                           ;main.c: 90: }
  1337  00DB  2902               	goto	l2568
  1338  00DC                     l2554:	
  1339                           
  1340                           ;main.c: 91: else if ( ( UP_Switch == (0u) )
  1341                           ;main.c: 92: && ( Down_switch == (1u) ) )
  1342  00DC  086A               	movf	_UP_Switch,w
  1343  00DD  1D03               	btfss	3,2
  1344  00DE  2902               	goto	l2568
  1345  00DF  0369               	decf	_Down_switch,w
  1346  00E0  1D03               	btfss	3,2
  1347  00E1  2902               	goto	l2568
  1348                           
  1349                           ;main.c: 93: {
  1350                           ;main.c: 94: if(Temp>35)
  1351  00E2  3024               	movlw	36
  1352  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  1353  00E4  1303               	bcf	3,6	;RP1=0, select bank1
  1354  00E5  0253               	subwf	_Temp^(0+128),w	;volatile
  1355  00E6  1C03               	skipc
  1356  00E7  28EB               	goto	l2562
  1357                           
  1358                           ;main.c: 95: {
  1359                           ;main.c: 96: Temp=Temp - (unsigned char) 5;
  1360  00E8  0853               	movf	_Temp^(0+128),w	;volatile
  1361  00E9  3EFB               	addlw	251
  1362  00EA  28F0               	goto	L2
  1363  00EB                     l2562:	
  1364                           ;main.c: 97: }
  1365                           
  1366                           
  1367                           ;main.c: 98: else if(Temp<= (unsigned char) 35)
  1368  00EB  3024               	movlw	36
  1369  00EC  0253               	subwf	_Temp^(0+128),w	;volatile
  1370  00ED  1803               	skipnc
  1371  00EE  28F7               	goto	l278
  1372                           
  1373                           ;main.c: 99: {
  1374                           ;main.c: 100: Temp=(unsigned char) 35;
  1375  00EF  3023               	movlw	35
  1376  00F0                     L2:	
  1377  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1378  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1379  00F2  00DD               	movwf	??_main
  1380  00F3  085D               	movf	??_main,w
  1381  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1382  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  1383  00F6  00D3               	movwf	_Temp^(0+128)	;volatile
  1384  00F7                     l278:	
  1385                           
  1386                           ;main.c: 101: }
  1387                           ;main.c: 103: Time_out=0;
  1388  00F7  3000               	movlw	0
  1389  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1390  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1391  00FA  00E1               	movwf	_Time_out+3
  1392  00FB  3000               	movlw	0
  1393  00FC  00E0               	movwf	_Time_out+2
  1394  00FD  3000               	movlw	0
  1395  00FE  00DF               	movwf	_Time_out+1
  1396  00FF  3000               	movlw	0
  1397  0100  00DE               	movwf	_Time_out
  1398                           
  1399                           ;main.c: 104: Down_switch = (0u);
  1400  0101  01E9               	clrf	_Down_switch
  1401  0102                     l2568:	
  1402                           ;main.c: 106: else
  1403                           ;main.c: 107: {
  1404                           
  1405                           ;main.c: 105: }
  1406                           
  1407                           
  1408                           ;main.c: 109: }
  1409                           ;main.c: 111: if (Time_out >= 137)
  1410  0102  0861               	movf	_Time_out+3,w
  1411  0103  1D03               	btfss	3,2
  1412  0104  2911               	goto	l2570
  1413  0105  0860               	movf	_Time_out+2,w
  1414  0106  1D03               	btfss	3,2
  1415  0107  2911               	goto	l2570
  1416  0108  085F               	movf	_Time_out+1,w
  1417  0109  1D03               	btfss	3,2
  1418  010A  2911               	goto	l2570
  1419  010B  3089               	movlw	137
  1420  010C  025E               	subwf	_Time_out,w
  1421  010D  1D03               	skipz
  1422  010E  290F               	goto	u3103
  1423  010F                     u3103:	
  1424  010F  1C03               	btfss	3,0
  1425  0110  292D               	goto	l2576
  1426  0111                     l2570:	
  1427                           
  1428                           ;main.c: 112: {
  1429                           ;main.c: 113: ElectricHeaterCurrentState = ElectricWaterHeaterOn;
  1430  0111  01ED               	clrf	_ElectricHeaterCurrentState
  1431                           
  1432                           ;main.c: 114: Vid_WriteExternalEEPROM(10,Temp);
  1433  0112  300A               	movlw	10
  1434  0113  00A8               	movwf	Vid_WriteExternalEEPROM@addr
  1435  0114  3000               	movlw	0
  1436  0115  00A9               	movwf	Vid_WriteExternalEEPROM@addr+1
  1437  0116  1683               	bsf	3,5	;RP0=1, select bank1
  1438  0117  1303               	bcf	3,6	;RP1=0, select bank1
  1439  0118  0853               	movf	_Temp^(0+128),w	;volatile
  1440  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1441  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1442  011B  00DD               	movwf	??_main
  1443  011C  085D               	movf	??_main,w
  1444  011D  00AA               	movwf	Vid_WriteExternalEEPROM@val
  1445  011E  120A  118A  2617  120A  118A  	fcall	_Vid_WriteExternalEEPROM
  1446                           
  1447                           ;main.c: 115: Time_out=0;
  1448  0123  3000               	movlw	0
  1449  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0126  00E1               	movwf	_Time_out+3
  1452  0127  3000               	movlw	0
  1453  0128  00E0               	movwf	_Time_out+2
  1454  0129  3000               	movlw	0
  1455  012A  00DF               	movwf	_Time_out+1
  1456  012B  3000               	movlw	0
  1457  012C  00DE               	movwf	_Time_out
  1458  012D                     l2576:	
  1459                           
  1460                           ;main.c: 116: }
  1461                           ;main.c: 118: Task_vidDisplayTemp((unsigned char)Temp);
  1462  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1463  012E  1303               	bcf	3,6	;RP1=0, select bank1
  1464  012F  0853               	movf	_Temp^(0+128),w	;volatile
  1465  0130  120A  118A  2671  120A  118A  	fcall	_Task_vidDisplayTemp
  1466                           
  1467                           ;main.c: 119: Task_vidGetTemp();
  1468  0135  120A  118A  24D1  120A  118A  	fcall	_Task_vidGetTemp
  1469  013A                     L3:	
  1470                           
  1471                           ;main.c: 120: if(SetTempCount>=3)
  1472  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1473  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1474  013C  0865               	movf	_SetTempCount+3,w	;volatile
  1475  013D  1D03               	btfss	3,2
  1476  013E  294B               	goto	l2582
  1477  013F  0864               	movf	_SetTempCount+2,w	;volatile
  1478  0140  1D03               	btfss	3,2
  1479  0141  294B               	goto	l2582
  1480  0142  0863               	movf	_SetTempCount+1,w	;volatile
  1481  0143  1D03               	btfss	3,2
  1482  0144  294B               	goto	l2582
  1483  0145  3003               	movlw	3
  1484  0146  0262               	subwf	_SetTempCount,w	;volatile
  1485  0147  1D03               	skipz
  1486  0148  2949               	goto	u3113
  1487  0149                     u3113:	
  1488  0149  1C03               	btfss	3,0
  1489  014A  296E               	goto	l2600
  1490  014B                     l2582:	
  1491                           
  1492                           ;main.c: 121: {
  1493                           ;main.c: 122: TASK_vidWaterConditioning();
  1494  014B  120A  118A  217C  120A  118A  	fcall	_TASK_vidWaterConditioning
  1495                           
  1496                           ;main.c: 123: SetTempCount=0;
  1497  0150  3000               	movlw	0
  1498  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0153  00E5               	movwf	_SetTempCount+3	;volatile
  1501  0154  3000               	movlw	0
  1502  0155  00E4               	movwf	_SetTempCount+2	;volatile
  1503  0156  3000               	movlw	0
  1504  0157  00E3               	movwf	_SetTempCount+1	;volatile
  1505  0158  3000               	movlw	0
  1506  0159  00E2               	movwf	_SetTempCount	;volatile
  1507                           
  1508                           ;main.c: 124: }
  1509                           ;main.c: 127: break;
  1510  015A  296E               	goto	l2600
  1511  015B                     l2586:	
  1512                           ;main.c: 129: case ElectricWaterHeaterOff:
  1513                           
  1514                           
  1515                           ;main.c: 130: TASK_vidReadOnOffSwitch();
  1516  015B  120A  158A  26ED  120A  118A  	fcall	_TASK_vidReadOnOffSwitch
  1517                           
  1518                           ;main.c: 132: if(ChangeMode == (1u))
  1519  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0162  0368               	decf	_ChangeMode,w
  1522  0163  1D03               	btfss	3,2
  1523  0164  2969               	goto	l2596
  1524                           
  1525                           ;main.c: 133: {
  1526                           ;main.c: 134: ElectricHeaterCurrentState = ElectricWaterHeaterOn ;
  1527  0165  01ED               	clrf	_ElectricHeaterCurrentState
  1528                           
  1529                           ;main.c: 135: INTCONbits.TMR0IE = 1;
  1530  0166  168B               	bsf	11,5	;volatile
  1531                           
  1532                           ;main.c: 136: ADCON0bits.ADON=1;
  1533  0167  141F               	bsf	31,0	;volatile
  1534                           
  1535                           ;main.c: 138: ChangeMode = (0u);
  1536  0168  01E8               	clrf	_ChangeMode
  1537  0169                     l2596:	
  1538                           
  1539                           ;main.c: 139: }
  1540                           ;main.c: 140: TASK_vidReadOnOffSwitch();
  1541  0169  120A  158A  26ED  120A  118A  	fcall	_TASK_vidReadOnOffSwitch
  1542  016E                     l2600:	
  1543                           ;main.c: 144: }
  1544                           
  1545                           ;main.c: 143: break;
  1546                           
  1547                           ;main.c: 142: default:
  1548                           
  1549                           ;main.c: 141: break;
  1550                           
  1551  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1552  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0170  086D               	movf	_ElectricHeaterCurrentState,w
  1554                           
  1555                           ; Switch size 1, requested type "space"
  1556                           ; Number of cases is 3, Range of values is 0 to 2
  1557                           ; switch strategies available:
  1558                           ; Name         Instructions Cycles
  1559                           ; simple_byte           10     6 (average)
  1560                           ; direct_byte           17     8 (fixed)
  1561                           ; jumptable            260     6 (fixed)
  1562                           ;	Chosen strategy is simple_byte
  1563  0171  3A00               	xorlw	0	; case 0
  1564  0172  1903               	skipnz
  1565  0173  2871               	goto	l2506
  1566  0174  3A01               	xorlw	1	; case 1
  1567  0175  1903               	skipnz
  1568  0176  28AE               	goto	l2538
  1569  0177  3A03               	xorlw	3	; case 2
  1570  0178  1903               	skipnz
  1571  0179  295B               	goto	l2586
  1572  017A  296E               	goto	l2600
  1573  017B  296E               	goto	l2600
  1574  017C                     __end_of_main:	
  1575                           
  1576                           	psect	text1
  1577  0E99                     __ptext1:	
  1578 ;; *************** function _i2c_init *****************
  1579 ;; Defined at:
  1580 ;;		line 28 in file "i2c.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		None
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           
  1609                           ;psect for function _i2c_init
  1610  0E99                     _i2c_init:	
  1611                           
  1612                           ;i2c.c: 30: TRISCbits.TRISC4=0;
  1613                           
  1614                           ;incstack = 0
  1615                           ; Regs used in _i2c_init: []
  1616  0E99  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0E9A  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0E9B  1207               	bcf	7,4	;volatile
  1619                           
  1620                           ;i2c.c: 31: PORTCbits.RC3=1;
  1621  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  1623  0E9E  1587               	bsf	7,3	;volatile
  1624                           
  1625                           ;i2c.c: 32: PORTCbits.RC4=1;
  1626  0E9F  1607               	bsf	7,4	;volatile
  1627  0EA0  0008               	return
  1628  0EA1                     __end_of_i2c_init:	
  1629                           
  1630                           	psect	text2
  1631  0617                     __ptext2:	
  1632 ;; *************** function _Vid_WriteExternalEEPROM *****************
  1633 ;; Defined at:
  1634 ;;		line 41 in file "eeprom_ext.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  addr            2    8[BANK0 ] unsigned int 
  1637 ;;  val             1   10[BANK0 ] unsigned char 
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;  tmp             2   16[BANK0 ] unsigned int 
  1640 ;;  nt              1   15[BANK0 ] unsigned char 
  1641 ;;  al              1   14[BANK0 ] unsigned char 
  1642 ;;  ah              1   13[BANK0 ] unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0, pclath, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       3       0       0       0
  1653 ;;      Locals:         0       5       0       0       0
  1654 ;;      Temps:          0       2       0       0       0
  1655 ;;      Totals:         0      10       0       0       0
  1656 ;;Total ram usage:       10 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    4
  1659 ;; This function calls:
  1660 ;;		_i2c_start
  1661 ;;		_i2c_stop
  1662 ;;		_i2c_wb
  1663 ;;		_u8_ReadExternalEEPROM
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function _Vid_WriteExternalEEPROM
  1671  0617                     _Vid_WriteExternalEEPROM:	
  1672                           
  1673                           ;eeprom_ext.c: 43: unsigned int tmp;
  1674                           ;eeprom_ext.c: 44: unsigned char ah;
  1675                           ;eeprom_ext.c: 45: unsigned char al;
  1676                           ;eeprom_ext.c: 46: unsigned char nt;
  1677                           ;eeprom_ext.c: 48: tmp=val;
  1678                           
  1679                           ;incstack = 0
  1680                           ; Regs used in _Vid_WriteExternalEEPROM: [wreg+status,2+status,0+pclath+cstack]
  1681  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0619  082A               	movf	Vid_WriteExternalEEPROM@val,w
  1684  061A  00AB               	movwf	??_Vid_WriteExternalEEPROM
  1685  061B  01AC               	clrf	??_Vid_WriteExternalEEPROM+1
  1686  061C  082B               	movf	??_Vid_WriteExternalEEPROM,w
  1687  061D  00B0               	movwf	Vid_WriteExternalEEPROM@tmp
  1688  061E  082C               	movf	??_Vid_WriteExternalEEPROM+1,w
  1689  061F  00B1               	movwf	Vid_WriteExternalEEPROM@tmp+1
  1690                           
  1691                           ;eeprom_ext.c: 49: ah=(addr&0x0100)>>8;
  1692  0620  0829               	movf	Vid_WriteExternalEEPROM@addr+1,w
  1693  0621  3901               	andlw	1
  1694  0622  00AB               	movwf	??_Vid_WriteExternalEEPROM
  1695  0623  082B               	movf	??_Vid_WriteExternalEEPROM,w
  1696  0624  00AD               	movwf	Vid_WriteExternalEEPROM@ah
  1697                           
  1698                           ;eeprom_ext.c: 50: al=addr&0x00FF;
  1699  0625  0828               	movf	Vid_WriteExternalEEPROM@addr,w
  1700  0626  00AB               	movwf	??_Vid_WriteExternalEEPROM
  1701  0627  082B               	movf	??_Vid_WriteExternalEEPROM,w
  1702  0628  00AE               	movwf	Vid_WriteExternalEEPROM@al
  1703                           
  1704                           ;eeprom_ext.c: 51: nt=0;
  1705  0629  01AF               	clrf	Vid_WriteExternalEEPROM@nt
  1706  062A                     l2482:	
  1707                           ;eeprom_ext.c: 53: do
  1708                           
  1709                           
  1710                           ;eeprom_ext.c: 54: {
  1711                           ;eeprom_ext.c: 55: i2c_start();
  1712  062A  120A  158A  26CD  120A  118A  	fcall	_i2c_start
  1713                           
  1714                           ;eeprom_ext.c: 56: if(ah)
  1715  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0631  082D               	movf	Vid_WriteExternalEEPROM@ah,w
  1718  0632  1903               	btfsc	3,2
  1719  0633  2E36               	goto	l2488
  1720                           
  1721                           ;eeprom_ext.c: 57: {
  1722                           ;eeprom_ext.c: 58: i2c_wb(0xA2);
  1723  0634  30A2               	movlw	162
  1724  0635  2E37               	goto	L4
  1725  0636                     l2488:	
  1726                           ;eeprom_ext.c: 59: }
  1727                           
  1728                           
  1729                           ;eeprom_ext.c: 60: else
  1730                           ;eeprom_ext.c: 61: {
  1731                           ;eeprom_ext.c: 62: i2c_wb(0xA0);
  1732  0636  30A0               	movlw	160
  1733  0637                     L4:	
  1734  0637  120A  118A  27A9  120A  118A  	fcall	_i2c_wb
  1735                           
  1736                           ;eeprom_ext.c: 63: }
  1737                           ;eeprom_ext.c: 64: i2c_wb(al);
  1738  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1739  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1740  063E  082E               	movf	Vid_WriteExternalEEPROM@al,w
  1741  063F  120A  118A  27A9  120A  118A  	fcall	_i2c_wb
  1742                           
  1743                           ;eeprom_ext.c: 65: i2c_wb(tmp);
  1744  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1746  0646  0830               	movf	Vid_WriteExternalEEPROM@tmp,w
  1747  0647  120A  118A  27A9  120A  118A  	fcall	_i2c_wb
  1748                           
  1749                           ;eeprom_ext.c: 66: i2c_stop();
  1750  064C  120A  158A  26DD  120A  118A  	fcall	_i2c_stop
  1751                           
  1752                           ;eeprom_ext.c: 68: nt++;
  1753  0651  3001               	movlw	1
  1754  0652  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0653  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0654  00AB               	movwf	??_Vid_WriteExternalEEPROM
  1757  0655  082B               	movf	??_Vid_WriteExternalEEPROM,w
  1758  0656  07AF               	addwf	Vid_WriteExternalEEPROM@nt,f
  1759                           
  1760                           ;eeprom_ext.c: 69: }
  1761                           ;eeprom_ext.c: 70: while((tmp != u8_ReadExternalEEPROM(addr))&&(nt < 10));
  1762  0657  0829               	movf	Vid_WriteExternalEEPROM@addr+1,w
  1763  0658  00A4               	movwf	u8_ReadExternalEEPROM@addr+1
  1764  0659  0828               	movf	Vid_WriteExternalEEPROM@addr,w
  1765  065A  00A3               	movwf	u8_ReadExternalEEPROM@addr
  1766  065B  120A  118A  2760  120A  118A  	fcall	_u8_ReadExternalEEPROM
  1767  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1768  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1769  0662  00AB               	movwf	??_Vid_WriteExternalEEPROM
  1770  0663  01AC               	clrf	??_Vid_WriteExternalEEPROM+1
  1771  0664  0831               	movf	Vid_WriteExternalEEPROM@tmp+1,w
  1772  0665  062C               	xorwf	??_Vid_WriteExternalEEPROM+1,w
  1773  0666  1D03               	skipz
  1774  0667  2E6A               	goto	u2945
  1775  0668  0830               	movf	Vid_WriteExternalEEPROM@tmp,w
  1776  0669  062B               	xorwf	??_Vid_WriteExternalEEPROM,w
  1777  066A                     u2945:	
  1778  066A  1903               	skipnz
  1779  066B  0008               	return
  1780  066C  300A               	movlw	10
  1781  066D  022F               	subwf	Vid_WriteExternalEEPROM@nt,w
  1782  066E  1803               	btfsc	3,0
  1783  066F  0008               	return
  1784  0670  2E2A               	goto	l2482
  1785  0671                     __end_of_Vid_WriteExternalEEPROM:	
  1786                           
  1787                           	psect	text3
  1788  0760                     __ptext3:	
  1789 ;; *************** function _u8_ReadExternalEEPROM *****************
  1790 ;; Defined at:
  1791 ;;		line 5 in file "eeprom_ext.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  addr            2    3[BANK0 ] unsigned int 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  ah              1    7[BANK0 ] unsigned char 
  1796 ;;  al              1    6[BANK0 ] unsigned char 
  1797 ;;  ret             1    5[BANK0 ] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      unsigned char 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, pclath, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1807 ;;      Params:         0       2       0       0       0
  1808 ;;      Locals:         0       3       0       0       0
  1809 ;;      Temps:          1       0       0       0       0
  1810 ;;      Totals:         1       5       0       0       0
  1811 ;;Total ram usage:        6 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    3
  1814 ;; This function calls:
  1815 ;;		_i2c_rb
  1816 ;;		_i2c_start
  1817 ;;		_i2c_stop
  1818 ;;		_i2c_wb
  1819 ;; This function is called by:
  1820 ;;		_Vid_WriteExternalEEPROM
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _u8_ReadExternalEEPROM
  1827  0760                     _u8_ReadExternalEEPROM:	
  1828                           
  1829                           ;eeprom_ext.c: 7: unsigned char ret;
  1830                           ;eeprom_ext.c: 8: unsigned char ah;
  1831                           ;eeprom_ext.c: 9: unsigned char al;
  1832                           ;eeprom_ext.c: 11: ah=(addr&0x0100)>>8;
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in _u8_ReadExternalEEPROM: [wreg+status,2+status,0+pclath+cstack]
  1836  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0762  0824               	movf	u8_ReadExternalEEPROM@addr+1,w
  1839  0763  3901               	andlw	1
  1840  0764  00F6               	movwf	??_u8_ReadExternalEEPROM
  1841  0765  0876               	movf	??_u8_ReadExternalEEPROM,w
  1842  0766  00A7               	movwf	u8_ReadExternalEEPROM@ah
  1843                           
  1844                           ;eeprom_ext.c: 12: al=addr&0x00FF;
  1845  0767  0823               	movf	u8_ReadExternalEEPROM@addr,w
  1846  0768  00F6               	movwf	??_u8_ReadExternalEEPROM
  1847  0769  0876               	movf	??_u8_ReadExternalEEPROM,w
  1848  076A  00A6               	movwf	u8_ReadExternalEEPROM@al
  1849                           
  1850                           ;eeprom_ext.c: 14: i2c_start();
  1851  076B  120A  158A  26CD  120A  118A  	fcall	_i2c_start
  1852                           
  1853                           ;eeprom_ext.c: 15: if(ah)
  1854  0770  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0771  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0772  0827               	movf	u8_ReadExternalEEPROM@ah,w
  1857  0773  1903               	btfsc	3,2
  1858  0774  2F77               	goto	l2220
  1859                           
  1860                           ;eeprom_ext.c: 16: {
  1861                           ;eeprom_ext.c: 17: i2c_wb(0xA2);
  1862  0775  30A2               	movlw	162
  1863  0776  2F78               	goto	L5
  1864  0777                     l2220:	
  1865                           ;eeprom_ext.c: 18: }
  1866                           
  1867                           
  1868                           ;eeprom_ext.c: 19: else
  1869                           ;eeprom_ext.c: 20: {
  1870                           ;eeprom_ext.c: 21: i2c_wb(0xA0);
  1871  0777  30A0               	movlw	160
  1872  0778                     L5:	
  1873  0778  120A  118A  27A9  120A  118A  	fcall	_i2c_wb
  1874                           
  1875                           ;eeprom_ext.c: 22: }
  1876                           ;eeprom_ext.c: 23: i2c_wb(al);
  1877  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1878  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1879  077F  0826               	movf	u8_ReadExternalEEPROM@al,w
  1880  0780  120A  118A  27A9  120A  118A  	fcall	_i2c_wb
  1881                           
  1882                           ;eeprom_ext.c: 25: i2c_start();
  1883  0785  120A  158A  26CD  120A  118A  	fcall	_i2c_start
  1884                           
  1885                           ;eeprom_ext.c: 26: if(ah)
  1886  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1887  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1888  078C  0827               	movf	u8_ReadExternalEEPROM@ah,w
  1889  078D  1903               	btfsc	3,2
  1890  078E  2F91               	goto	l2228
  1891                           
  1892                           ;eeprom_ext.c: 27: {
  1893                           ;eeprom_ext.c: 28: i2c_wb(0xA3);
  1894  078F  30A3               	movlw	163
  1895  0790  2F92               	goto	L6
  1896  0791                     l2228:	
  1897                           ;eeprom_ext.c: 29: }
  1898                           
  1899                           
  1900                           ;eeprom_ext.c: 30: else
  1901                           ;eeprom_ext.c: 31: {
  1902                           ;eeprom_ext.c: 32: i2c_wb(0xA1);
  1903  0791  30A1               	movlw	161
  1904  0792                     L6:	
  1905  0792  120A  118A  27A9  120A  118A  	fcall	_i2c_wb
  1906                           
  1907                           ;eeprom_ext.c: 33: }
  1908                           ;eeprom_ext.c: 34: ret=i2c_rb(1);
  1909  0797  3001               	movlw	1
  1910  0798  120A  118A  26C6  120A  118A  	fcall	_i2c_rb
  1911  079D  00F6               	movwf	??_u8_ReadExternalEEPROM
  1912  079E  0876               	movf	??_u8_ReadExternalEEPROM,w
  1913  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1914  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1915  07A1  00A5               	movwf	u8_ReadExternalEEPROM@ret
  1916                           
  1917                           ;eeprom_ext.c: 35: i2c_stop();
  1918  07A2  120A  158A  26DD   	fcall	_i2c_stop
  1919                           
  1920                           ;eeprom_ext.c: 37: return ret;
  1921  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1922  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1923  07A7  0825               	movf	u8_ReadExternalEEPROM@ret,w
  1924  07A8  0008               	return
  1925  07A9                     __end_of_u8_ReadExternalEEPROM:	
  1926                           
  1927                           	psect	text4
  1928  07A9                     __ptext4:	
  1929 ;; *************** function _i2c_wb *****************
  1930 ;; Defined at:
  1931 ;;		line 53 in file "i2c.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  val             1    wreg     unsigned char 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  val             1    0[BANK0 ] unsigned char 
  1936 ;;  i               1    1[BANK0 ] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, pclath, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         0       0       0       0       0
  1947 ;;      Locals:         0       2       0       0       0
  1948 ;;      Temps:          2       0       0       0       0
  1949 ;;      Totals:         2       2       0       0       0
  1950 ;;Total ram usage:        4 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    2
  1953 ;; This function calls:
  1954 ;;		_Ndelay
  1955 ;; This function is called by:
  1956 ;;		_u8_ReadExternalEEPROM
  1957 ;;		_Vid_WriteExternalEEPROM
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           
  1962                           ;psect for function _i2c_wb
  1963  07A9                     _i2c_wb:	
  1964                           
  1965                           ;incstack = 0
  1966                           ; Regs used in _i2c_wb: [wreg+status,2+status,0+pclath+cstack]
  1967                           ;i2c_wb@val stored from wreg
  1968  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  1969  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  1970  07AB  00A0               	movwf	i2c_wb@val
  1971                           
  1972                           ;i2c.c: 55: unsigned char i;
  1973                           ;i2c.c: 56: PORTCbits.RC3=0;
  1974  07AC  1187               	bcf	7,3	;volatile
  1975                           
  1976                           ;i2c.c: 57: for(i=0;i<8;i++)
  1977  07AD  01A1               	clrf	i2c_wb@i
  1978  07AE  3008               	movlw	8
  1979  07AF  0221               	subwf	i2c_wb@i,w
  1980  07B0  1803               	btfsc	3,0
  1981  07B1  2FD8               	goto	l197
  1982  07B2                     l2068:	
  1983                           
  1984                           ;i2c.c: 58: {
  1985                           ;i2c.c: 59: PORTCbits.RC4=((val>>(7-i))& 0x01);
  1986  07B2  0820               	movf	i2c_wb@val,w
  1987  07B3  00F4               	movwf	??_i2c_wb
  1988  07B4  0321               	decf	i2c_wb@i,w
  1989  07B5  3AFF               	xorlw	255
  1990  07B6  3E07               	addlw	7
  1991  07B7  3E01               	addlw	1
  1992  07B8  2FBB               	goto	u2224
  1993  07B9                     u2225:	
  1994  07B9  1003               	clrc
  1995  07BA  0CF4               	rrf	??_i2c_wb,f
  1996  07BB                     u2224:	
  1997  07BB  3EFF               	addlw	-1
  1998  07BC  1D03               	skipz
  1999  07BD  2FB9               	goto	u2225
  2000  07BE  0874               	movf	??_i2c_wb,w
  2001  07BF  3901               	andlw	1
  2002  07C0  00F5               	movwf	??_i2c_wb+1
  2003  07C1  0EF5               	swapf	??_i2c_wb+1,f
  2004  07C2  0807               	movf	7,w	;volatile
  2005  07C3  0675               	xorwf	??_i2c_wb+1,w
  2006  07C4  39EF               	andlw	-17
  2007  07C5  0675               	xorwf	??_i2c_wb+1,w
  2008  07C6  0087               	movwf	7	;volatile
  2009                           
  2010                           ;i2c.c: 60: PORTCbits.RC3=1;
  2011  07C7  1587               	bsf	7,3	;volatile
  2012                           
  2013                           ;i2c.c: 61: Ndelay();
  2014  07C8  120A  158A  26A1  120A  118A  	fcall	_Ndelay
  2015                           
  2016                           ;i2c.c: 62: PORTCbits.RC3=0;
  2017  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2018  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  2019  07CF  1187               	bcf	7,3	;volatile
  2020  07D0  3001               	movlw	1
  2021  07D1  00F4               	movwf	??_i2c_wb
  2022  07D2  0874               	movf	??_i2c_wb,w
  2023  07D3  07A1               	addwf	i2c_wb@i,f
  2024  07D4  3008               	movlw	8
  2025  07D5  0221               	subwf	i2c_wb@i,w
  2026  07D6  1C03               	skipc
  2027  07D7  2FB2               	goto	l2068
  2028  07D8                     l197:	
  2029                           
  2030                           ;i2c.c: 63: }
  2031                           ;i2c.c: 64: PORTCbits.RC4=1;
  2032  07D8  1607               	bsf	7,4	;volatile
  2033                           
  2034                           ;i2c.c: 65: Ndelay();
  2035  07D9  120A  158A  26A1  120A  118A  	fcall	_Ndelay
  2036                           
  2037                           ;i2c.c: 66: PORTCbits.RC3=1;
  2038  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  2039  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  2040  07E0  1587               	bsf	7,3	;volatile
  2041                           
  2042                           ;i2c.c: 67: Ndelay();
  2043  07E1  120A  158A  26A1   	fcall	_Ndelay
  2044                           
  2045                           ;i2c.c: 68: PORTCbits.RC3=0;
  2046  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  2047  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  2048  07E6  1187               	bcf	7,3	;volatile
  2049  07E7  0008               	return
  2050  07E8                     __end_of_i2c_wb:	
  2051                           
  2052                           	psect	text5
  2053  0EDD                     __ptext5:	
  2054 ;; *************** function _i2c_stop *****************
  2055 ;; Defined at:
  2056 ;;		line 44 in file "i2c.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		status,2, status,0, pclath, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2070 ;;      Params:         0       0       0       0       0
  2071 ;;      Locals:         0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0
  2073 ;;      Totals:         0       0       0       0       0
  2074 ;;Total ram usage:        0 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    2
  2077 ;; This function calls:
  2078 ;;		_Ndelay
  2079 ;; This function is called by:
  2080 ;;		_u8_ReadExternalEEPROM
  2081 ;;		_Vid_WriteExternalEEPROM
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _i2c_stop
  2087  0EDD                     _i2c_stop:	
  2088                           
  2089                           ;i2c.c: 46: PORTCbits.RC3=1;
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  2093  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  2094  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  2095  0EDF  1587               	bsf	7,3	;volatile
  2096                           
  2097                           ;i2c.c: 47: PORTCbits.RC4=0;
  2098  0EE0  1207               	bcf	7,4	;volatile
  2099                           
  2100                           ;i2c.c: 48: Ndelay();
  2101  0EE1  120A  158A  26A1  120A  158A  	fcall	_Ndelay
  2102                           
  2103                           ;i2c.c: 49: PORTCbits.RC4=1;
  2104  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0EE8  1607               	bsf	7,4	;volatile
  2107                           
  2108                           ;i2c.c: 50: Ndelay();
  2109  0EE9  120A  158A  26A1   	fcall	_Ndelay
  2110  0EEC  0008               	return
  2111  0EED                     __end_of_i2c_stop:	
  2112                           
  2113                           	psect	text6
  2114  0ECD                     __ptext6:	
  2115 ;; *************** function _i2c_start *****************
  2116 ;; Defined at:
  2117 ;;		line 35 in file "i2c.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;		None
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		status,2, status,0, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         0       0       0       0       0
  2132 ;;      Locals:         0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0
  2134 ;;      Totals:         0       0       0       0       0
  2135 ;;Total ram usage:        0 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    2
  2138 ;; This function calls:
  2139 ;;		_Ndelay
  2140 ;; This function is called by:
  2141 ;;		_u8_ReadExternalEEPROM
  2142 ;;		_Vid_WriteExternalEEPROM
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           
  2147                           ;psect for function _i2c_start
  2148  0ECD                     _i2c_start:	
  2149                           
  2150                           ;i2c.c: 37: PORTCbits.RC3=1;
  2151                           
  2152                           ;incstack = 0
  2153                           ; Regs used in _i2c_start: [status,2+status,0+pclath+cstack]
  2154  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0ECF  1587               	bsf	7,3	;volatile
  2157                           
  2158                           ;i2c.c: 38: PORTCbits.RC4=1;
  2159  0ED0  1607               	bsf	7,4	;volatile
  2160                           
  2161                           ;i2c.c: 39: Ndelay();
  2162  0ED1  120A  158A  26A1  120A  158A  	fcall	_Ndelay
  2163                           
  2164                           ;i2c.c: 40: PORTCbits.RC4=0;
  2165  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0ED8  1207               	bcf	7,4	;volatile
  2168                           
  2169                           ;i2c.c: 41: Ndelay();
  2170  0ED9  120A  158A  26A1   	fcall	_Ndelay
  2171  0EDC  0008               	return
  2172  0EDD                     __end_of_i2c_start:	
  2173                           
  2174                           	psect	text7
  2175  06C6                     __ptext7:	
  2176 ;; *************** function _i2c_rb *****************
  2177 ;; Defined at:
  2178 ;;		line 71 in file "i2c.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  ack             1    wreg     unsigned char 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  ack             1    0[BANK0 ] unsigned char 
  2183 ;;  i               1    2[BANK0 ] unsigned char 
  2184 ;;  ret             1    1[BANK0 ] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      unsigned char 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       0       0       0       0
  2195 ;;      Locals:         0       3       0       0       0
  2196 ;;      Temps:          2       0       0       0       0
  2197 ;;      Totals:         2       3       0       0       0
  2198 ;;Total ram usage:        5 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:    2
  2201 ;; This function calls:
  2202 ;;		_Ndelay
  2203 ;; This function is called by:
  2204 ;;		_u8_ReadExternalEEPROM
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           
  2209                           ;psect for function _i2c_rb
  2210  06C6                     _i2c_rb:	
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _i2c_rb: [wreg+status,2+status,0+pclath+cstack]
  2214                           ;i2c_rb@ack stored from wreg
  2215  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2216  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2217  06C8  00A0               	movwf	i2c_rb@ack
  2218                           
  2219                           ;i2c.c: 73: char i;
  2220                           ;i2c.c: 74: unsigned char ret=0;
  2221  06C9  01A1               	clrf	i2c_rb@ret
  2222                           
  2223                           ;i2c.c: 76: PORTCbits.RC3=0;
  2224  06CA  1187               	bcf	7,3	;volatile
  2225                           
  2226                           ;i2c.c: 77: TRISCbits.TRISC4=1;
  2227  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  2228  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  2229  06CD  1607               	bsf	7,4	;volatile
  2230                           
  2231                           ;i2c.c: 78: PORTCbits.RC4=1;
  2232  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2233  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2234  06D0  1607               	bsf	7,4	;volatile
  2235                           
  2236                           ;i2c.c: 79: for(i=0;i<8;i++)
  2237  06D1  01A2               	clrf	i2c_rb@i
  2238  06D2  3008               	movlw	8
  2239  06D3  0222               	subwf	i2c_rb@i,w
  2240  06D4  1803               	btfsc	3,0
  2241  06D5  2EF8               	goto	l202
  2242  06D6                     l201:	
  2243                           
  2244                           ;i2c.c: 80: {
  2245                           ;i2c.c: 81: PORTCbits.RC3=1;
  2246  06D6  1587               	bsf	7,3	;volatile
  2247                           
  2248                           ;i2c.c: 82: Ndelay();
  2249  06D7  120A  158A  26A1  120A  118A  	fcall	_Ndelay
  2250                           
  2251                           ;i2c.c: 83: ret|=(PORTCbits.RC4<<(7-i));
  2252  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2253  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  2254  06DE  0E07               	swapf	7,w	;volatile
  2255  06DF  3901               	andlw	1
  2256  06E0  00F4               	movwf	??_i2c_rb
  2257  06E1  0322               	decf	i2c_rb@i,w
  2258  06E2  3AFF               	xorlw	255
  2259  06E3  3E07               	addlw	7
  2260  06E4  3E01               	addlw	1
  2261  06E5  2EE8               	goto	u2254
  2262  06E6                     u2255:	
  2263  06E6  1003               	clrc
  2264  06E7  0DF4               	rlf	??_i2c_rb,f
  2265  06E8                     u2254:	
  2266  06E8  3EFF               	addlw	-1
  2267  06E9  1D03               	skipz
  2268  06EA  2EE6               	goto	u2255
  2269  06EB  0874               	movf	??_i2c_rb,w
  2270  06EC  00F5               	movwf	??_i2c_rb+1
  2271  06ED  0875               	movf	??_i2c_rb+1,w
  2272  06EE  04A1               	iorwf	i2c_rb@ret,f
  2273                           
  2274                           ;i2c.c: 84: PORTCbits.RC3=0;
  2275  06EF  1187               	bcf	7,3	;volatile
  2276  06F0  3001               	movlw	1
  2277  06F1  00F4               	movwf	??_i2c_rb
  2278  06F2  0874               	movf	??_i2c_rb,w
  2279  06F3  07A2               	addwf	i2c_rb@i,f
  2280  06F4  3008               	movlw	8
  2281  06F5  0222               	subwf	i2c_rb@i,w
  2282  06F6  1C03               	skipc
  2283  06F7  2ED6               	goto	l201
  2284  06F8                     l202:	
  2285                           
  2286                           ;i2c.c: 85: }
  2287                           ;i2c.c: 86: TRISCbits.TRISC4=0;
  2288  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  2289  06F9  1303               	bcf	3,6	;RP1=0, select bank1
  2290  06FA  1207               	bcf	7,4	;volatile
  2291                           
  2292                           ;i2c.c: 87: if(ack)
  2293  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  2294  06FC  1303               	bcf	3,6	;RP1=0, select bank0
  2295  06FD  0820               	movf	i2c_rb@ack,w
  2296  06FE  1903               	btfsc	3,2
  2297  06FF  2F02               	goto	l203
  2298                           
  2299                           ;i2c.c: 88: PORTCbits.RC4=0;
  2300  0700  1207               	bcf	7,4	;volatile
  2301  0701  2F03               	goto	l2112
  2302  0702                     l203:	
  2303                           
  2304                           ;i2c.c: 89: else
  2305                           ;i2c.c: 90: PORTCbits.RC4=1;
  2306  0702  1607               	bsf	7,4	;volatile
  2307  0703                     l2112:	
  2308                           
  2309                           ;i2c.c: 91: Ndelay();
  2310  0703  120A  158A  26A1  120A  118A  	fcall	_Ndelay
  2311                           
  2312                           ;i2c.c: 92: PORTCbits.RC3=1;
  2313  0708  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0709  1303               	bcf	3,6	;RP1=0, select bank0
  2315  070A  1587               	bsf	7,3	;volatile
  2316                           
  2317                           ;i2c.c: 93: Ndelay();
  2318  070B  120A  158A  26A1   	fcall	_Ndelay
  2319                           
  2320                           ;i2c.c: 94: PORTCbits.RC3=0;
  2321  070E  1283               	bcf	3,5	;RP0=0, select bank0
  2322  070F  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0710  1187               	bcf	7,3	;volatile
  2324                           
  2325                           ;i2c.c: 96: return ret;
  2326  0711  0821               	movf	i2c_rb@ret,w
  2327  0712  0008               	return
  2328  0713                     __end_of_i2c_rb:	
  2329                           
  2330                           	psect	text8
  2331  0EA1                     __ptext8:	
  2332 ;; *************** function _Ndelay *****************
  2333 ;; Defined at:
  2334 ;;		line 14 in file "i2c.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		None
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         0       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0
  2351 ;;      Totals:         0       0       0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_i2c_start
  2359 ;;		_i2c_stop
  2360 ;;		_i2c_wb
  2361 ;;		_i2c_rb
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _Ndelay
  2367  0EA1                     _Ndelay:	
  2368                           
  2369                           ;incstack = 0
  2370                           ; Regs used in _Ndelay: []
  2371  0EA1  0000               	nop	;# 
  2372  0EA2  0000               	nop	;# 
  2373  0EA3  0000               	nop	;# 
  2374  0EA4  0000               	nop	;# 
  2375  0EA5  0000               	nop	;# 
  2376  0EA6  0000               	nop	;# 
  2377  0EA7  0000               	nop	;# 
  2378  0EA8  0000               	nop	;# 
  2379  0EA9  0008               	return
  2380  0EAA                     __end_of_Ndelay:	
  2381                           
  2382                           	psect	text9
  2383  0EC0                     __ptext9:	
  2384 ;; *************** function _Timer0_init *****************
  2385 ;; Defined at:
  2386 ;;		line 22 in file "Timer.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		None
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0
  2403 ;;      Totals:         0       0       0       0       0
  2404 ;;Total ram usage:        0 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    1
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _Timer0_init
  2416  0EC0                     _Timer0_init:	
  2417                           
  2418                           ;Timer.c: 24: INTCONbits.GIE =1;
  2419                           
  2420                           ;incstack = 0
  2421                           ; Regs used in _Timer0_init: []
  2422  0EC0  178B               	bsf	11,7	;volatile
  2423                           
  2424                           ;Timer.c: 26: INTCONbits.PEIE = 1;
  2425  0EC1  170B               	bsf	11,6	;volatile
  2426                           
  2427                           ;Timer.c: 28: INTCONbits.TMR0IE = 1;
  2428  0EC2  168B               	bsf	11,5	;volatile
  2429                           
  2430                           ;Timer.c: 29: INTCONbits.TMR0IF = 0;
  2431  0EC3  110B               	bcf	11,2	;volatile
  2432                           
  2433                           ;Timer.c: 30: OPTION_REGbits.T0CS = 0;
  2434  0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  2435  0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  2436  0EC6  1281               	bcf	1,5	;volatile
  2437                           
  2438                           ;Timer.c: 31: OPTION_REGbits.T0SE = 0;
  2439  0EC7  1201               	bcf	1,4	;volatile
  2440                           
  2441                           ;Timer.c: 32: OPTION_REGbits.PSA = 0;
  2442  0EC8  1181               	bcf	1,3	;volatile
  2443                           
  2444                           ;Timer.c: 34: OPTION_REGbits.PS0 = 1;
  2445  0EC9  1401               	bsf	1,0	;volatile
  2446                           
  2447                           ;Timer.c: 35: OPTION_REGbits.PS1 = 1;
  2448  0ECA  1481               	bsf	1,1	;volatile
  2449                           
  2450                           ;Timer.c: 36: OPTION_REGbits.PS2 = 1;
  2451  0ECB  1501               	bsf	1,2	;volatile
  2452  0ECC  0008               	return
  2453  0ECD                     __end_of_Timer0_init:	
  2454                           
  2455                           	psect	text10
  2456  04D1                     __ptext10:	
  2457 ;; *************** function _Task_vidGetTemp *****************
  2458 ;; Defined at:
  2459 ;;		line 42 in file "HAL.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;		None
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0, pclath, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         0       0       0       0       0
  2474 ;;      Locals:         0       0       0       0       0
  2475 ;;      Temps:          0       1       0       0       0
  2476 ;;      Totals:         0       1       0       0       0
  2477 ;;Total ram usage:        1 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    3
  2480 ;; This function calls:
  2481 ;;		_ADC_Read
  2482 ;;		___ftdiv
  2483 ;;		___ftmul
  2484 ;;		___fttol
  2485 ;;		___lwtoft
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           
  2492                           ;psect for function _Task_vidGetTemp
  2493  04D1                     _Task_vidGetTemp:	
  2494                           
  2495                           ;HAL.c: 44: u16DigitalRead = ADC_Read();
  2496                           
  2497                           ;incstack = 0
  2498                           ; Regs used in _Task_vidGetTemp: [wreg+status,2+status,0+pclath+cstack]
  2499  04D1  120A  158A  26B4  120A  118A  	fcall	_ADC_Read
  2500  04D6  0875               	movf	?_ADC_Read+1,w
  2501  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2502  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2503  04D9  00EC               	movwf	_u16DigitalRead+1
  2504  04DA  0874               	movf	?_ADC_Read,w
  2505  04DB  00EB               	movwf	_u16DigitalRead
  2506                           
  2507                           ;HAL.c: 45: u16AnalogeRead = (u16)((u16DigitalRead * 5.0 * 1000.0 ) / 1023.0 );
  2508  04DC  086C               	movf	_u16DigitalRead+1,w
  2509  04DD  00A6               	movwf	___lwtoft@c+1
  2510  04DE  086B               	movf	_u16DigitalRead,w
  2511  04DF  00A5               	movwf	___lwtoft@c
  2512  04E0  120A  118A  27E8  120A  118A  	fcall	___lwtoft
  2513  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2514  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2515  04E7  0825               	movf	?___lwtoft,w
  2516  04E8  00AC               	movwf	___ftmul@f2
  2517  04E9  0826               	movf	?___lwtoft+1,w
  2518  04EA  00AD               	movwf	___ftmul@f2+1
  2519  04EB  0827               	movf	?___lwtoft+2,w
  2520  04EC  00AE               	movwf	___ftmul@f2+2
  2521  04ED  3040               	movlw	64
  2522  04EE  00A9               	movwf	___ftmul@f1
  2523  04EF  309C               	movlw	156
  2524  04F0  00AA               	movwf	___ftmul@f1+1
  2525  04F1  3045               	movlw	69
  2526  04F2  00AB               	movwf	___ftmul@f1+2
  2527  04F3  120A  118A  22B8  120A  118A  	fcall	___ftmul
  2528  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2529  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2530  04FA  0829               	movf	?___ftmul,w
  2531  04FB  00BC               	movwf	___ftdiv@f1
  2532  04FC  082A               	movf	?___ftmul+1,w
  2533  04FD  00BD               	movwf	___ftdiv@f1+1
  2534  04FE  082B               	movf	?___ftmul+2,w
  2535  04FF  00BE               	movwf	___ftdiv@f1+2
  2536  0500  30C0               	movlw	192
  2537  0501  00B9               	movwf	___ftdiv@f2
  2538  0502  307F               	movlw	127
  2539  0503  00BA               	movwf	___ftdiv@f2+1
  2540  0504  3044               	movlw	68
  2541  0505  00BB               	movwf	___ftdiv@f2+2
  2542  0506  120A  118A  238B  120A  118A  	fcall	___ftdiv
  2543  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2544  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2545  050D  0839               	movf	?___ftdiv,w
  2546  050E  00C9               	movwf	___fttol@f1
  2547  050F  083A               	movf	?___ftdiv+1,w
  2548  0510  00CA               	movwf	___fttol@f1+1
  2549  0511  083B               	movf	?___ftdiv+2,w
  2550  0512  00CB               	movwf	___fttol@f1+2
  2551  0513  120A  118A  2443  120A  118A  	fcall	___fttol
  2552  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0519  1303               	bcf	3,6	;RP1=0, select bank0
  2554  051A  084A               	movf	?___fttol+1,w
  2555  051B  00E7               	movwf	_u16AnalogeRead+1
  2556  051C  0849               	movf	?___fttol,w
  2557  051D  00E6               	movwf	_u16AnalogeRead
  2558                           
  2559                           ;HAL.c: 46: CurrentTemp = (u8)( u16AnalogeRead / 10.0 ) ;
  2560  051E  0867               	movf	_u16AnalogeRead+1,w
  2561  051F  00A6               	movwf	___lwtoft@c+1
  2562  0520  0866               	movf	_u16AnalogeRead,w
  2563  0521  00A5               	movwf	___lwtoft@c
  2564  0522  120A  118A  27E8  120A  118A  	fcall	___lwtoft
  2565  0527  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0528  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0529  0825               	movf	?___lwtoft,w
  2568  052A  00BC               	movwf	___ftdiv@f1
  2569  052B  0826               	movf	?___lwtoft+1,w
  2570  052C  00BD               	movwf	___ftdiv@f1+1
  2571  052D  0827               	movf	?___lwtoft+2,w
  2572  052E  00BE               	movwf	___ftdiv@f1+2
  2573  052F  3000               	movlw	0
  2574  0530  00B9               	movwf	___ftdiv@f2
  2575  0531  3020               	movlw	32
  2576  0532  00BA               	movwf	___ftdiv@f2+1
  2577  0533  3041               	movlw	65
  2578  0534  00BB               	movwf	___ftdiv@f2+2
  2579  0535  120A  118A  238B  120A  118A  	fcall	___ftdiv
  2580  053A  1283               	bcf	3,5	;RP0=0, select bank0
  2581  053B  1303               	bcf	3,6	;RP1=0, select bank0
  2582  053C  0839               	movf	?___ftdiv,w
  2583  053D  00C9               	movwf	___fttol@f1
  2584  053E  083A               	movf	?___ftdiv+1,w
  2585  053F  00CA               	movwf	___fttol@f1+1
  2586  0540  083B               	movf	?___ftdiv+2,w
  2587  0541  00CB               	movwf	___fttol@f1+2
  2588  0542  120A  118A  2443   	fcall	___fttol
  2589  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2590  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2591  0547  0849               	movf	?___fttol,w
  2592  0548  00D7               	movwf	??_Task_vidGetTemp
  2593  0549  0857               	movf	??_Task_vidGetTemp,w
  2594  054A  1683               	bsf	3,5	;RP0=1, select bank1
  2595  054B  1303               	bcf	3,6	;RP1=0, select bank1
  2596  054C  00D2               	movwf	_CurrentTemp^(0+128)
  2597  054D  0008               	return
  2598  054E                     __end_of_Task_vidGetTemp:	
  2599                           
  2600                           	psect	text11
  2601  07E8                     __ptext11:	
  2602 ;; *************** function ___lwtoft *****************
  2603 ;; Defined at:
  2604 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  c               2    5[BANK0 ] unsigned int 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  3    5[BANK0 ] float 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0, pclath, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       3       0       0       0
  2619 ;;      Locals:         0       0       0       0       0
  2620 ;;      Temps:          0       1       0       0       0
  2621 ;;      Totals:         0       4       0       0       0
  2622 ;;Total ram usage:        4 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    2
  2625 ;; This function calls:
  2626 ;;		___ftpack
  2627 ;; This function is called by:
  2628 ;;		_Task_vidGetTemp
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function ___lwtoft
  2634  07E8                     ___lwtoft:	
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  2638  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  2639  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  2640  07EA  0825               	movf	___lwtoft@c,w
  2641  07EB  00A0               	movwf	___ftpack@arg
  2642  07EC  0826               	movf	___lwtoft@c+1,w
  2643  07ED  00A1               	movwf	___ftpack@arg+1
  2644  07EE  01A2               	clrf	___ftpack@arg+2
  2645  07EF  308E               	movlw	142
  2646  07F0  00A8               	movwf	??___lwtoft
  2647  07F1  0828               	movf	??___lwtoft,w
  2648  07F2  00A3               	movwf	___ftpack@exp
  2649  07F3  01A4               	clrf	___ftpack@sign
  2650  07F4  120A  118A  254E   	fcall	___ftpack
  2651  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  2652  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  2653  07F9  0820               	movf	?___ftpack,w
  2654  07FA  00A5               	movwf	?___lwtoft
  2655  07FB  0821               	movf	?___ftpack+1,w
  2656  07FC  00A6               	movwf	?___lwtoft+1
  2657  07FD  0822               	movf	?___ftpack+2,w
  2658  07FE  00A7               	movwf	?___lwtoft+2
  2659  07FF  0008               	return
  2660  0800                     __end_of___lwtoft:	
  2661                           
  2662                           	psect	text12
  2663  02B8                     __ptext12:	
  2664 ;; *************** function ___ftmul *****************
  2665 ;; Defined at:
  2666 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  f1              3    9[BANK0 ] float 
  2669 ;;  f2              3   12[BANK0 ] float 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  f3_as_produc    3   20[BANK0 ] unsigned um
  2672 ;;  sign            1   24[BANK0 ] unsigned char 
  2673 ;;  cntr            1   23[BANK0 ] unsigned char 
  2674 ;;  exp             1   19[BANK0 ] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;                  3    9[BANK0 ] float 
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2684 ;;      Params:         0       6       0       0       0
  2685 ;;      Locals:         0       6       0       0       0
  2686 ;;      Temps:          0       4       0       0       0
  2687 ;;      Totals:         0      16       0       0       0
  2688 ;;Total ram usage:       16 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    2
  2691 ;; This function calls:
  2692 ;;		___ftpack
  2693 ;; This function is called by:
  2694 ;;		_Task_vidGetTemp
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           
  2699                           ;psect for function ___ftmul
  2700  02B8                     ___ftmul:	
  2701                           
  2702                           ;incstack = 0
  2703                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2704  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2705  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2706  02BA  0829               	movf	___ftmul@f1,w
  2707  02BB  00AF               	movwf	??___ftmul
  2708  02BC  082A               	movf	___ftmul@f1+1,w
  2709  02BD  00B0               	movwf	??___ftmul+1
  2710  02BE  082B               	movf	___ftmul@f1+2,w
  2711  02BF  00B1               	movwf	??___ftmul+2
  2712  02C0  1003               	clrc
  2713  02C1  0D30               	rlf	??___ftmul+1,w
  2714  02C2  0D31               	rlf	??___ftmul+2,w
  2715  02C3  00B2               	movwf	??___ftmul+3
  2716  02C4  0832               	movf	??___ftmul+3,w
  2717  02C5  00B3               	movwf	___ftmul@exp
  2718  02C6  0833               	movf	___ftmul@exp,w
  2719  02C7  1D03               	btfss	3,2
  2720  02C8  2AD0               	goto	l2364
  2721  02C9  3000               	movlw	0
  2722  02CA  00A9               	movwf	?___ftmul
  2723  02CB  3000               	movlw	0
  2724  02CC  00AA               	movwf	?___ftmul+1
  2725  02CD  3000               	movlw	0
  2726  02CE  00AB               	movwf	?___ftmul+2
  2727  02CF  0008               	return
  2728  02D0                     l2364:	
  2729  02D0  082C               	movf	___ftmul@f2,w
  2730  02D1  00AF               	movwf	??___ftmul
  2731  02D2  082D               	movf	___ftmul@f2+1,w
  2732  02D3  00B0               	movwf	??___ftmul+1
  2733  02D4  082E               	movf	___ftmul@f2+2,w
  2734  02D5  00B1               	movwf	??___ftmul+2
  2735  02D6  1003               	clrc
  2736  02D7  0D30               	rlf	??___ftmul+1,w
  2737  02D8  0D31               	rlf	??___ftmul+2,w
  2738  02D9  00B2               	movwf	??___ftmul+3
  2739  02DA  0832               	movf	??___ftmul+3,w
  2740  02DB  00B8               	movwf	___ftmul@sign
  2741  02DC  0838               	movf	___ftmul@sign,w
  2742  02DD  1D03               	btfss	3,2
  2743  02DE  2AE6               	goto	l2370
  2744  02DF  3000               	movlw	0
  2745  02E0  00A9               	movwf	?___ftmul
  2746  02E1  3000               	movlw	0
  2747  02E2  00AA               	movwf	?___ftmul+1
  2748  02E3  3000               	movlw	0
  2749  02E4  00AB               	movwf	?___ftmul+2
  2750  02E5  0008               	return
  2751  02E6                     l2370:	
  2752  02E6  0838               	movf	___ftmul@sign,w
  2753  02E7  3E7B               	addlw	123
  2754  02E8  00AF               	movwf	??___ftmul
  2755  02E9  082F               	movf	??___ftmul,w
  2756  02EA  07B3               	addwf	___ftmul@exp,f
  2757  02EB  0829               	movf	___ftmul@f1,w
  2758  02EC  00AF               	movwf	??___ftmul
  2759  02ED  082A               	movf	___ftmul@f1+1,w
  2760  02EE  00B0               	movwf	??___ftmul+1
  2761  02EF  082B               	movf	___ftmul@f1+2,w
  2762  02F0  00B1               	movwf	??___ftmul+2
  2763  02F1  3010               	movlw	16
  2764  02F2                     u2715:	
  2765  02F2  1003               	clrc
  2766  02F3  0CB1               	rrf	??___ftmul+2,f
  2767  02F4  0CB0               	rrf	??___ftmul+1,f
  2768  02F5  0CAF               	rrf	??___ftmul,f
  2769  02F6  3EFF               	addlw	-1
  2770  02F7  1D03               	skipz
  2771  02F8  2AF2               	goto	u2715
  2772  02F9  082F               	movf	??___ftmul,w
  2773  02FA  00B2               	movwf	??___ftmul+3
  2774  02FB  0832               	movf	??___ftmul+3,w
  2775  02FC  00B8               	movwf	___ftmul@sign
  2776  02FD  082C               	movf	___ftmul@f2,w
  2777  02FE  00AF               	movwf	??___ftmul
  2778  02FF  082D               	movf	___ftmul@f2+1,w
  2779  0300  00B0               	movwf	??___ftmul+1
  2780  0301  082E               	movf	___ftmul@f2+2,w
  2781  0302  00B1               	movwf	??___ftmul+2
  2782  0303  3010               	movlw	16
  2783  0304                     u2725:	
  2784  0304  1003               	clrc
  2785  0305  0CB1               	rrf	??___ftmul+2,f
  2786  0306  0CB0               	rrf	??___ftmul+1,f
  2787  0307  0CAF               	rrf	??___ftmul,f
  2788  0308  3EFF               	addlw	-1
  2789  0309  1D03               	skipz
  2790  030A  2B04               	goto	u2725
  2791  030B  082F               	movf	??___ftmul,w
  2792  030C  00B2               	movwf	??___ftmul+3
  2793  030D  0832               	movf	??___ftmul+3,w
  2794  030E  06B8               	xorwf	___ftmul@sign,f
  2795  030F  3080               	movlw	128
  2796  0310  00AF               	movwf	??___ftmul
  2797  0311  082F               	movf	??___ftmul,w
  2798  0312  05B8               	andwf	___ftmul@sign,f
  2799  0313  17AA               	bsf	___ftmul@f1+1,7
  2800  0314  17AD               	bsf	___ftmul@f2+1,7
  2801  0315  30FF               	movlw	255
  2802  0316  05AC               	andwf	___ftmul@f2,f
  2803  0317  30FF               	movlw	255
  2804  0318  05AD               	andwf	___ftmul@f2+1,f
  2805  0319  3000               	movlw	0
  2806  031A  05AE               	andwf	___ftmul@f2+2,f
  2807  031B  3000               	movlw	0
  2808  031C  00B4               	movwf	___ftmul@f3_as_product
  2809  031D  3000               	movlw	0
  2810  031E  00B5               	movwf	___ftmul@f3_as_product+1
  2811  031F  3000               	movlw	0
  2812  0320  00B6               	movwf	___ftmul@f3_as_product+2
  2813  0321  3007               	movlw	7
  2814  0322  00AF               	movwf	??___ftmul
  2815  0323  082F               	movf	??___ftmul,w
  2816  0324  00B7               	movwf	___ftmul@cntr
  2817  0325                     l2382:	
  2818  0325  1C29               	btfss	___ftmul@f1,0
  2819  0326  2B35               	goto	l2386
  2820  0327  082C               	movf	___ftmul@f2,w
  2821  0328  07B4               	addwf	___ftmul@f3_as_product,f
  2822  0329  082D               	movf	___ftmul@f2+1,w
  2823  032A  1103               	clrz
  2824  032B  1803               	skipnc
  2825  032C  0A2D               	incf	___ftmul@f2+1,w
  2826  032D  1D03               	btfss	3,2
  2827  032E  07B5               	addwf	___ftmul@f3_as_product+1,f
  2828  032F  082E               	movf	___ftmul@f2+2,w
  2829  0330  1103               	clrz
  2830  0331  1803               	skipnc
  2831  0332  0A2E               	incf	___ftmul@f2+2,w
  2832  0333  1D03               	btfss	3,2
  2833  0334  07B6               	addwf	___ftmul@f3_as_product+2,f
  2834  0335                     l2386:	
  2835  0335  3001               	movlw	1
  2836  0336                     u2755:	
  2837  0336  1003               	clrc
  2838  0337  0CAB               	rrf	___ftmul@f1+2,f
  2839  0338  0CAA               	rrf	___ftmul@f1+1,f
  2840  0339  0CA9               	rrf	___ftmul@f1,f
  2841  033A  3EFF               	addlw	-1
  2842  033B  1D03               	skipz
  2843  033C  2B36               	goto	u2755
  2844  033D  3001               	movlw	1
  2845  033E                     u2765:	
  2846  033E  1003               	clrc
  2847  033F  0DAC               	rlf	___ftmul@f2,f
  2848  0340  0DAD               	rlf	___ftmul@f2+1,f
  2849  0341  0DAE               	rlf	___ftmul@f2+2,f
  2850  0342  3EFF               	addlw	-1
  2851  0343  1D03               	skipz
  2852  0344  2B3E               	goto	u2765
  2853  0345  3001               	movlw	1
  2854  0346  02B7               	subwf	___ftmul@cntr,f
  2855  0347  1D03               	btfss	3,2
  2856  0348  2B25               	goto	l2382
  2857  0349  3009               	movlw	9
  2858  034A  00AF               	movwf	??___ftmul
  2859  034B  082F               	movf	??___ftmul,w
  2860  034C  00B7               	movwf	___ftmul@cntr
  2861  034D                     l2394:	
  2862  034D  1C29               	btfss	___ftmul@f1,0
  2863  034E  2B5D               	goto	l2398
  2864  034F  082C               	movf	___ftmul@f2,w
  2865  0350  07B4               	addwf	___ftmul@f3_as_product,f
  2866  0351  082D               	movf	___ftmul@f2+1,w
  2867  0352  1103               	clrz
  2868  0353  1803               	skipnc
  2869  0354  0A2D               	incf	___ftmul@f2+1,w
  2870  0355  1D03               	btfss	3,2
  2871  0356  07B5               	addwf	___ftmul@f3_as_product+1,f
  2872  0357  082E               	movf	___ftmul@f2+2,w
  2873  0358  1103               	clrz
  2874  0359  1803               	skipnc
  2875  035A  0A2E               	incf	___ftmul@f2+2,w
  2876  035B  1D03               	btfss	3,2
  2877  035C  07B6               	addwf	___ftmul@f3_as_product+2,f
  2878  035D                     l2398:	
  2879  035D  3001               	movlw	1
  2880  035E                     u2805:	
  2881  035E  1003               	clrc
  2882  035F  0CAB               	rrf	___ftmul@f1+2,f
  2883  0360  0CAA               	rrf	___ftmul@f1+1,f
  2884  0361  0CA9               	rrf	___ftmul@f1,f
  2885  0362  3EFF               	addlw	-1
  2886  0363  1D03               	skipz
  2887  0364  2B5E               	goto	u2805
  2888  0365  3001               	movlw	1
  2889  0366                     u2815:	
  2890  0366  1003               	clrc
  2891  0367  0CB6               	rrf	___ftmul@f3_as_product+2,f
  2892  0368  0CB5               	rrf	___ftmul@f3_as_product+1,f
  2893  0369  0CB4               	rrf	___ftmul@f3_as_product,f
  2894  036A  3EFF               	addlw	-1
  2895  036B  1D03               	skipz
  2896  036C  2B66               	goto	u2815
  2897  036D  3001               	movlw	1
  2898  036E  02B7               	subwf	___ftmul@cntr,f
  2899  036F  1D03               	btfss	3,2
  2900  0370  2B4D               	goto	l2394
  2901  0371  0834               	movf	___ftmul@f3_as_product,w
  2902  0372  00A0               	movwf	___ftpack@arg
  2903  0373  0835               	movf	___ftmul@f3_as_product+1,w
  2904  0374  00A1               	movwf	___ftpack@arg+1
  2905  0375  0836               	movf	___ftmul@f3_as_product+2,w
  2906  0376  00A2               	movwf	___ftpack@arg+2
  2907  0377  0833               	movf	___ftmul@exp,w
  2908  0378  00AF               	movwf	??___ftmul
  2909  0379  082F               	movf	??___ftmul,w
  2910  037A  00A3               	movwf	___ftpack@exp
  2911  037B  0838               	movf	___ftmul@sign,w
  2912  037C  00B0               	movwf	??___ftmul+1
  2913  037D  0830               	movf	??___ftmul+1,w
  2914  037E  00A4               	movwf	___ftpack@sign
  2915  037F  120A  118A  254E   	fcall	___ftpack
  2916  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0384  0820               	movf	?___ftpack,w
  2919  0385  00A9               	movwf	?___ftmul
  2920  0386  0821               	movf	?___ftpack+1,w
  2921  0387  00AA               	movwf	?___ftmul+1
  2922  0388  0822               	movf	?___ftpack+2,w
  2923  0389  00AB               	movwf	?___ftmul+2
  2924  038A  0008               	return
  2925  038B                     __end_of___ftmul:	
  2926                           
  2927                           	psect	text13
  2928  0EB4                     __ptext13:	
  2929 ;; *************** function _ADC_Read *****************
  2930 ;; Defined at:
  2931 ;;		line 35 in file "ADC.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;		None
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;		None
  2936 ;; Return value:  Size  Location     Type
  2937 ;;                  2    4[COMMON] unsigned short 
  2938 ;; Registers used:
  2939 ;;		wreg
  2940 ;; Tracked objects:
  2941 ;;		On entry : 0/0
  2942 ;;		On exit  : 0/0
  2943 ;;		Unchanged: 0/0
  2944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2945 ;;      Params:         2       0       0       0       0
  2946 ;;      Locals:         0       0       0       0       0
  2947 ;;      Temps:          0       0       0       0       0
  2948 ;;      Totals:         2       0       0       0       0
  2949 ;;Total ram usage:        2 bytes
  2950 ;; Hardware stack levels used:    1
  2951 ;; Hardware stack levels required when called:    1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_Task_vidGetTemp
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           
  2960                           ;psect for function _ADC_Read
  2961  0EB4                     _ADC_Read:	
  2962  0EB4                     l16:	
  2963                           ;ADC.c: 37: while(ADCON0bits.GO_DONE==1);
  2964                           
  2965                           ;incstack = 0
  2966                           ; Regs used in _ADC_Read: [wreg]
  2967                           
  2968  0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0EB6  191F               	btfsc	31,2	;volatile
  2971  0EB7  2EB4               	goto	l16
  2972                           
  2973                           ;ADC.c: 39: ADCON0bits.GO_DONE = 1;
  2974  0EB8  151F               	bsf	31,2	;volatile
  2975                           
  2976                           ;ADC.c: 40: return((ADRESH<<8) + ADRESL) ;
  2977  0EB9  081E               	movf	30,w	;volatile
  2978  0EBA  00F5               	movwf	?_ADC_Read+1
  2979  0EBB  1683               	bsf	3,5	;RP0=1, select bank1
  2980  0EBC  1303               	bcf	3,6	;RP1=0, select bank1
  2981  0EBD  081E               	movf	30,w	;volatile
  2982  0EBE  00F4               	movwf	?_ADC_Read
  2983  0EBF  0008               	return
  2984  0EC0                     __end_of_ADC_Read:	
  2985                           
  2986                           	psect	text14
  2987  0671                     __ptext14:	
  2988 ;; *************** function _Task_vidDisplayTemp *****************
  2989 ;; Defined at:
  2990 ;;		line 30 in file "HAL.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  u8Temprature    1    wreg     unsigned char 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  u8Temprature    1   10[BANK0 ] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         0       0       0       0       0
  3005 ;;      Locals:         0       1       0       0       0
  3006 ;;      Temps:          0       2       0       0       0
  3007 ;;      Totals:         0       3       0       0       0
  3008 ;;Total ram usage:        3 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    2
  3011 ;; This function calls:
  3012 ;;		___awdiv
  3013 ;;		___awmod
  3014 ;;		_displaySevenSegment
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _Task_vidDisplayTemp
  3022  0671                     _Task_vidDisplayTemp:	
  3023                           
  3024                           ;incstack = 0
  3025                           ; Regs used in _Task_vidDisplayTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3026                           ;Task_vidDisplayTemp@u8Temprature stored from wreg
  3027  0671  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0672  1303               	bcf	3,6	;RP1=0, select bank0
  3029  0673  00AA               	movwf	Task_vidDisplayTemp@u8Temprature
  3030                           
  3031                           ;HAL.c: 32: PORTAbits.RA3=1;
  3032  0674  1585               	bsf	5,3	;volatile
  3033                           
  3034                           ;HAL.c: 33: PORTAbits.RA4=0;
  3035  0675  1205               	bcf	5,4	;volatile
  3036                           
  3037                           ;HAL.c: 34: PORTD = displaySevenSegment( (unsigned char)(u8Temprature / (unsigned char)1
      +                          0));
  3038  0676  300A               	movlw	10
  3039  0677  00A0               	movwf	___awdiv@divisor
  3040  0678  3000               	movlw	0
  3041  0679  00A1               	movwf	___awdiv@divisor+1
  3042  067A  082A               	movf	Task_vidDisplayTemp@u8Temprature,w
  3043  067B  00A8               	movwf	??_Task_vidDisplayTemp
  3044  067C  01A9               	clrf	??_Task_vidDisplayTemp+1
  3045  067D  0828               	movf	??_Task_vidDisplayTemp,w
  3046  067E  00A2               	movwf	___awdiv@dividend
  3047  067F  0829               	movf	??_Task_vidDisplayTemp+1,w
  3048  0680  00A3               	movwf	___awdiv@dividend+1
  3049  0681  120A  118A  25BC  120A  118A  	fcall	___awdiv
  3050  0686  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0687  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0688  0820               	movf	?___awdiv,w
  3053  0689  120A  158A  27C7  120A  118A  	fcall	_displaySevenSegment
  3054  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3055  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3056  0690  0088               	movwf	8	;volatile
  3057                           
  3058                           ;HAL.c: 35: _delay((unsigned long)((3)*(8000000/4000.0)));
  3059  0691  3008               	movlw	8
  3060  0692  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0693  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0694  00A9               	movwf	??_Task_vidDisplayTemp+1
  3063  0695  30C9               	movlw	201
  3064  0696  00A8               	movwf	??_Task_vidDisplayTemp
  3065  0697                     u3137:	
  3066  0697  0BA8               	decfsz	??_Task_vidDisplayTemp,f
  3067  0698  2E97               	goto	u3137
  3068  0699  0BA9               	decfsz	??_Task_vidDisplayTemp+1,f
  3069  069A  2E97               	goto	u3137
  3070                           
  3071                           ;HAL.c: 36: PORTAbits.RA3=0;
  3072  069B  1283               	bcf	3,5	;RP0=0, select bank0
  3073  069C  1303               	bcf	3,6	;RP1=0, select bank0
  3074  069D  1185               	bcf	5,3	;volatile
  3075                           
  3076                           ;HAL.c: 37: PORTAbits.RA4=1;
  3077  069E  1605               	bsf	5,4	;volatile
  3078                           
  3079                           ;HAL.c: 38: PORTD = displaySevenSegment( (unsigned char)(u8Temprature % (unsigned char)1
      +                          0));
  3080  069F  300A               	movlw	10
  3081  06A0  00A0               	movwf	___awmod@divisor
  3082  06A1  3000               	movlw	0
  3083  06A2  00A1               	movwf	___awmod@divisor+1
  3084  06A3  082A               	movf	Task_vidDisplayTemp@u8Temprature,w
  3085  06A4  00A8               	movwf	??_Task_vidDisplayTemp
  3086  06A5  01A9               	clrf	??_Task_vidDisplayTemp+1
  3087  06A6  0828               	movf	??_Task_vidDisplayTemp,w
  3088  06A7  00A2               	movwf	___awmod@dividend
  3089  06A8  0829               	movf	??_Task_vidDisplayTemp+1,w
  3090  06A9  00A3               	movwf	___awmod@dividend+1
  3091  06AA  120A  118A  2713  120A  118A  	fcall	___awmod
  3092  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  3093  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  3094  06B1  0820               	movf	?___awmod,w
  3095  06B2  120A  158A  27C7  120A  118A  	fcall	_displaySevenSegment
  3096  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  3097  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  3098  06B9  0088               	movwf	8	;volatile
  3099                           
  3100                           ;HAL.c: 39: _delay((unsigned long)((2)*(8000000/4000.0)));
  3101  06BA  3006               	movlw	6
  3102  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3103  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3104  06BD  00A9               	movwf	??_Task_vidDisplayTemp+1
  3105  06BE  302F               	movlw	47
  3106  06BF  00A8               	movwf	??_Task_vidDisplayTemp
  3107  06C0                     u3147:	
  3108  06C0  0BA8               	decfsz	??_Task_vidDisplayTemp,f
  3109  06C1  2EC0               	goto	u3147
  3110  06C2  0BA9               	decfsz	??_Task_vidDisplayTemp+1,f
  3111  06C3  2EC0               	goto	u3147
  3112  06C4  2EC5               	nop2
  3113  06C5  0008               	return
  3114  06C6                     __end_of_Task_vidDisplayTemp:	
  3115                           
  3116                           	psect	text15
  3117  0FC7                     __ptext15:	
  3118 ;; *************** function _displaySevenSegment *****************
  3119 ;; Defined at:
  3120 ;;		line 14 in file "display7s.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  v               1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  v               1    4[COMMON] unsigned char 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      unsigned char 
  3127 ;; Registers used:
  3128 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3134 ;;      Params:         0       0       0       0       0
  3135 ;;      Locals:         1       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0
  3137 ;;      Totals:         1       0       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    1
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_Task_vidDisplayTemp
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           
  3149                           ;psect for function _displaySevenSegment
  3150  0FC7                     _displaySevenSegment:	
  3151                           
  3152                           ;incstack = 0
  3153                           ; Regs used in _displaySevenSegment: [wreg-fsr0h+status,2+status,0]
  3154                           ;displaySevenSegment@v stored from wreg
  3155  0FC7  00F4               	movwf	displaySevenSegment@v
  3156                           
  3157                           ;display7s.c: 16: switch(v)
  3158  0FC8  2FDF               	goto	l2208
  3159  0FC9                     l2162:	
  3160                           ;display7s.c: 17: {
  3161                           ;display7s.c: 18: case 0:
  3162                           
  3163                           
  3164                           ;display7s.c: 19: return 0x3F;
  3165  0FC9  303F               	movlw	63
  3166  0FCA  0008               	return
  3167  0FCB                     l2166:	
  3168                           ;display7s.c: 20: case 1:
  3169                           
  3170                           
  3171                           ;display7s.c: 21: return 0x06;
  3172  0FCB  3006               	movlw	6
  3173  0FCC  0008               	return
  3174  0FCD                     l2170:	
  3175                           ;display7s.c: 22: case 2:
  3176                           
  3177                           
  3178                           ;display7s.c: 23: return 0x5B;
  3179  0FCD  305B               	movlw	91
  3180  0FCE  0008               	return
  3181  0FCF                     l2174:	
  3182                           ;display7s.c: 24: case 3:
  3183                           
  3184                           
  3185                           ;display7s.c: 25: return 0x4F;
  3186  0FCF  304F               	movlw	79
  3187  0FD0  0008               	return
  3188  0FD1                     l2178:	
  3189                           ;display7s.c: 26: case 4:
  3190                           
  3191                           
  3192                           ;display7s.c: 27: return 0x66;
  3193  0FD1  3066               	movlw	102
  3194  0FD2  0008               	return
  3195  0FD3                     l2182:	
  3196                           ;display7s.c: 28: case 5:
  3197                           
  3198                           
  3199                           ;display7s.c: 29: return 0x6D;
  3200  0FD3  306D               	movlw	109
  3201  0FD4  0008               	return
  3202  0FD5                     l2186:	
  3203                           ;display7s.c: 30: case 6:
  3204                           
  3205                           
  3206                           ;display7s.c: 31: return 0x7D;
  3207  0FD5  307D               	movlw	125
  3208  0FD6  0008               	return
  3209  0FD7                     l2190:	
  3210                           ;display7s.c: 32: case 7:
  3211                           
  3212                           
  3213                           ;display7s.c: 33: return 0x07;
  3214  0FD7  3007               	movlw	7
  3215  0FD8  0008               	return
  3216  0FD9                     l2194:	
  3217                           ;display7s.c: 34: case 8:
  3218                           
  3219                           
  3220                           ;display7s.c: 35: return 0x7F;
  3221  0FD9  307F               	movlw	127
  3222  0FDA  0008               	return
  3223  0FDB                     l2198:	
  3224                           ;display7s.c: 36: case 9:
  3225                           
  3226                           
  3227                           ;display7s.c: 37: return 0x6F;
  3228  0FDB  306F               	movlw	111
  3229  0FDC  0008               	return
  3230  0FDD                     l2202:	
  3231                           ;display7s.c: 38: default:
  3232                           
  3233                           
  3234                           ;display7s.c: 39: return 0;
  3235  0FDD  3000               	movlw	0
  3236                           
  3237                           ;display7s.c: 40: }
  3238  0FDE  0008               	return
  3239  0FDF                     l2208:	
  3240  0FDF  0874               	movf	displaySevenSegment@v,w
  3241                           
  3242                           ; Switch size 1, requested type "space"
  3243                           ; Number of cases is 10, Range of values is 0 to 9
  3244                           ; switch strategies available:
  3245                           ; Name         Instructions Cycles
  3246                           ; simple_byte           31    16 (average)
  3247                           ; direct_byte           38     8 (fixed)
  3248                           ; jumptable            260     6 (fixed)
  3249                           ;	Chosen strategy is simple_byte
  3250  0FE0  3A00               	xorlw	0	; case 0
  3251  0FE1  1903               	skipnz
  3252  0FE2  2FC9               	goto	l2162
  3253  0FE3  3A01               	xorlw	1	; case 1
  3254  0FE4  1903               	skipnz
  3255  0FE5  2FCB               	goto	l2166
  3256  0FE6  3A03               	xorlw	3	; case 2
  3257  0FE7  1903               	skipnz
  3258  0FE8  2FCD               	goto	l2170
  3259  0FE9  3A01               	xorlw	1	; case 3
  3260  0FEA  1903               	skipnz
  3261  0FEB  2FCF               	goto	l2174
  3262  0FEC  3A07               	xorlw	7	; case 4
  3263  0FED  1903               	skipnz
  3264  0FEE  2FD1               	goto	l2178
  3265  0FEF  3A01               	xorlw	1	; case 5
  3266  0FF0  1903               	skipnz
  3267  0FF1  2FD3               	goto	l2182
  3268  0FF2  3A03               	xorlw	3	; case 6
  3269  0FF3  1903               	skipnz
  3270  0FF4  2FD5               	goto	l2186
  3271  0FF5  3A01               	xorlw	1	; case 7
  3272  0FF6  1903               	skipnz
  3273  0FF7  2FD7               	goto	l2190
  3274  0FF8  3A0F               	xorlw	15	; case 8
  3275  0FF9  1903               	skipnz
  3276  0FFA  2FD9               	goto	l2194
  3277  0FFB  3A01               	xorlw	1	; case 9
  3278  0FFC  1903               	skipnz
  3279  0FFD  2FDB               	goto	l2198
  3280  0FFE  2FDD               	goto	l2202
  3281  0FFF  0008               	return
  3282  1000                     __end_of_displaySevenSegment:	
  3283                           
  3284                           	psect	text16
  3285  0713                     __ptext16:	
  3286 ;; *************** function ___awmod *****************
  3287 ;; Defined at:
  3288 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  divisor         2    0[BANK0 ] int 
  3291 ;;  dividend        2    2[BANK0 ] int 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  sign            1    6[COMMON] unsigned char 
  3294 ;;  counter         1    5[COMMON] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  2    0[BANK0 ] int 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       4       0       0       0
  3305 ;;      Locals:         2       0       0       0       0
  3306 ;;      Temps:          1       0       0       0       0
  3307 ;;      Totals:         3       4       0       0       0
  3308 ;;Total ram usage:        7 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    1
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_Task_vidDisplayTemp
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           
  3319                           ;psect for function ___awmod
  3320  0713                     ___awmod:	
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3324  0713  01F6               	clrf	___awmod@sign
  3325  0714  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0715  1303               	bcf	3,6	;RP1=0, select bank0
  3327  0716  1FA3               	btfss	___awmod@dividend+1,7
  3328  0717  2F1F               	goto	l2286
  3329  0718  09A2               	comf	___awmod@dividend,f
  3330  0719  09A3               	comf	___awmod@dividend+1,f
  3331  071A  0AA2               	incf	___awmod@dividend,f
  3332  071B  1903               	skipnz
  3333  071C  0AA3               	incf	___awmod@dividend+1,f
  3334  071D  01F6               	clrf	___awmod@sign
  3335  071E  0AF6               	incf	___awmod@sign,f
  3336  071F                     l2286:	
  3337  071F  1FA1               	btfss	___awmod@divisor+1,7
  3338  0720  2F26               	goto	l2290
  3339  0721  09A0               	comf	___awmod@divisor,f
  3340  0722  09A1               	comf	___awmod@divisor+1,f
  3341  0723  0AA0               	incf	___awmod@divisor,f
  3342  0724  1903               	skipnz
  3343  0725  0AA1               	incf	___awmod@divisor+1,f
  3344  0726                     l2290:	
  3345  0726  0820               	movf	___awmod@divisor,w
  3346  0727  0421               	iorwf	___awmod@divisor+1,w
  3347  0728  1903               	btfsc	3,2
  3348  0729  2F53               	goto	l2308
  3349  072A  01F5               	clrf	___awmod@counter
  3350  072B  0AF5               	incf	___awmod@counter,f
  3351  072C                     l2298:	
  3352  072C  1BA1               	btfsc	___awmod@divisor+1,7
  3353  072D  2F3A               	goto	l2300
  3354  072E  3001               	movlw	1
  3355  072F                     u2555:	
  3356  072F  1003               	clrc
  3357  0730  0DA0               	rlf	___awmod@divisor,f
  3358  0731  0DA1               	rlf	___awmod@divisor+1,f
  3359  0732  3EFF               	addlw	-1
  3360  0733  1D03               	skipz
  3361  0734  2F2F               	goto	u2555
  3362  0735  3001               	movlw	1
  3363  0736  00F4               	movwf	??___awmod
  3364  0737  0874               	movf	??___awmod,w
  3365  0738  07F5               	addwf	___awmod@counter,f
  3366  0739  2F2C               	goto	l2298
  3367  073A                     l2300:	
  3368  073A  0821               	movf	___awmod@divisor+1,w
  3369  073B  0223               	subwf	___awmod@dividend+1,w
  3370  073C  1D03               	skipz
  3371  073D  2F40               	goto	u2575
  3372  073E  0820               	movf	___awmod@divisor,w
  3373  073F  0222               	subwf	___awmod@dividend,w
  3374  0740                     u2575:	
  3375  0740  1C03               	skipc
  3376  0741  2F48               	goto	l2304
  3377  0742  0820               	movf	___awmod@divisor,w
  3378  0743  02A2               	subwf	___awmod@dividend,f
  3379  0744  0821               	movf	___awmod@divisor+1,w
  3380  0745  1C03               	skipc
  3381  0746  03A3               	decf	___awmod@dividend+1,f
  3382  0747  02A3               	subwf	___awmod@dividend+1,f
  3383  0748                     l2304:	
  3384  0748  3001               	movlw	1
  3385  0749                     u2585:	
  3386  0749  1003               	clrc
  3387  074A  0CA1               	rrf	___awmod@divisor+1,f
  3388  074B  0CA0               	rrf	___awmod@divisor,f
  3389  074C  3EFF               	addlw	-1
  3390  074D  1D03               	skipz
  3391  074E  2F49               	goto	u2585
  3392  074F  3001               	movlw	1
  3393  0750  02F5               	subwf	___awmod@counter,f
  3394  0751  1D03               	btfss	3,2
  3395  0752  2F3A               	goto	l2300
  3396  0753                     l2308:	
  3397  0753  0876               	movf	___awmod@sign,w
  3398  0754  1903               	btfsc	3,2
  3399  0755  2F5B               	goto	l2312
  3400  0756  09A2               	comf	___awmod@dividend,f
  3401  0757  09A3               	comf	___awmod@dividend+1,f
  3402  0758  0AA2               	incf	___awmod@dividend,f
  3403  0759  1903               	skipnz
  3404  075A  0AA3               	incf	___awmod@dividend+1,f
  3405  075B                     l2312:	
  3406  075B  0823               	movf	___awmod@dividend+1,w
  3407  075C  00A1               	movwf	?___awmod+1
  3408  075D  0822               	movf	___awmod@dividend,w
  3409  075E  00A0               	movwf	?___awmod
  3410  075F  0008               	return
  3411  0760                     __end_of___awmod:	
  3412                           
  3413                           	psect	text17
  3414  05BC                     __ptext17:	
  3415 ;; *************** function ___awdiv *****************
  3416 ;; Defined at:
  3417 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  divisor         2    0[BANK0 ] int 
  3420 ;;  dividend        2    2[BANK0 ] int 
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;  quotient        2    6[BANK0 ] int 
  3423 ;;  sign            1    5[BANK0 ] unsigned char 
  3424 ;;  counter         1    4[BANK0 ] unsigned char 
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  2    0[BANK0 ] int 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3434 ;;      Params:         0       4       0       0       0
  3435 ;;      Locals:         0       4       0       0       0
  3436 ;;      Temps:          1       0       0       0       0
  3437 ;;      Totals:         1       8       0       0       0
  3438 ;;Total ram usage:        9 bytes
  3439 ;; Hardware stack levels used:    1
  3440 ;; Hardware stack levels required when called:    1
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_Task_vidDisplayTemp
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           
  3449                           ;psect for function ___awdiv
  3450  05BC                     ___awdiv:	
  3451                           
  3452                           ;incstack = 0
  3453                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3454  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3455  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3456  05BE  01A5               	clrf	___awdiv@sign
  3457  05BF  1FA1               	btfss	___awdiv@divisor+1,7
  3458  05C0  2DC8               	goto	l2242
  3459  05C1  09A0               	comf	___awdiv@divisor,f
  3460  05C2  09A1               	comf	___awdiv@divisor+1,f
  3461  05C3  0AA0               	incf	___awdiv@divisor,f
  3462  05C4  1903               	skipnz
  3463  05C5  0AA1               	incf	___awdiv@divisor+1,f
  3464  05C6  01A5               	clrf	___awdiv@sign
  3465  05C7  0AA5               	incf	___awdiv@sign,f
  3466  05C8                     l2242:	
  3467  05C8  1FA3               	btfss	___awdiv@dividend+1,7
  3468  05C9  2DD3               	goto	l2248
  3469  05CA  09A2               	comf	___awdiv@dividend,f
  3470  05CB  09A3               	comf	___awdiv@dividend+1,f
  3471  05CC  0AA2               	incf	___awdiv@dividend,f
  3472  05CD  1903               	skipnz
  3473  05CE  0AA3               	incf	___awdiv@dividend+1,f
  3474  05CF  3001               	movlw	1
  3475  05D0  00F4               	movwf	??___awdiv
  3476  05D1  0874               	movf	??___awdiv,w
  3477  05D2  06A5               	xorwf	___awdiv@sign,f
  3478  05D3                     l2248:	
  3479  05D3  01A6               	clrf	___awdiv@quotient
  3480  05D4  01A7               	clrf	___awdiv@quotient+1
  3481  05D5  0820               	movf	___awdiv@divisor,w
  3482  05D6  0421               	iorwf	___awdiv@divisor+1,w
  3483  05D7  1903               	btfsc	3,2
  3484  05D8  2E0A               	goto	l2270
  3485  05D9  01A4               	clrf	___awdiv@counter
  3486  05DA  0AA4               	incf	___awdiv@counter,f
  3487  05DB                     l2258:	
  3488  05DB  1BA1               	btfsc	___awdiv@divisor+1,7
  3489  05DC  2DE9               	goto	l2260
  3490  05DD  3001               	movlw	1
  3491  05DE                     u2455:	
  3492  05DE  1003               	clrc
  3493  05DF  0DA0               	rlf	___awdiv@divisor,f
  3494  05E0  0DA1               	rlf	___awdiv@divisor+1,f
  3495  05E1  3EFF               	addlw	-1
  3496  05E2  1D03               	skipz
  3497  05E3  2DDE               	goto	u2455
  3498  05E4  3001               	movlw	1
  3499  05E5  00F4               	movwf	??___awdiv
  3500  05E6  0874               	movf	??___awdiv,w
  3501  05E7  07A4               	addwf	___awdiv@counter,f
  3502  05E8  2DDB               	goto	l2258
  3503  05E9                     l2260:	
  3504  05E9  3001               	movlw	1
  3505  05EA                     u2475:	
  3506  05EA  1003               	clrc
  3507  05EB  0DA6               	rlf	___awdiv@quotient,f
  3508  05EC  0DA7               	rlf	___awdiv@quotient+1,f
  3509  05ED  3EFF               	addlw	-1
  3510  05EE  1D03               	skipz
  3511  05EF  2DEA               	goto	u2475
  3512  05F0  0821               	movf	___awdiv@divisor+1,w
  3513  05F1  0223               	subwf	___awdiv@dividend+1,w
  3514  05F2  1D03               	skipz
  3515  05F3  2DF6               	goto	u2485
  3516  05F4  0820               	movf	___awdiv@divisor,w
  3517  05F5  0222               	subwf	___awdiv@dividend,w
  3518  05F6                     u2485:	
  3519  05F6  1C03               	skipc
  3520  05F7  2DFF               	goto	l2266
  3521  05F8  0820               	movf	___awdiv@divisor,w
  3522  05F9  02A2               	subwf	___awdiv@dividend,f
  3523  05FA  0821               	movf	___awdiv@divisor+1,w
  3524  05FB  1C03               	skipc
  3525  05FC  03A3               	decf	___awdiv@dividend+1,f
  3526  05FD  02A3               	subwf	___awdiv@dividend+1,f
  3527  05FE  1426               	bsf	___awdiv@quotient,0
  3528  05FF                     l2266:	
  3529  05FF  3001               	movlw	1
  3530  0600                     u2495:	
  3531  0600  1003               	clrc
  3532  0601  0CA1               	rrf	___awdiv@divisor+1,f
  3533  0602  0CA0               	rrf	___awdiv@divisor,f
  3534  0603  3EFF               	addlw	-1
  3535  0604  1D03               	skipz
  3536  0605  2E00               	goto	u2495
  3537  0606  3001               	movlw	1
  3538  0607  02A4               	subwf	___awdiv@counter,f
  3539  0608  1D03               	btfss	3,2
  3540  0609  2DE9               	goto	l2260
  3541  060A                     l2270:	
  3542  060A  0825               	movf	___awdiv@sign,w
  3543  060B  1903               	btfsc	3,2
  3544  060C  2E12               	goto	l2274
  3545  060D  09A6               	comf	___awdiv@quotient,f
  3546  060E  09A7               	comf	___awdiv@quotient+1,f
  3547  060F  0AA6               	incf	___awdiv@quotient,f
  3548  0610  1903               	skipnz
  3549  0611  0AA7               	incf	___awdiv@quotient+1,f
  3550  0612                     l2274:	
  3551  0612  0827               	movf	___awdiv@quotient+1,w
  3552  0613  00A1               	movwf	?___awdiv+1
  3553  0614  0826               	movf	___awdiv@quotient,w
  3554  0615  00A0               	movwf	?___awdiv
  3555  0616  0008               	return
  3556  0617                     __end_of___awdiv:	
  3557                           
  3558                           	psect	text18
  3559  017C                     __ptext18:	
  3560 ;; *************** function _TASK_vidWaterConditioning *****************
  3561 ;; Defined at:
  3562 ;;		line 115 in file "HAL.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;  SumTemp        40    0[BANK1 ] unsigned long [10]
  3567 ;;  AvgTemp         4   44[BANK1 ] unsigned long 
  3568 ;;  AllSum          4   40[BANK1 ] unsigned long 
  3569 ;;  j               1   48[BANK1 ] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      void 
  3572 ;; Registers used:
  3573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3579 ;;      Params:         0       0       0       0       0
  3580 ;;      Locals:         0       0      49       0       0
  3581 ;;      Temps:          0       6       0       0       0
  3582 ;;      Totals:         0       6      49       0       0
  3583 ;;Total ram usage:       55 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    3
  3586 ;; This function calls:
  3587 ;;		___ftdiv
  3588 ;;		___fttol
  3589 ;;		___lltoft
  3590 ;; This function is called by:
  3591 ;;		_main
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           
  3596                           ;psect for function _TASK_vidWaterConditioning
  3597  017C                     _TASK_vidWaterConditioning:	
  3598                           
  3599                           ;HAL.c: 117: u8 j=0;
  3600                           
  3601                           ;incstack = 0
  3602                           ; Regs used in _TASK_vidWaterConditioning: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3603  017C  1683               	bsf	3,5	;RP0=1, select bank1
  3604  017D  1303               	bcf	3,6	;RP1=0, select bank1
  3605  017E  01D0               	clrf	TASK_vidWaterConditioning@j^(0+128)
  3606                           
  3607                           ;HAL.c: 118: u32 SumTemp[10];
  3608                           ;HAL.c: 119: u32 AllSum = 0;
  3609  017F  3000               	movlw	0
  3610  0180  00CB               	movwf	(TASK_vidWaterConditioning@AllSum+3)^(0+128)
  3611  0181  3000               	movlw	0
  3612  0182  00CA               	movwf	(TASK_vidWaterConditioning@AllSum+2)^(0+128)
  3613  0183  3000               	movlw	0
  3614  0184  00C9               	movwf	(TASK_vidWaterConditioning@AllSum+1)^(0+128)
  3615  0185  3000               	movlw	0
  3616  0186  00C8               	movwf	TASK_vidWaterConditioning@AllSum^(0+128)
  3617                           
  3618                           ;HAL.c: 120: u32 AvgTemp = 0;
  3619  0187  3000               	movlw	0
  3620  0188  00CF               	movwf	(TASK_vidWaterConditioning@AvgTemp+3)^(0+128)
  3621  0189  3000               	movlw	0
  3622  018A  00CE               	movwf	(TASK_vidWaterConditioning@AvgTemp+2)^(0+128)
  3623  018B  3000               	movlw	0
  3624  018C  00CD               	movwf	(TASK_vidWaterConditioning@AvgTemp+1)^(0+128)
  3625  018D  3000               	movlw	0
  3626  018E  00CC               	movwf	TASK_vidWaterConditioning@AvgTemp^(0+128)
  3627                           
  3628                           ;HAL.c: 121: static u8 i = 0 ;
  3629                           ;HAL.c: 124: SumTemp[i]=CurrentTemp;
  3630  018F  0852               	movf	_CurrentTemp^(0+128),w
  3631  0190  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0191  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0192  00D7               	movwf	??_TASK_vidWaterConditioning
  3634  0193  01D8               	clrf	??_TASK_vidWaterConditioning+1
  3635  0194  01D9               	clrf	??_TASK_vidWaterConditioning+2
  3636  0195  01DA               	clrf	??_TASK_vidWaterConditioning+3
  3637  0196  1683               	bsf	3,5	;RP0=1, select bank1
  3638  0197  1303               	bcf	3,6	;RP1=0, select bank1
  3639  0198  0851               	movf	TASK_vidWaterConditioning@i^(0+128),w
  3640  0199  1283               	bcf	3,5	;RP0=0, select bank0
  3641  019A  1303               	bcf	3,6	;RP1=0, select bank0
  3642  019B  00DB               	movwf	??_TASK_vidWaterConditioning+4
  3643  019C  3001               	movlw	1
  3644  019D                     u2855:	
  3645  019D  1003               	clrc
  3646  019E  0DDB               	rlf	??_TASK_vidWaterConditioning+4,f
  3647  019F  3EFF               	addlw	-1
  3648  01A0  1D03               	skipz
  3649  01A1  299D               	goto	u2855
  3650  01A2  1003               	clrc
  3651  01A3  0D5B               	rlf	??_TASK_vidWaterConditioning+4,w
  3652  01A4  3EA0               	addlw	(low (TASK_vidWaterConditioning@SumTemp| 0))& (0+255)
  3653  01A5  0084               	movwf	4
  3654  01A6  0857               	movf	??_TASK_vidWaterConditioning,w
  3655  01A7  1383               	bcf	3,7	;select IRP bank1
  3656  01A8  0080               	movwf	0
  3657  01A9  0A84               	incf	4,f
  3658  01AA  0858               	movf	??_TASK_vidWaterConditioning+1,w
  3659  01AB  0080               	movwf	0
  3660  01AC  0A84               	incf	4,f
  3661  01AD  0859               	movf	??_TASK_vidWaterConditioning+2,w
  3662  01AE  0080               	movwf	0
  3663  01AF  0A84               	incf	4,f
  3664  01B0  085A               	movf	??_TASK_vidWaterConditioning+3,w
  3665  01B1  0080               	movwf	0
  3666                           
  3667                           ;HAL.c: 125: i++;
  3668  01B2  3001               	movlw	1
  3669  01B3  00D7               	movwf	??_TASK_vidWaterConditioning
  3670  01B4  0857               	movf	??_TASK_vidWaterConditioning,w
  3671  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  3672  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  3673  01B7  07D1               	addwf	TASK_vidWaterConditioning@i^(0+128),f
  3674                           
  3675                           ;HAL.c: 126: if(i==10)
  3676  01B8  300A               	movlw	10
  3677  01B9  0651               	xorwf	TASK_vidWaterConditioning@i^(0+128),w
  3678  01BA  1D03               	btfss	3,2
  3679  01BB  0008               	return
  3680                           
  3681                           ;HAL.c: 127: {
  3682                           ;HAL.c: 128: i=0;
  3683  01BC  01D1               	clrf	TASK_vidWaterConditioning@i^(0+128)
  3684                           
  3685                           ;HAL.c: 129: for(j = 0 ; j < 10 ; j++)
  3686  01BD  01D0               	clrf	TASK_vidWaterConditioning@j^(0+128)
  3687  01BE  300A               	movlw	10
  3688  01BF  0250               	subwf	TASK_vidWaterConditioning@j^(0+128),w
  3689  01C0  1803               	btfsc	3,0
  3690  01C1  29F5               	goto	l2464
  3691  01C2                     l2458:	
  3692                           
  3693                           ;HAL.c: 130: {
  3694                           ;HAL.c: 131: AllSum += SumTemp[j];
  3695  01C2  0850               	movf	TASK_vidWaterConditioning@j^(0+128),w
  3696  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  3697  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  3698  01C5  00D7               	movwf	??_TASK_vidWaterConditioning
  3699  01C6  3001               	movlw	1
  3700  01C7                     u2885:	
  3701  01C7  1003               	clrc
  3702  01C8  0DD7               	rlf	??_TASK_vidWaterConditioning,f
  3703  01C9  3EFF               	addlw	-1
  3704  01CA  1D03               	skipz
  3705  01CB  29C7               	goto	u2885
  3706  01CC  1003               	clrc
  3707  01CD  0D57               	rlf	??_TASK_vidWaterConditioning,w
  3708  01CE  3EA0               	addlw	(low (TASK_vidWaterConditioning@SumTemp| 0))& (0+255)
  3709  01CF  0084               	movwf	4
  3710  01D0  0800               	movf	0,w
  3711  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  3712  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  3713  01D3  07C8               	addwf	TASK_vidWaterConditioning@AllSum^(0+128),f
  3714  01D4  0A84               	incf	4,f
  3715  01D5  0800               	movf	0,w
  3716  01D6  1803               	skipnc
  3717  01D7  0F00               	incfsz	0,w
  3718  01D8  29DA               	goto	u2891
  3719  01D9  29DB               	goto	u2892
  3720  01DA                     u2891:	
  3721  01DA  07C9               	addwf	(TASK_vidWaterConditioning@AllSum+1)^(0+128),f
  3722  01DB                     u2892:	
  3723  01DB  0A84               	incf	4,f
  3724  01DC  0800               	movf	0,w
  3725  01DD  1803               	skipnc
  3726  01DE  0F00               	incfsz	0,w
  3727  01DF  29E1               	goto	u2893
  3728  01E0  29E2               	goto	u2894
  3729  01E1                     u2893:	
  3730  01E1  07CA               	addwf	(TASK_vidWaterConditioning@AllSum+2)^(0+128),f
  3731  01E2                     u2894:	
  3732  01E2  0A84               	incf	4,f
  3733  01E3  0800               	movf	0,w
  3734  01E4  1803               	skipnc
  3735  01E5  0F00               	incfsz	0,w
  3736  01E6  29E8               	goto	u2895
  3737  01E7  29E9               	goto	l2460
  3738  01E8                     u2895:	
  3739  01E8  07CB               	addwf	(TASK_vidWaterConditioning@AllSum+3)^(0+128),f
  3740  01E9                     l2460:	
  3741  01E9  3001               	movlw	1
  3742  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  3743  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  3744  01EC  00D7               	movwf	??_TASK_vidWaterConditioning
  3745  01ED  0857               	movf	??_TASK_vidWaterConditioning,w
  3746  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  3747  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  3748  01F0  07D0               	addwf	TASK_vidWaterConditioning@j^(0+128),f
  3749  01F1  300A               	movlw	10
  3750  01F2  0250               	subwf	TASK_vidWaterConditioning@j^(0+128),w
  3751  01F3  1C03               	skipc
  3752  01F4  29C2               	goto	l2458
  3753  01F5                     l2464:	
  3754                           
  3755                           ;HAL.c: 132: }
  3756                           ;HAL.c: 133: AvgTemp = (u32) (AllSum / 10.0);
  3757  01F5  084B               	movf	(TASK_vidWaterConditioning@AllSum+3)^(0+128),w
  3758  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  3759  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  3760  01F8  00A8               	movwf	___lltoft@c+3
  3761  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  3762  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  3763  01FB  084A               	movf	(TASK_vidWaterConditioning@AllSum+2)^(0+128),w
  3764  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  3765  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  3766  01FE  00A7               	movwf	___lltoft@c+2
  3767  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  3768  0200  1303               	bcf	3,6	;RP1=0, select bank1
  3769  0201  0849               	movf	(TASK_vidWaterConditioning@AllSum+1)^(0+128),w
  3770  0202  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0203  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0204  00A6               	movwf	___lltoft@c+1
  3773  0205  1683               	bsf	3,5	;RP0=1, select bank1
  3774  0206  1303               	bcf	3,6	;RP1=0, select bank1
  3775  0207  0848               	movf	TASK_vidWaterConditioning@AllSum^(0+128),w
  3776  0208  1283               	bcf	3,5	;RP0=0, select bank0
  3777  0209  1303               	bcf	3,6	;RP1=0, select bank0
  3778  020A  00A5               	movwf	___lltoft@c
  3779  020B  120A  158A  2767  120A  118A  	fcall	___lltoft
  3780  0210  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0211  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0212  0825               	movf	?___lltoft,w
  3783  0213  00BC               	movwf	___ftdiv@f1
  3784  0214  0826               	movf	?___lltoft+1,w
  3785  0215  00BD               	movwf	___ftdiv@f1+1
  3786  0216  0827               	movf	?___lltoft+2,w
  3787  0217  00BE               	movwf	___ftdiv@f1+2
  3788  0218  3000               	movlw	0
  3789  0219  00B9               	movwf	___ftdiv@f2
  3790  021A  3020               	movlw	32
  3791  021B  00BA               	movwf	___ftdiv@f2+1
  3792  021C  3041               	movlw	65
  3793  021D  00BB               	movwf	___ftdiv@f2+2
  3794  021E  120A  118A  238B  120A  118A  	fcall	___ftdiv
  3795  0223  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0224  1303               	bcf	3,6	;RP1=0, select bank0
  3797  0225  0839               	movf	?___ftdiv,w
  3798  0226  00C9               	movwf	___fttol@f1
  3799  0227  083A               	movf	?___ftdiv+1,w
  3800  0228  00CA               	movwf	___fttol@f1+1
  3801  0229  083B               	movf	?___ftdiv+2,w
  3802  022A  00CB               	movwf	___fttol@f1+2
  3803  022B  120A  118A  2443  120A  118A  	fcall	___fttol
  3804  0230  1283               	bcf	3,5	;RP0=0, select bank0
  3805  0231  1303               	bcf	3,6	;RP1=0, select bank0
  3806  0232  084C               	movf	?___fttol+3,w
  3807  0233  1683               	bsf	3,5	;RP0=1, select bank1
  3808  0234  1303               	bcf	3,6	;RP1=0, select bank1
  3809  0235  00CF               	movwf	(TASK_vidWaterConditioning@AvgTemp+3)^(0+128)
  3810  0236  1283               	bcf	3,5	;RP0=0, select bank0
  3811  0237  1303               	bcf	3,6	;RP1=0, select bank0
  3812  0238  084B               	movf	?___fttol+2,w
  3813  0239  1683               	bsf	3,5	;RP0=1, select bank1
  3814  023A  1303               	bcf	3,6	;RP1=0, select bank1
  3815  023B  00CE               	movwf	(TASK_vidWaterConditioning@AvgTemp+2)^(0+128)
  3816  023C  1283               	bcf	3,5	;RP0=0, select bank0
  3817  023D  1303               	bcf	3,6	;RP1=0, select bank0
  3818  023E  084A               	movf	?___fttol+1,w
  3819  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3820  0240  1303               	bcf	3,6	;RP1=0, select bank1
  3821  0241  00CD               	movwf	(TASK_vidWaterConditioning@AvgTemp+1)^(0+128)
  3822  0242  1283               	bcf	3,5	;RP0=0, select bank0
  3823  0243  1303               	bcf	3,6	;RP1=0, select bank0
  3824  0244  0849               	movf	?___fttol,w
  3825  0245  1683               	bsf	3,5	;RP0=1, select bank1
  3826  0246  1303               	bcf	3,6	;RP1=0, select bank1
  3827  0247  00CC               	movwf	TASK_vidWaterConditioning@AvgTemp^(0+128)
  3828                           
  3829                           ;HAL.c: 135: if (AvgTemp > (Temp+5))
  3830  0248  0853               	movf	_Temp^(0+128),w	;volatile
  3831  0249  3E05               	addlw	5
  3832  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3833  024B  1303               	bcf	3,6	;RP1=0, select bank0
  3834  024C  00D7               	movwf	??_TASK_vidWaterConditioning
  3835  024D  3000               	movlw	0
  3836  024E  1803               	skipnc
  3837  024F  3001               	movlw	1
  3838  0250  00D8               	movwf	??_TASK_vidWaterConditioning+1
  3839  0251  0857               	movf	??_TASK_vidWaterConditioning,w
  3840  0252  00D9               	movwf	??_TASK_vidWaterConditioning+2
  3841  0253  0858               	movf	??_TASK_vidWaterConditioning+1,w
  3842  0254  00DA               	movwf	??_TASK_vidWaterConditioning+3
  3843  0255  3000               	movlw	0
  3844  0256  1BDA               	btfsc	??_TASK_vidWaterConditioning+3,7
  3845  0257  30FF               	movlw	255
  3846  0258  00DB               	movwf	??_TASK_vidWaterConditioning+4
  3847  0259  00DC               	movwf	??_TASK_vidWaterConditioning+5
  3848  025A  1683               	bsf	3,5	;RP0=1, select bank1
  3849  025B  1303               	bcf	3,6	;RP1=0, select bank1
  3850  025C  084F               	movf	(TASK_vidWaterConditioning@AvgTemp+3)^(0+128),w
  3851  025D  1283               	bcf	3,5	;RP0=0, select bank0
  3852  025E  1303               	bcf	3,6	;RP1=0, select bank0
  3853  025F  025C               	subwf	??_TASK_vidWaterConditioning+5,w
  3854  0260  1D03               	skipz
  3855  0261  2A78               	goto	u2915
  3856  0262  1683               	bsf	3,5	;RP0=1, select bank1
  3857  0263  1303               	bcf	3,6	;RP1=0, select bank1
  3858  0264  084E               	movf	(TASK_vidWaterConditioning@AvgTemp+2)^(0+128),w
  3859  0265  1283               	bcf	3,5	;RP0=0, select bank0
  3860  0266  1303               	bcf	3,6	;RP1=0, select bank0
  3861  0267  025B               	subwf	??_TASK_vidWaterConditioning+4,w
  3862  0268  1D03               	skipz
  3863  0269  2A78               	goto	u2915
  3864  026A  1683               	bsf	3,5	;RP0=1, select bank1
  3865  026B  1303               	bcf	3,6	;RP1=0, select bank1
  3866  026C  084D               	movf	(TASK_vidWaterConditioning@AvgTemp+1)^(0+128),w
  3867  026D  1283               	bcf	3,5	;RP0=0, select bank0
  3868  026E  1303               	bcf	3,6	;RP1=0, select bank0
  3869  026F  025A               	subwf	??_TASK_vidWaterConditioning+3,w
  3870  0270  1D03               	skipz
  3871  0271  2A78               	goto	u2915
  3872  0272  1683               	bsf	3,5	;RP0=1, select bank1
  3873  0273  1303               	bcf	3,6	;RP1=0, select bank1
  3874  0274  084C               	movf	TASK_vidWaterConditioning@AvgTemp^(0+128),w
  3875  0275  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0276  1303               	bcf	3,6	;RP1=0, select bank0
  3877  0277  0259               	subwf	??_TASK_vidWaterConditioning+2,w
  3878  0278                     u2915:	
  3879  0278  1803               	skipnc
  3880  0279  2A7F               	goto	l2470
  3881                           
  3882                           ;HAL.c: 136: {
  3883                           ;HAL.c: 137: PORTCbits.RC2=1;
  3884  027A  1507               	bsf	7,2	;volatile
  3885                           
  3886                           ;HAL.c: 138: PORTCbits.RC5=0;
  3887  027B  1287               	bcf	7,5	;volatile
  3888                           
  3889                           ;HAL.c: 139: PORTBbits.RB4=1;
  3890  027C  1606               	bsf	6,4	;volatile
  3891                           
  3892                           ;HAL.c: 140: PORTBbits.RB5=0;
  3893  027D  1286               	bcf	6,5	;volatile
  3894                           
  3895                           ;HAL.c: 141: }
  3896  027E  0008               	return
  3897  027F                     l2470:	
  3898                           
  3899                           ;HAL.c: 143: else if (AvgTemp < (Temp-5))
  3900  027F  1683               	bsf	3,5	;RP0=1, select bank1
  3901  0280  1303               	bcf	3,6	;RP1=0, select bank1
  3902  0281  0853               	movf	_Temp^(0+128),w	;volatile
  3903  0282  3EFB               	addlw	251
  3904  0283  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0284  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0285  00D7               	movwf	??_TASK_vidWaterConditioning
  3907  0286  30FF               	movlw	255
  3908  0287  1803               	skipnc
  3909  0288  3000               	movlw	0
  3910  0289  00D8               	movwf	??_TASK_vidWaterConditioning+1
  3911  028A  0857               	movf	??_TASK_vidWaterConditioning,w
  3912  028B  00D9               	movwf	??_TASK_vidWaterConditioning+2
  3913  028C  0858               	movf	??_TASK_vidWaterConditioning+1,w
  3914  028D  00DA               	movwf	??_TASK_vidWaterConditioning+3
  3915  028E  3000               	movlw	0
  3916  028F  1BDA               	btfsc	??_TASK_vidWaterConditioning+3,7
  3917  0290  30FF               	movlw	255
  3918  0291  00DB               	movwf	??_TASK_vidWaterConditioning+4
  3919  0292  00DC               	movwf	??_TASK_vidWaterConditioning+5
  3920  0293  085C               	movf	??_TASK_vidWaterConditioning+5,w
  3921  0294  1683               	bsf	3,5	;RP0=1, select bank1
  3922  0295  1303               	bcf	3,6	;RP1=0, select bank1
  3923  0296  024F               	subwf	(TASK_vidWaterConditioning@AvgTemp+3)^(0+128),w
  3924  0297  1D03               	skipz
  3925  0298  2AAF               	goto	u2925
  3926  0299  1283               	bcf	3,5	;RP0=0, select bank0
  3927  029A  1303               	bcf	3,6	;RP1=0, select bank0
  3928  029B  085B               	movf	??_TASK_vidWaterConditioning+4,w
  3929  029C  1683               	bsf	3,5	;RP0=1, select bank1
  3930  029D  1303               	bcf	3,6	;RP1=0, select bank1
  3931  029E  024E               	subwf	(TASK_vidWaterConditioning@AvgTemp+2)^(0+128),w
  3932  029F  1D03               	skipz
  3933  02A0  2AAF               	goto	u2925
  3934  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  3935  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  3936  02A3  085A               	movf	??_TASK_vidWaterConditioning+3,w
  3937  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  3938  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  3939  02A6  024D               	subwf	(TASK_vidWaterConditioning@AvgTemp+1)^(0+128),w
  3940  02A7  1D03               	skipz
  3941  02A8  2AAF               	goto	u2925
  3942  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  3943  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  3944  02AB  0859               	movf	??_TASK_vidWaterConditioning+2,w
  3945  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  3946  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  3947  02AE  024C               	subwf	TASK_vidWaterConditioning@AvgTemp^(0+128),w
  3948  02AF                     u2925:	
  3949  02AF  1803               	skipnc
  3950  02B0  0008               	return
  3951                           
  3952                           ;HAL.c: 144: {
  3953                           ;HAL.c: 145: PORTCbits.RC2=0;
  3954  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  3955  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  3956  02B3  1107               	bcf	7,2	;volatile
  3957                           
  3958                           ;HAL.c: 146: PORTCbits.RC5=1;
  3959  02B4  1687               	bsf	7,5	;volatile
  3960                           
  3961                           ;HAL.c: 147: PORTBbits.RB4=0;
  3962  02B5  1206               	bcf	6,4	;volatile
  3963                           
  3964                           ;HAL.c: 148: PORTBbits.RB5=1;
  3965  02B6  1686               	bsf	6,5	;volatile
  3966  02B7  0008               	return
  3967  02B8                     __end_of_TASK_vidWaterConditioning:	
  3968                           
  3969                           	psect	text19
  3970  0F67                     __ptext19:	
  3971 ;; *************** function ___lltoft *****************
  3972 ;; Defined at:
  3973 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  c               4    5[BANK0 ] unsigned long 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;  exp             1   10[BANK0 ] unsigned char 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  3    5[BANK0 ] float 
  3980 ;; Registers used:
  3981 ;;		wreg, status,2, status,0, pclath, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3987 ;;      Params:         0       4       0       0       0
  3988 ;;      Locals:         0       1       0       0       0
  3989 ;;      Temps:          0       1       0       0       0
  3990 ;;      Totals:         0       6       0       0       0
  3991 ;;Total ram usage:        6 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    2
  3994 ;; This function calls:
  3995 ;;		___ftpack
  3996 ;; This function is called by:
  3997 ;;		_TASK_vidWaterConditioning
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           
  4002                           ;psect for function ___lltoft
  4003  0F67                     ___lltoft:	
  4004                           
  4005                           ;incstack = 0
  4006                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4007  0F67  308E               	movlw	142
  4008  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  4010  0F6A  00A9               	movwf	??___lltoft
  4011  0F6B  0829               	movf	??___lltoft,w
  4012  0F6C  00AA               	movwf	___lltoft@exp
  4013  0F6D                     l2412:	
  4014  0F6D  30FF               	movlw	255
  4015  0F6E  0528               	andwf	___lltoft@c+3,w
  4016  0F6F  1903               	btfsc	3,2
  4017  0F70  2F7F               	goto	l2414
  4018  0F71  3001               	movlw	1
  4019  0F72                     u2835:	
  4020  0F72  1003               	clrc
  4021  0F73  0CA8               	rrf	___lltoft@c+3,f
  4022  0F74  0CA7               	rrf	___lltoft@c+2,f
  4023  0F75  0CA6               	rrf	___lltoft@c+1,f
  4024  0F76  0CA5               	rrf	___lltoft@c,f
  4025  0F77  3EFF               	addlw	-1
  4026  0F78  1D03               	skipz
  4027  0F79  2F72               	goto	u2835
  4028  0F7A  3001               	movlw	1
  4029  0F7B  00A9               	movwf	??___lltoft
  4030  0F7C  0829               	movf	??___lltoft,w
  4031  0F7D  07AA               	addwf	___lltoft@exp,f
  4032  0F7E  2F6D               	goto	l2412
  4033  0F7F                     l2414:	
  4034  0F7F  0825               	movf	___lltoft@c,w
  4035  0F80  00A0               	movwf	___ftpack@arg
  4036  0F81  0826               	movf	___lltoft@c+1,w
  4037  0F82  00A1               	movwf	___ftpack@arg+1
  4038  0F83  0827               	movf	___lltoft@c+2,w
  4039  0F84  00A2               	movwf	___ftpack@arg+2
  4040  0F85  082A               	movf	___lltoft@exp,w
  4041  0F86  00A9               	movwf	??___lltoft
  4042  0F87  0829               	movf	??___lltoft,w
  4043  0F88  00A3               	movwf	___ftpack@exp
  4044  0F89  01A4               	clrf	___ftpack@sign
  4045  0F8A  120A  118A  254E   	fcall	___ftpack
  4046  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4047  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4048  0F8F  0820               	movf	?___ftpack,w
  4049  0F90  00A5               	movwf	?___lltoft
  4050  0F91  0821               	movf	?___ftpack+1,w
  4051  0F92  00A6               	movwf	?___lltoft+1
  4052  0F93  0822               	movf	?___ftpack+2,w
  4053  0F94  00A7               	movwf	?___lltoft+2
  4054  0F95  0008               	return
  4055  0F96                     __end_of___lltoft:	
  4056                           
  4057                           	psect	text20
  4058  0443                     __ptext20:	
  4059 ;; *************** function ___fttol *****************
  4060 ;; Defined at:
  4061 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  f1              3   41[BANK0 ] float 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  lval            4   50[BANK0 ] unsigned long 
  4066 ;;  exp1            1   54[BANK0 ] unsigned char 
  4067 ;;  sign1           1   49[BANK0 ] unsigned char 
  4068 ;; Return value:  Size  Location     Type
  4069 ;;                  4   41[BANK0 ] long 
  4070 ;; Registers used:
  4071 ;;		wreg, status,2, status,0
  4072 ;; Tracked objects:
  4073 ;;		On entry : 0/0
  4074 ;;		On exit  : 0/0
  4075 ;;		Unchanged: 0/0
  4076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4077 ;;      Params:         0       4       0       0       0
  4078 ;;      Locals:         0       6       0       0       0
  4079 ;;      Temps:          0       4       0       0       0
  4080 ;;      Totals:         0      14       0       0       0
  4081 ;;Total ram usage:       14 bytes
  4082 ;; Hardware stack levels used:    1
  4083 ;; Hardware stack levels required when called:    1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_Task_vidGetTemp
  4088 ;;		_TASK_vidWaterConditioning
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           
  4093                           ;psect for function ___fttol
  4094  0443                     ___fttol:	
  4095                           
  4096                           ;incstack = 0
  4097                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  4098  0443  1283               	bcf	3,5	;RP0=0, select bank0
  4099  0444  1303               	bcf	3,6	;RP1=0, select bank0
  4100  0445  0849               	movf	___fttol@f1,w
  4101  0446  00CD               	movwf	??___fttol
  4102  0447  084A               	movf	___fttol@f1+1,w
  4103  0448  00CE               	movwf	??___fttol+1
  4104  0449  084B               	movf	___fttol@f1+2,w
  4105  044A  00CF               	movwf	??___fttol+2
  4106  044B  1003               	clrc
  4107  044C  0D4E               	rlf	??___fttol+1,w
  4108  044D  0D4F               	rlf	??___fttol+2,w
  4109  044E  00D0               	movwf	??___fttol+3
  4110  044F  0850               	movf	??___fttol+3,w
  4111  0450  00D6               	movwf	___fttol@exp1
  4112  0451  0856               	movf	___fttol@exp1,w
  4113  0452  1D03               	btfss	3,2
  4114  0453  2C5D               	goto	l1770
  4115  0454  3000               	movlw	0
  4116  0455  00CC               	movwf	?___fttol+3
  4117  0456  3000               	movlw	0
  4118  0457  00CB               	movwf	?___fttol+2
  4119  0458  3000               	movlw	0
  4120  0459  00CA               	movwf	?___fttol+1
  4121  045A  3000               	movlw	0
  4122  045B  00C9               	movwf	?___fttol
  4123  045C  0008               	return
  4124  045D                     l1770:	
  4125  045D  0849               	movf	___fttol@f1,w
  4126  045E  00CD               	movwf	??___fttol
  4127  045F  084A               	movf	___fttol@f1+1,w
  4128  0460  00CE               	movwf	??___fttol+1
  4129  0461  084B               	movf	___fttol@f1+2,w
  4130  0462  00CF               	movwf	??___fttol+2
  4131  0463  3017               	movlw	23
  4132  0464                     u1755:	
  4133  0464  1003               	clrc
  4134  0465  0CCF               	rrf	??___fttol+2,f
  4135  0466  0CCE               	rrf	??___fttol+1,f
  4136  0467  0CCD               	rrf	??___fttol,f
  4137  0468  3EFF               	addlw	-1
  4138  0469  1D03               	skipz
  4139  046A  2C64               	goto	u1755
  4140  046B  084D               	movf	??___fttol,w
  4141  046C  00D0               	movwf	??___fttol+3
  4142  046D  0850               	movf	??___fttol+3,w
  4143  046E  00D1               	movwf	___fttol@sign1
  4144  046F  17CA               	bsf	___fttol@f1+1,7
  4145  0470  30FF               	movlw	255
  4146  0471  05C9               	andwf	___fttol@f1,f
  4147  0472  30FF               	movlw	255
  4148  0473  05CA               	andwf	___fttol@f1+1,f
  4149  0474  3000               	movlw	0
  4150  0475  05CB               	andwf	___fttol@f1+2,f
  4151  0476  0849               	movf	___fttol@f1,w
  4152  0477  00D2               	movwf	___fttol@lval
  4153  0478  084A               	movf	___fttol@f1+1,w
  4154  0479  00D3               	movwf	___fttol@lval+1
  4155  047A  084B               	movf	___fttol@f1+2,w
  4156  047B  00D4               	movwf	___fttol@lval+2
  4157  047C  01D5               	clrf	___fttol@lval+3
  4158  047D  308E               	movlw	142
  4159  047E  02D6               	subwf	___fttol@exp1,f
  4160  047F  1FD6               	btfss	___fttol@exp1,7
  4161  0480  2C9F               	goto	l1790
  4162  0481  0856               	movf	___fttol@exp1,w
  4163  0482  3A80               	xorlw	128
  4164  0483  3E8F               	addlw	143
  4165  0484  1803               	skipnc
  4166  0485  2C8F               	goto	l1788
  4167  0486  3000               	movlw	0
  4168  0487  00CC               	movwf	?___fttol+3
  4169  0488  3000               	movlw	0
  4170  0489  00CB               	movwf	?___fttol+2
  4171  048A  3000               	movlw	0
  4172  048B  00CA               	movwf	?___fttol+1
  4173  048C  3000               	movlw	0
  4174  048D  00C9               	movwf	?___fttol
  4175  048E  0008               	return
  4176  048F                     l1788:	
  4177  048F  3001               	movlw	1
  4178  0490                     u1785:	
  4179  0490  1003               	clrc
  4180  0491  0CD5               	rrf	___fttol@lval+3,f
  4181  0492  0CD4               	rrf	___fttol@lval+2,f
  4182  0493  0CD3               	rrf	___fttol@lval+1,f
  4183  0494  0CD2               	rrf	___fttol@lval,f
  4184  0495  3EFF               	addlw	-1
  4185  0496  1D03               	skipz
  4186  0497  2C90               	goto	u1785
  4187  0498  3001               	movlw	1
  4188  0499  00CD               	movwf	??___fttol
  4189  049A  084D               	movf	??___fttol,w
  4190  049B  07D6               	addwf	___fttol@exp1,f
  4191  049C  1903               	btfsc	3,2
  4192  049D  2CBA               	goto	l1798
  4193  049E  2C8F               	goto	l1788
  4194  049F                     l1790:	
  4195  049F  3018               	movlw	24
  4196  04A0  0256               	subwf	___fttol@exp1,w
  4197  04A1  1C03               	skipc
  4198  04A2  2CB7               	goto	l624
  4199  04A3  3000               	movlw	0
  4200  04A4  00CC               	movwf	?___fttol+3
  4201  04A5  3000               	movlw	0
  4202  04A6  00CB               	movwf	?___fttol+2
  4203  04A7  3000               	movlw	0
  4204  04A8  00CA               	movwf	?___fttol+1
  4205  04A9  3000               	movlw	0
  4206  04AA  00C9               	movwf	?___fttol
  4207  04AB  0008               	return
  4208  04AC                     l1796:	
  4209  04AC  3001               	movlw	1
  4210  04AD  00CD               	movwf	??___fttol
  4211  04AE                     u1815:	
  4212  04AE  1003               	clrc
  4213  04AF  0DD2               	rlf	___fttol@lval,f
  4214  04B0  0DD3               	rlf	___fttol@lval+1,f
  4215  04B1  0DD4               	rlf	___fttol@lval+2,f
  4216  04B2  0DD5               	rlf	___fttol@lval+3,f
  4217  04B3  0BCD               	decfsz	??___fttol,f
  4218  04B4  2CAE               	goto	u1815
  4219  04B5  3001               	movlw	1
  4220  04B6  02D6               	subwf	___fttol@exp1,f
  4221  04B7                     l624:	
  4222  04B7  0856               	movf	___fttol@exp1,w
  4223  04B8  1D03               	btfss	3,2
  4224  04B9  2CAC               	goto	l1796
  4225  04BA                     l1798:	
  4226  04BA  0851               	movf	___fttol@sign1,w
  4227  04BB  1903               	btfsc	3,2
  4228  04BC  2CC8               	goto	l1802
  4229  04BD  09D2               	comf	___fttol@lval,f
  4230  04BE  09D3               	comf	___fttol@lval+1,f
  4231  04BF  09D4               	comf	___fttol@lval+2,f
  4232  04C0  09D5               	comf	___fttol@lval+3,f
  4233  04C1  0AD2               	incf	___fttol@lval,f
  4234  04C2  1903               	skipnz
  4235  04C3  0AD3               	incf	___fttol@lval+1,f
  4236  04C4  1903               	skipnz
  4237  04C5  0AD4               	incf	___fttol@lval+2,f
  4238  04C6  1903               	skipnz
  4239  04C7  0AD5               	incf	___fttol@lval+3,f
  4240  04C8                     l1802:	
  4241  04C8  0855               	movf	___fttol@lval+3,w
  4242  04C9  00CC               	movwf	?___fttol+3
  4243  04CA  0854               	movf	___fttol@lval+2,w
  4244  04CB  00CB               	movwf	?___fttol+2
  4245  04CC  0853               	movf	___fttol@lval+1,w
  4246  04CD  00CA               	movwf	?___fttol+1
  4247  04CE  0852               	movf	___fttol@lval,w
  4248  04CF  00C9               	movwf	?___fttol
  4249  04D0  0008               	return
  4250  04D1                     __end_of___fttol:	
  4251                           
  4252                           	psect	text21
  4253  038B                     __ptext21:	
  4254 ;; *************** function ___ftdiv *****************
  4255 ;; Defined at:
  4256 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  f2              3   25[BANK0 ] float 
  4259 ;;  f1              3   28[BANK0 ] float 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  f3              3   36[BANK0 ] float 
  4262 ;;  sign            1   40[BANK0 ] unsigned char 
  4263 ;;  exp             1   39[BANK0 ] unsigned char 
  4264 ;;  cntr            1   35[BANK0 ] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  3   25[BANK0 ] float 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0, pclath, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4274 ;;      Params:         0       6       0       0       0
  4275 ;;      Locals:         0       6       0       0       0
  4276 ;;      Temps:          0       4       0       0       0
  4277 ;;      Totals:         0      16       0       0       0
  4278 ;;Total ram usage:       16 bytes
  4279 ;; Hardware stack levels used:    1
  4280 ;; Hardware stack levels required when called:    2
  4281 ;; This function calls:
  4282 ;;		___ftpack
  4283 ;; This function is called by:
  4284 ;;		_Task_vidGetTemp
  4285 ;;		_TASK_vidWaterConditioning
  4286 ;; This function uses a non-reentrant model
  4287 ;;
  4288                           
  4289                           
  4290                           ;psect for function ___ftdiv
  4291  038B                     ___ftdiv:	
  4292                           
  4293                           ;incstack = 0
  4294                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4295  038B  1283               	bcf	3,5	;RP0=0, select bank0
  4296  038C  1303               	bcf	3,6	;RP1=0, select bank0
  4297  038D  083C               	movf	___ftdiv@f1,w
  4298  038E  00BF               	movwf	??___ftdiv
  4299  038F  083D               	movf	___ftdiv@f1+1,w
  4300  0390  00C0               	movwf	??___ftdiv+1
  4301  0391  083E               	movf	___ftdiv@f1+2,w
  4302  0392  00C1               	movwf	??___ftdiv+2
  4303  0393  1003               	clrc
  4304  0394  0D40               	rlf	??___ftdiv+1,w
  4305  0395  0D41               	rlf	??___ftdiv+2,w
  4306  0396  00C2               	movwf	??___ftdiv+3
  4307  0397  0842               	movf	??___ftdiv+3,w
  4308  0398  00C7               	movwf	___ftdiv@exp
  4309  0399  0847               	movf	___ftdiv@exp,w
  4310  039A  1D03               	btfss	3,2
  4311  039B  2BA3               	goto	l2322
  4312  039C  3000               	movlw	0
  4313  039D  00B9               	movwf	?___ftdiv
  4314  039E  3000               	movlw	0
  4315  039F  00BA               	movwf	?___ftdiv+1
  4316  03A0  3000               	movlw	0
  4317  03A1  00BB               	movwf	?___ftdiv+2
  4318  03A2  0008               	return
  4319  03A3                     l2322:	
  4320  03A3  0839               	movf	___ftdiv@f2,w
  4321  03A4  00BF               	movwf	??___ftdiv
  4322  03A5  083A               	movf	___ftdiv@f2+1,w
  4323  03A6  00C0               	movwf	??___ftdiv+1
  4324  03A7  083B               	movf	___ftdiv@f2+2,w
  4325  03A8  00C1               	movwf	??___ftdiv+2
  4326  03A9  1003               	clrc
  4327  03AA  0D40               	rlf	??___ftdiv+1,w
  4328  03AB  0D41               	rlf	??___ftdiv+2,w
  4329  03AC  00C2               	movwf	??___ftdiv+3
  4330  03AD  0842               	movf	??___ftdiv+3,w
  4331  03AE  00C8               	movwf	___ftdiv@sign
  4332  03AF  0848               	movf	___ftdiv@sign,w
  4333  03B0  1D03               	btfss	3,2
  4334  03B1  2BB9               	goto	l2328
  4335  03B2  3000               	movlw	0
  4336  03B3  00B9               	movwf	?___ftdiv
  4337  03B4  3000               	movlw	0
  4338  03B5  00BA               	movwf	?___ftdiv+1
  4339  03B6  3000               	movlw	0
  4340  03B7  00BB               	movwf	?___ftdiv+2
  4341  03B8  0008               	return
  4342  03B9                     l2328:	
  4343  03B9  3000               	movlw	0
  4344  03BA  00C4               	movwf	___ftdiv@f3
  4345  03BB  3000               	movlw	0
  4346  03BC  00C5               	movwf	___ftdiv@f3+1
  4347  03BD  3000               	movlw	0
  4348  03BE  00C6               	movwf	___ftdiv@f3+2
  4349  03BF  3089               	movlw	137
  4350  03C0  0748               	addwf	___ftdiv@sign,w
  4351  03C1  00BF               	movwf	??___ftdiv
  4352  03C2  083F               	movf	??___ftdiv,w
  4353  03C3  02C7               	subwf	___ftdiv@exp,f
  4354  03C4  083C               	movf	___ftdiv@f1,w
  4355  03C5  00BF               	movwf	??___ftdiv
  4356  03C6  083D               	movf	___ftdiv@f1+1,w
  4357  03C7  00C0               	movwf	??___ftdiv+1
  4358  03C8  083E               	movf	___ftdiv@f1+2,w
  4359  03C9  00C1               	movwf	??___ftdiv+2
  4360  03CA  3010               	movlw	16
  4361  03CB                     u2635:	
  4362  03CB  1003               	clrc
  4363  03CC  0CC1               	rrf	??___ftdiv+2,f
  4364  03CD  0CC0               	rrf	??___ftdiv+1,f
  4365  03CE  0CBF               	rrf	??___ftdiv,f
  4366  03CF  3EFF               	addlw	-1
  4367  03D0  1D03               	skipz
  4368  03D1  2BCB               	goto	u2635
  4369  03D2  083F               	movf	??___ftdiv,w
  4370  03D3  00C2               	movwf	??___ftdiv+3
  4371  03D4  0842               	movf	??___ftdiv+3,w
  4372  03D5  00C8               	movwf	___ftdiv@sign
  4373  03D6  0839               	movf	___ftdiv@f2,w
  4374  03D7  00BF               	movwf	??___ftdiv
  4375  03D8  083A               	movf	___ftdiv@f2+1,w
  4376  03D9  00C0               	movwf	??___ftdiv+1
  4377  03DA  083B               	movf	___ftdiv@f2+2,w
  4378  03DB  00C1               	movwf	??___ftdiv+2
  4379  03DC  3010               	movlw	16
  4380  03DD                     u2645:	
  4381  03DD  1003               	clrc
  4382  03DE  0CC1               	rrf	??___ftdiv+2,f
  4383  03DF  0CC0               	rrf	??___ftdiv+1,f
  4384  03E0  0CBF               	rrf	??___ftdiv,f
  4385  03E1  3EFF               	addlw	-1
  4386  03E2  1D03               	skipz
  4387  03E3  2BDD               	goto	u2645
  4388  03E4  083F               	movf	??___ftdiv,w
  4389  03E5  00C2               	movwf	??___ftdiv+3
  4390  03E6  0842               	movf	??___ftdiv+3,w
  4391  03E7  06C8               	xorwf	___ftdiv@sign,f
  4392  03E8  3080               	movlw	128
  4393  03E9  00BF               	movwf	??___ftdiv
  4394  03EA  083F               	movf	??___ftdiv,w
  4395  03EB  05C8               	andwf	___ftdiv@sign,f
  4396  03EC  17BD               	bsf	___ftdiv@f1+1,7
  4397  03ED  30FF               	movlw	255
  4398  03EE  05BC               	andwf	___ftdiv@f1,f
  4399  03EF  30FF               	movlw	255
  4400  03F0  05BD               	andwf	___ftdiv@f1+1,f
  4401  03F1  3000               	movlw	0
  4402  03F2  05BE               	andwf	___ftdiv@f1+2,f
  4403  03F3  17BA               	bsf	___ftdiv@f2+1,7
  4404  03F4  30FF               	movlw	255
  4405  03F5  05B9               	andwf	___ftdiv@f2,f
  4406  03F6  30FF               	movlw	255
  4407  03F7  05BA               	andwf	___ftdiv@f2+1,f
  4408  03F8  3000               	movlw	0
  4409  03F9  05BB               	andwf	___ftdiv@f2+2,f
  4410  03FA  3018               	movlw	24
  4411  03FB  00BF               	movwf	??___ftdiv
  4412  03FC  083F               	movf	??___ftdiv,w
  4413  03FD  00C3               	movwf	___ftdiv@cntr
  4414  03FE                     l2342:	
  4415  03FE  3001               	movlw	1
  4416  03FF                     u2655:	
  4417  03FF  1003               	clrc
  4418  0400  0DC4               	rlf	___ftdiv@f3,f
  4419  0401  0DC5               	rlf	___ftdiv@f3+1,f
  4420  0402  0DC6               	rlf	___ftdiv@f3+2,f
  4421  0403  3EFF               	addlw	-1
  4422  0404  1D03               	skipz
  4423  0405  2BFF               	goto	u2655
  4424  0406  083B               	movf	___ftdiv@f2+2,w
  4425  0407  023E               	subwf	___ftdiv@f1+2,w
  4426  0408  1D03               	skipz
  4427  0409  2C10               	goto	u2665
  4428  040A  083A               	movf	___ftdiv@f2+1,w
  4429  040B  023D               	subwf	___ftdiv@f1+1,w
  4430  040C  1D03               	skipz
  4431  040D  2C10               	goto	u2665
  4432  040E  0839               	movf	___ftdiv@f2,w
  4433  040F  023C               	subwf	___ftdiv@f1,w
  4434  0410                     u2665:	
  4435  0410  1C03               	skipc
  4436  0411  2C1D               	goto	l2350
  4437  0412  0839               	movf	___ftdiv@f2,w
  4438  0413  02BC               	subwf	___ftdiv@f1,f
  4439  0414  083A               	movf	___ftdiv@f2+1,w
  4440  0415  1C03               	skipc
  4441  0416  0F3A               	incfsz	___ftdiv@f2+1,w
  4442  0417  02BD               	subwf	___ftdiv@f1+1,f
  4443  0418  083B               	movf	___ftdiv@f2+2,w
  4444  0419  1C03               	skipc
  4445  041A  0A3B               	incf	___ftdiv@f2+2,w
  4446  041B  02BE               	subwf	___ftdiv@f1+2,f
  4447  041C  1444               	bsf	___ftdiv@f3,0
  4448  041D                     l2350:	
  4449  041D  3001               	movlw	1
  4450  041E                     u2675:	
  4451  041E  1003               	clrc
  4452  041F  0DBC               	rlf	___ftdiv@f1,f
  4453  0420  0DBD               	rlf	___ftdiv@f1+1,f
  4454  0421  0DBE               	rlf	___ftdiv@f1+2,f
  4455  0422  3EFF               	addlw	-1
  4456  0423  1D03               	skipz
  4457  0424  2C1E               	goto	u2675
  4458  0425  3001               	movlw	1
  4459  0426  02C3               	subwf	___ftdiv@cntr,f
  4460  0427  1D03               	btfss	3,2
  4461  0428  2BFE               	goto	l2342
  4462  0429  0844               	movf	___ftdiv@f3,w
  4463  042A  00A0               	movwf	___ftpack@arg
  4464  042B  0845               	movf	___ftdiv@f3+1,w
  4465  042C  00A1               	movwf	___ftpack@arg+1
  4466  042D  0846               	movf	___ftdiv@f3+2,w
  4467  042E  00A2               	movwf	___ftpack@arg+2
  4468  042F  0847               	movf	___ftdiv@exp,w
  4469  0430  00BF               	movwf	??___ftdiv
  4470  0431  083F               	movf	??___ftdiv,w
  4471  0432  00A3               	movwf	___ftpack@exp
  4472  0433  0848               	movf	___ftdiv@sign,w
  4473  0434  00C0               	movwf	??___ftdiv+1
  4474  0435  0840               	movf	??___ftdiv+1,w
  4475  0436  00A4               	movwf	___ftpack@sign
  4476  0437  120A  118A  254E   	fcall	___ftpack
  4477  043A  1283               	bcf	3,5	;RP0=0, select bank0
  4478  043B  1303               	bcf	3,6	;RP1=0, select bank0
  4479  043C  0820               	movf	?___ftpack,w
  4480  043D  00B9               	movwf	?___ftdiv
  4481  043E  0821               	movf	?___ftpack+1,w
  4482  043F  00BA               	movwf	?___ftdiv+1
  4483  0440  0822               	movf	?___ftpack+2,w
  4484  0441  00BB               	movwf	?___ftdiv+2
  4485  0442  0008               	return
  4486  0443                     __end_of___ftdiv:	
  4487                           
  4488                           	psect	text22
  4489  054E                     __ptext22:	
  4490 ;; *************** function ___ftpack *****************
  4491 ;; Defined at:
  4492 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  arg             3    0[BANK0 ] unsigned um
  4495 ;;  exp             1    3[BANK0 ] unsigned char 
  4496 ;;  sign            1    4[BANK0 ] unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  3    0[BANK0 ] float 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4508 ;;      Params:         0       5       0       0       0
  4509 ;;      Locals:         0       0       0       0       0
  4510 ;;      Temps:          3       0       0       0       0
  4511 ;;      Totals:         3       5       0       0       0
  4512 ;;Total ram usage:        8 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		___ftdiv
  4519 ;;		___ftmul
  4520 ;;		___lltoft
  4521 ;;		___lwtoft
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           
  4526                           ;psect for function ___ftpack
  4527  054E                     ___ftpack:	
  4528                           
  4529                           ;incstack = 0
  4530                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4531  054E  1283               	bcf	3,5	;RP0=0, select bank0
  4532  054F  1303               	bcf	3,6	;RP1=0, select bank0
  4533  0550  0823               	movf	___ftpack@exp,w
  4534  0551  1903               	btfsc	3,2
  4535  0552  2D58               	goto	l2132
  4536  0553  0822               	movf	___ftpack@arg+2,w
  4537  0554  0421               	iorwf	___ftpack@arg+1,w
  4538  0555  0420               	iorwf	___ftpack@arg,w
  4539  0556  1D03               	skipz
  4540  0557  2D6B               	goto	l2138
  4541  0558                     l2132:	
  4542  0558  3000               	movlw	0
  4543  0559  00A0               	movwf	?___ftpack
  4544  055A  3000               	movlw	0
  4545  055B  00A1               	movwf	?___ftpack+1
  4546  055C  3000               	movlw	0
  4547  055D  00A2               	movwf	?___ftpack+2
  4548  055E  0008               	return
  4549  055F                     l2136:	
  4550  055F  3001               	movlw	1
  4551  0560  00F4               	movwf	??___ftpack
  4552  0561  0874               	movf	??___ftpack,w
  4553  0562  07A3               	addwf	___ftpack@exp,f
  4554  0563  3001               	movlw	1
  4555  0564                     u2305:	
  4556  0564  1003               	clrc
  4557  0565  0CA2               	rrf	___ftpack@arg+2,f
  4558  0566  0CA1               	rrf	___ftpack@arg+1,f
  4559  0567  0CA0               	rrf	___ftpack@arg,f
  4560  0568  3EFF               	addlw	-1
  4561  0569  1D03               	skipz
  4562  056A  2D64               	goto	u2305
  4563  056B                     l2138:	
  4564  056B  30FE               	movlw	254
  4565  056C  0522               	andwf	___ftpack@arg+2,w
  4566  056D  1903               	btfsc	3,2
  4567  056E  2D86               	goto	l533
  4568  056F  2D5F               	goto	l2136
  4569  0570                     l2140:	
  4570  0570  3001               	movlw	1
  4571  0571  00F4               	movwf	??___ftpack
  4572  0572  0874               	movf	??___ftpack,w
  4573  0573  07A3               	addwf	___ftpack@exp,f
  4574  0574  3001               	movlw	1
  4575  0575  07A0               	addwf	___ftpack@arg,f
  4576  0576  3000               	movlw	0
  4577  0577  1803               	skipnc
  4578  0578  3001               	movlw	1
  4579  0579  07A1               	addwf	___ftpack@arg+1,f
  4580  057A  3000               	movlw	0
  4581  057B  1803               	skipnc
  4582  057C  3001               	movlw	1
  4583  057D  07A2               	addwf	___ftpack@arg+2,f
  4584  057E  3001               	movlw	1
  4585  057F                     u2325:	
  4586  057F  1003               	clrc
  4587  0580  0CA2               	rrf	___ftpack@arg+2,f
  4588  0581  0CA1               	rrf	___ftpack@arg+1,f
  4589  0582  0CA0               	rrf	___ftpack@arg,f
  4590  0583  3EFF               	addlw	-1
  4591  0584  1D03               	skipz
  4592  0585  2D7F               	goto	u2325
  4593  0586                     l533:	
  4594  0586  30FF               	movlw	255
  4595  0587  0522               	andwf	___ftpack@arg+2,w
  4596  0588  1903               	btfsc	3,2
  4597  0589  2D95               	goto	l2148
  4598  058A  2D70               	goto	l2140
  4599  058B                     l2146:	
  4600  058B  3001               	movlw	1
  4601  058C  02A3               	subwf	___ftpack@exp,f
  4602  058D  3001               	movlw	1
  4603  058E                     u2345:	
  4604  058E  1003               	clrc
  4605  058F  0DA0               	rlf	___ftpack@arg,f
  4606  0590  0DA1               	rlf	___ftpack@arg+1,f
  4607  0591  0DA2               	rlf	___ftpack@arg+2,f
  4608  0592  3EFF               	addlw	-1
  4609  0593  1D03               	skipz
  4610  0594  2D8E               	goto	u2345
  4611  0595                     l2148:	
  4612  0595  1BA1               	btfsc	___ftpack@arg+1,7
  4613  0596  2D9B               	goto	l540
  4614  0597  3002               	movlw	2
  4615  0598  0223               	subwf	___ftpack@exp,w
  4616  0599  1803               	skipnc
  4617  059A  2D8B               	goto	l2146
  4618  059B                     l540:	
  4619  059B  1823               	btfsc	___ftpack@exp,0
  4620  059C  2DA3               	goto	l541
  4621  059D  30FF               	movlw	255
  4622  059E  05A0               	andwf	___ftpack@arg,f
  4623  059F  307F               	movlw	127
  4624  05A0  05A1               	andwf	___ftpack@arg+1,f
  4625  05A1  30FF               	movlw	255
  4626  05A2  05A2               	andwf	___ftpack@arg+2,f
  4627  05A3                     l541:	
  4628  05A3  1003               	clrc
  4629  05A4  0CA3               	rrf	___ftpack@exp,f
  4630  05A5  0823               	movf	___ftpack@exp,w
  4631  05A6  00F4               	movwf	??___ftpack
  4632  05A7  01F5               	clrf	??___ftpack+1
  4633  05A8  01F6               	clrf	??___ftpack+2
  4634  05A9  3010               	movlw	16
  4635  05AA                     u2385:	
  4636  05AA  1003               	clrc
  4637  05AB  0DF4               	rlf	??___ftpack,f
  4638  05AC  0DF5               	rlf	??___ftpack+1,f
  4639  05AD  0DF6               	rlf	??___ftpack+2,f
  4640  05AE  3EFF               	addlw	-1
  4641  05AF  1D03               	skipz
  4642  05B0  2DAA               	goto	u2385
  4643  05B1  0874               	movf	??___ftpack,w
  4644  05B2  04A0               	iorwf	___ftpack@arg,f
  4645  05B3  0875               	movf	??___ftpack+1,w
  4646  05B4  04A1               	iorwf	___ftpack@arg+1,f
  4647  05B5  0876               	movf	??___ftpack+2,w
  4648  05B6  04A2               	iorwf	___ftpack@arg+2,f
  4649  05B7  0824               	movf	___ftpack@sign,w
  4650  05B8  1903               	btfsc	3,2
  4651  05B9  0008               	return
  4652  05BA  17A2               	bsf	___ftpack@arg+2,7
  4653  05BB  0008               	return
  4654  05BC                     __end_of___ftpack:	
  4655                           
  4656                           	psect	text23
  4657  0EAA                     __ptext23:	
  4658 ;; *************** function _TASK_vidSwitchOFFALLPeripherals *****************
  4659 ;; Defined at:
  4660 ;;		line 153 in file "HAL.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		None
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4674 ;;      Params:         0       0       0       0       0
  4675 ;;      Locals:         0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0
  4677 ;;      Totals:         0       0       0       0       0
  4678 ;;Total ram usage:        0 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    1
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_main
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           
  4689                           ;psect for function _TASK_vidSwitchOFFALLPeripherals
  4690  0EAA                     _TASK_vidSwitchOFFALLPeripherals:	
  4691                           
  4692                           ;HAL.c: 155: PORTAbits.RA3=0;
  4693                           
  4694                           ;incstack = 0
  4695                           ; Regs used in _TASK_vidSwitchOFFALLPeripherals: []
  4696  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  4697  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  4698  0EAC  1185               	bcf	5,3	;volatile
  4699                           
  4700                           ;HAL.c: 156: PORTAbits.RA4=0;
  4701  0EAD  1205               	bcf	5,4	;volatile
  4702                           
  4703                           ;HAL.c: 157: PORTBbits.RB4=0;
  4704  0EAE  1206               	bcf	6,4	;volatile
  4705                           
  4706                           ;HAL.c: 158: PORTBbits.RB5=0;
  4707  0EAF  1286               	bcf	6,5	;volatile
  4708                           
  4709                           ;HAL.c: 159: PORTCbits.RC2=0;
  4710  0EB0  1107               	bcf	7,2	;volatile
  4711                           
  4712                           ;HAL.c: 160: PORTCbits.RC5=0;
  4713  0EB1  1287               	bcf	7,5	;volatile
  4714                           
  4715                           ;HAL.c: 161: ADCON0bits.ADON=0;
  4716  0EB2  101F               	bcf	31,0	;volatile
  4717  0EB3  0008               	return
  4718  0EB4                     __end_of_TASK_vidSwitchOFFALLPeripherals:	
  4719                           
  4720                           	psect	text24
  4721  0F96                     __ptext24:	
  4722 ;; *************** function _TASK_vidReadUPDOWNSwitch *****************
  4723 ;; Defined at:
  4724 ;;		line 74 in file "HAL.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4738 ;;      Params:         0       0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0
  4741 ;;      Totals:         0       0       0       0       0
  4742 ;;Total ram usage:        0 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_main
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           
  4753                           ;psect for function _TASK_vidReadUPDOWNSwitch
  4754  0F96                     _TASK_vidReadUPDOWNSwitch:	
  4755                           
  4756                           ;HAL.c: 77: switch(UpSwitch_State)
  4757                           
  4758                           ;incstack = 0
  4759                           ; Regs used in _TASK_vidReadUPDOWNSwitch: [wreg-fsr0h+status,2+status,0]
  4760  0F96  2FA6               	goto	l1864
  4761  0F97                     l88:	
  4762                           ;HAL.c: 78: {
  4763                           ;HAL.c: 79: case Switch_Released:
  4764                           
  4765                           
  4766                           ;HAL.c: 80: if(PORTBbits.RB1 == (1u) )
  4767  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  4768  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  4769  0F99  1C86               	btfss	6,1	;volatile
  4770  0F9A  2FBE               	goto	l1874
  4771                           
  4772                           ;HAL.c: 81: {
  4773                           ;HAL.c: 82: UpSwitch_State = Switch_Pressed ;
  4774  0F9B  01F8               	clrf	_UpSwitch_State
  4775  0F9C  0AF8               	incf	_UpSwitch_State,f
  4776                           
  4777                           ;HAL.c: 83: }
  4778                           ;HAL.c: 84: break;
  4779  0F9D  2FBE               	goto	l1874
  4780  0F9E                     l91:	
  4781                           ;HAL.c: 85: case Switch_Pressed:
  4782                           
  4783                           
  4784                           ;HAL.c: 86: if(PORTBbits.RB1 == (0u) )
  4785  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  4786  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  4787  0FA0  1886               	btfsc	6,1	;volatile
  4788  0FA1  2FBE               	goto	l1874
  4789                           
  4790                           ;HAL.c: 87: {
  4791                           ;HAL.c: 88: UpSwitch_State = Switch_Released;
  4792  0FA2  01F8               	clrf	_UpSwitch_State
  4793                           
  4794                           ;HAL.c: 89: UP_Switch = (1u) ;
  4795  0FA3  01EA               	clrf	_UP_Switch
  4796  0FA4  0AEA               	incf	_UP_Switch,f
  4797                           
  4798                           ;HAL.c: 94: }
  4799                           
  4800                           ;HAL.c: 93: break;
  4801                           
  4802                           ;HAL.c: 92: default:
  4803                           
  4804                           ;HAL.c: 90: }
  4805                           ;HAL.c: 91: break;
  4806  0FA5  2FBE               	goto	l1874
  4807  0FA6                     l1864:	
  4808  0FA6  0878               	movf	_UpSwitch_State,w
  4809                           
  4810                           ; Switch size 1, requested type "space"
  4811                           ; Number of cases is 2, Range of values is 0 to 1
  4812                           ; switch strategies available:
  4813                           ; Name         Instructions Cycles
  4814                           ; simple_byte            7     4 (average)
  4815                           ; direct_byte           14     8 (fixed)
  4816                           ; jumptable            260     6 (fixed)
  4817                           ;	Chosen strategy is simple_byte
  4818  0FA7  3A00               	xorlw	0	; case 0
  4819  0FA8  1903               	skipnz
  4820  0FA9  2F97               	goto	l88
  4821  0FAA  3A01               	xorlw	1	; case 1
  4822  0FAB  1903               	skipnz
  4823  0FAC  2F9E               	goto	l91
  4824  0FAD  2FBE               	goto	l1874
  4825                           
  4826                           ;HAL.c: 95: switch(DownSwitch_State)
  4827  0FAE  2FBE               	goto	l1874
  4828  0FAF                     l95:	
  4829                           ;HAL.c: 96: {
  4830                           ;HAL.c: 97: case Switch_Released:
  4831                           
  4832                           
  4833                           ;HAL.c: 98: if( PORTBbits.RB2 == (1u))
  4834  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  4835  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  4836  0FB1  1D06               	btfss	6,2	;volatile
  4837  0FB2  0008               	return
  4838                           
  4839                           ;HAL.c: 99: {
  4840                           ;HAL.c: 100: DownSwitch_State = Switch_Pressed ;
  4841  0FB3  01F7               	clrf	_DownSwitch_State
  4842  0FB4  0AF7               	incf	_DownSwitch_State,f
  4843                           
  4844                           ;HAL.c: 101: }
  4845                           ;HAL.c: 102: break;
  4846  0FB5  0008               	return
  4847  0FB6                     l98:	
  4848                           ;HAL.c: 103: case Switch_Pressed:
  4849                           
  4850                           
  4851                           ;HAL.c: 104: if(PORTBbits.RB2 == (0u))
  4852  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  4853  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  4854  0FB8  1906               	btfsc	6,2	;volatile
  4855  0FB9  0008               	return
  4856                           
  4857                           ;HAL.c: 105: {
  4858                           ;HAL.c: 106: DownSwitch_State = Switch_Released;
  4859  0FBA  01F7               	clrf	_DownSwitch_State
  4860                           
  4861                           ;HAL.c: 107: Down_switch = (1u) ;
  4862  0FBB  01E9               	clrf	_Down_switch
  4863  0FBC  0AE9               	incf	_Down_switch,f
  4864                           
  4865                           ;HAL.c: 112: }
  4866                           
  4867                           ;HAL.c: 111: break;
  4868                           
  4869                           ;HAL.c: 110: default:
  4870                           
  4871                           ;HAL.c: 108: }
  4872                           ;HAL.c: 109: break;
  4873  0FBD  0008               	return
  4874  0FBE                     l1874:	
  4875  0FBE  0877               	movf	_DownSwitch_State,w
  4876                           
  4877                           ; Switch size 1, requested type "space"
  4878                           ; Number of cases is 2, Range of values is 0 to 1
  4879                           ; switch strategies available:
  4880                           ; Name         Instructions Cycles
  4881                           ; simple_byte            7     4 (average)
  4882                           ; direct_byte           14     8 (fixed)
  4883                           ; jumptable            260     6 (fixed)
  4884                           ;	Chosen strategy is simple_byte
  4885  0FBF  3A00               	xorlw	0	; case 0
  4886  0FC0  1903               	skipnz
  4887  0FC1  2FAF               	goto	l95
  4888  0FC2  3A01               	xorlw	1	; case 1
  4889  0FC3  1903               	skipnz
  4890  0FC4  2FB6               	goto	l98
  4891  0FC5  2FC6               	goto	l101
  4892  0FC6                     l101:	
  4893  0FC6  0008               	return
  4894  0FC7                     __end_of_TASK_vidReadUPDOWNSwitch:	
  4895                           
  4896                           	psect	text25
  4897  0EED                     __ptext25:	
  4898 ;; *************** function _TASK_vidReadOnOffSwitch *****************
  4899 ;; Defined at:
  4900 ;;		line 50 in file "HAL.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0
  4916 ;;      Temps:          0       0       0       0       0
  4917 ;;      Totals:         0       0       0       0       0
  4918 ;;Total ram usage:        0 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_main
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           
  4929                           ;psect for function _TASK_vidReadOnOffSwitch
  4930  0EED                     _TASK_vidReadOnOffSwitch:	
  4931                           
  4932                           ;HAL.c: 53: switch(OnOffSwitch_State)
  4933                           
  4934                           ;incstack = 0
  4935                           ; Regs used in _TASK_vidReadOnOffSwitch: [wreg-fsr0h+status,2+status,0]
  4936  0EED  2EFD               	goto	l1852
  4937  0EEE                     l78:	
  4938                           ;HAL.c: 54: {
  4939                           ;HAL.c: 55: case Switch_Released:
  4940                           
  4941                           
  4942                           ;HAL.c: 56: if(PORTBbits.RB0 == (1u))
  4943  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  4944  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  4945  0EF0  1C06               	btfss	6,0	;volatile
  4946  0EF1  0008               	return
  4947                           
  4948                           ;HAL.c: 57: {
  4949                           ;HAL.c: 58: OnOffSwitch_State = Switch_Pressed ;
  4950  0EF2  01F9               	clrf	_OnOffSwitch_State
  4951  0EF3  0AF9               	incf	_OnOffSwitch_State,f
  4952                           
  4953                           ;HAL.c: 59: }
  4954                           ;HAL.c: 60: break;
  4955  0EF4  0008               	return
  4956  0EF5                     l81:	
  4957                           ;HAL.c: 61: case Switch_Pressed:
  4958                           
  4959                           
  4960                           ;HAL.c: 62: if(PORTBbits.RB0 == (0u))
  4961  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  4962  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  4963  0EF7  1806               	btfsc	6,0	;volatile
  4964  0EF8  0008               	return
  4965                           
  4966                           ;HAL.c: 63: {
  4967                           ;HAL.c: 64: OnOffSwitch_State = Switch_Released;
  4968  0EF9  01F9               	clrf	_OnOffSwitch_State
  4969                           
  4970                           ;HAL.c: 65: ChangeMode = (1u) ;
  4971  0EFA  01E8               	clrf	_ChangeMode
  4972  0EFB  0AE8               	incf	_ChangeMode,f
  4973                           
  4974                           ;HAL.c: 71: }
  4975                           
  4976                           ;HAL.c: 70: break;
  4977                           
  4978                           ;HAL.c: 69: default:
  4979                           
  4980                           ;HAL.c: 67: }
  4981                           ;HAL.c: 68: break;
  4982  0EFC  0008               	return
  4983  0EFD                     l1852:	
  4984  0EFD  0879               	movf	_OnOffSwitch_State,w
  4985                           
  4986                           ; Switch size 1, requested type "space"
  4987                           ; Number of cases is 2, Range of values is 0 to 1
  4988                           ; switch strategies available:
  4989                           ; Name         Instructions Cycles
  4990                           ; simple_byte            7     4 (average)
  4991                           ; direct_byte           14     8 (fixed)
  4992                           ; jumptable            260     6 (fixed)
  4993                           ;	Chosen strategy is simple_byte
  4994  0EFE  3A00               	xorlw	0	; case 0
  4995  0EFF  1903               	skipnz
  4996  0F00  2EEE               	goto	l78
  4997  0F01  3A01               	xorlw	1	; case 1
  4998  0F02  1903               	skipnz
  4999  0F03  2EF5               	goto	l81
  5000  0F04  2F05               	goto	l84
  5001  0F05                     l84:	
  5002  0F05  0008               	return
  5003  0F06                     __end_of_TASK_vidReadOnOffSwitch:	
  5004                           
  5005                           	psect	text26
  5006  0F21                     __ptext26:	
  5007 ;; *************** function _HW_init *****************
  5008 ;; Defined at:
  5009 ;;		line 5 in file "DIO.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;		None
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		None
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5023 ;;      Params:         0       0       0       0       0
  5024 ;;      Locals:         0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0
  5026 ;;      Totals:         0       0       0       0       0
  5027 ;;Total ram usage:        0 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    1
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_main
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           
  5038                           ;psect for function _HW_init
  5039  0F21                     _HW_init:	
  5040                           
  5041                           ;DIO.c: 7: TRISAbits.TRISA3=0;
  5042                           
  5043                           ;incstack = 0
  5044                           ; Regs used in _HW_init: []
  5045  0F21  1683               	bsf	3,5	;RP0=1, select bank1
  5046  0F22  1303               	bcf	3,6	;RP1=0, select bank1
  5047  0F23  1185               	bcf	5,3	;volatile
  5048                           
  5049                           ;DIO.c: 8: TRISAbits.TRISA4=0;
  5050  0F24  1205               	bcf	5,4	;volatile
  5051                           
  5052                           ;DIO.c: 9: TRISAbits.TRISA2=1;
  5053  0F25  1505               	bsf	5,2	;volatile
  5054                           
  5055                           ;DIO.c: 10: TRISBbits.TRISB0=1;
  5056  0F26  1406               	bsf	6,0	;volatile
  5057                           
  5058                           ;DIO.c: 11: TRISBbits.TRISB1=1;
  5059  0F27  1486               	bsf	6,1	;volatile
  5060                           
  5061                           ;DIO.c: 12: TRISBbits.TRISB2=1;
  5062  0F28  1506               	bsf	6,2	;volatile
  5063                           
  5064                           ;DIO.c: 13: TRISBbits.TRISB4=0;
  5065  0F29  1206               	bcf	6,4	;volatile
  5066                           
  5067                           ;DIO.c: 14: TRISBbits.TRISB6=0;
  5068  0F2A  1306               	bcf	6,6	;volatile
  5069                           
  5070                           ;DIO.c: 15: TRISBbits.TRISB7=0;
  5071  0F2B  1386               	bcf	6,7	;volatile
  5072                           
  5073                           ;DIO.c: 16: TRISBbits.TRISB5=0;
  5074  0F2C  1286               	bcf	6,5	;volatile
  5075                           
  5076                           ;DIO.c: 17: TRISCbits.TRISC2=0;
  5077  0F2D  1107               	bcf	7,2	;volatile
  5078                           
  5079                           ;DIO.c: 18: TRISCbits.TRISC5=0;
  5080  0F2E  1287               	bcf	7,5	;volatile
  5081                           
  5082                           ;DIO.c: 19: TRISCbits.TRISC3=0;
  5083  0F2F  1187               	bcf	7,3	;volatile
  5084                           
  5085                           ;DIO.c: 20: TRISCbits.TRISC4=0;
  5086  0F30  1207               	bcf	7,4	;volatile
  5087                           
  5088                           ;DIO.c: 21: PORTCbits.RC3 = 1;
  5089  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  5090  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  5091  0F33  1587               	bsf	7,3	;volatile
  5092                           
  5093                           ;DIO.c: 22: PORTCbits.RC4 = 1;
  5094  0F34  1607               	bsf	7,4	;volatile
  5095                           
  5096                           ;DIO.c: 23: PORTBbits.RB0=0;
  5097  0F35  1006               	bcf	6,0	;volatile
  5098                           
  5099                           ;DIO.c: 24: PORTBbits.RB1=0;
  5100  0F36  1086               	bcf	6,1	;volatile
  5101                           
  5102                           ;DIO.c: 25: PORTBbits.RB2=0;
  5103  0F37  1106               	bcf	6,2	;volatile
  5104                           
  5105                           ;DIO.c: 26: PORTBbits.RB4=0;
  5106  0F38  1206               	bcf	6,4	;volatile
  5107                           
  5108                           ;DIO.c: 27: PORTBbits.RB5=0;
  5109  0F39  1286               	bcf	6,5	;volatile
  5110                           
  5111                           ;DIO.c: 28: PORTBbits.RB6=0;
  5112  0F3A  1306               	bcf	6,6	;volatile
  5113                           
  5114                           ;DIO.c: 29: PORTBbits.RB7=0;
  5115  0F3B  1386               	bcf	6,7	;volatile
  5116  0F3C  0008               	return
  5117  0F3D                     __end_of_HW_init:	
  5118                           
  5119                           	psect	text27
  5120  0E95                     __ptext27:	
  5121 ;; *************** function _DisplaySevenSegment_init *****************
  5122 ;; Defined at:
  5123 ;;		line 9 in file "display7s.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;		None
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      void 
  5130 ;; Registers used:
  5131 ;;		status,2
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5137 ;;      Params:         0       0       0       0       0
  5138 ;;      Locals:         0       0       0       0       0
  5139 ;;      Temps:          0       0       0       0       0
  5140 ;;      Totals:         0       0       0       0       0
  5141 ;;Total ram usage:        0 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:    1
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_main
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           
  5152                           ;psect for function _DisplaySevenSegment_init
  5153  0E95                     _DisplaySevenSegment_init:	
  5154                           
  5155                           ;display7s.c: 11: TRISD=0b00000000;
  5156                           
  5157                           ;incstack = 0
  5158                           ; Regs used in _DisplaySevenSegment_init: [status,2]
  5159  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  5160  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  5161  0E97  0188               	clrf	8	;volatile
  5162  0E98  0008               	return
  5163  0E99                     __end_of_DisplaySevenSegment_init:	
  5164                           
  5165                           	psect	text28
  5166  0F06                     __ptext28:	
  5167 ;; *************** function _ADC_Init *****************
  5168 ;; Defined at:
  5169 ;;		line 8 in file "ADC.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;		None
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		None
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5183 ;;      Params:         0       0       0       0       0
  5184 ;;      Locals:         0       0       0       0       0
  5185 ;;      Temps:          0       0       0       0       0
  5186 ;;      Totals:         0       0       0       0       0
  5187 ;;Total ram usage:        0 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; Hardware stack levels required when called:    1
  5190 ;; This function calls:
  5191 ;;		Nothing
  5192 ;; This function is called by:
  5193 ;;		_main
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           
  5198                           ;psect for function _ADC_Init
  5199  0F06                     _ADC_Init:	
  5200                           
  5201                           ;ADC.c: 10: TRISAbits.TRISA2=1;
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _ADC_Init: []
  5205  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  5206  0F07  1303               	bcf	3,6	;RP1=0, select bank1
  5207  0F08  1505               	bsf	5,2	;volatile
  5208                           
  5209                           ;ADC.c: 12: ADCON0bits.ADCS0=0;
  5210  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  5211  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  5212  0F0B  131F               	bcf	31,6	;volatile
  5213                           
  5214                           ;ADC.c: 13: ADCON0bits.ADCS1=1;
  5215  0F0C  179F               	bsf	31,7	;volatile
  5216                           
  5217                           ;ADC.c: 14: ADCON1bits.ADCS2=0;
  5218  0F0D  1683               	bsf	3,5	;RP0=1, select bank1
  5219  0F0E  1303               	bcf	3,6	;RP1=0, select bank1
  5220  0F0F  131F               	bcf	31,6	;volatile
  5221                           
  5222                           ;ADC.c: 17: ADCON0bits.CHS0=0;
  5223  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  5224  0F11  1303               	bcf	3,6	;RP1=0, select bank0
  5225  0F12  119F               	bcf	31,3	;volatile
  5226                           
  5227                           ;ADC.c: 18: ADCON0bits.CHS1=1;
  5228  0F13  161F               	bsf	31,4	;volatile
  5229                           
  5230                           ;ADC.c: 19: ADCON0bits.CHS2=0;
  5231  0F14  129F               	bcf	31,5	;volatile
  5232                           
  5233                           ;ADC.c: 22: ADCON1bits.ADFM=1;
  5234  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  5235  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  5236  0F17  179F               	bsf	31,7	;volatile
  5237                           
  5238                           ;ADC.c: 25: ADCON1bits.PCFG0=0;
  5239  0F18  101F               	bcf	31,0	;volatile
  5240                           
  5241                           ;ADC.c: 26: ADCON1bits.PCFG1=0;
  5242  0F19  109F               	bcf	31,1	;volatile
  5243                           
  5244                           ;ADC.c: 27: ADCON1bits.PCFG2=0;
  5245  0F1A  111F               	bcf	31,2	;volatile
  5246                           
  5247                           ;ADC.c: 28: ADCON1bits.PCFG3=0;
  5248  0F1B  119F               	bcf	31,3	;volatile
  5249                           
  5250                           ;ADC.c: 30: ADCON0bits.GO_DONE=1;
  5251  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  5252  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  5253  0F1E  151F               	bsf	31,2	;volatile
  5254                           
  5255                           ;ADC.c: 33: ADCON0bits.ADON=1;
  5256  0F1F  141F               	bsf	31,0	;volatile
  5257  0F20  0008               	return
  5258  0F21                     __end_of_ADC_Init:	
  5259                           
  5260                           	psect	text29
  5261  0F3D                     __ptext29:	
  5262 ;; *************** function _ISR *****************
  5263 ;; Defined at:
  5264 ;;		line 11 in file "Timer.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;		None
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;		None
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      void 
  5271 ;; Registers used:
  5272 ;;		wreg
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5278 ;;      Params:         0       0       0       0       0
  5279 ;;      Locals:         0       0       0       0       0
  5280 ;;      Temps:          4       0       0       0       0
  5281 ;;      Totals:         4       0       0       0       0
  5282 ;;Total ram usage:        4 bytes
  5283 ;; Hardware stack levels used:    1
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		Interrupt level 1
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           
  5292                           ;psect for function _ISR
  5293  0F3D                     _ISR:	
  5294                           
  5295                           ;Timer.c: 14: if(INTCONbits.TMR0IF == 1)
  5296  0F3D  1D0B               	btfss	11,2	;volatile
  5297  0F3E  2F5C               	goto	i1l129
  5298                           
  5299                           ;Timer.c: 15: {
  5300                           ;Timer.c: 16: INTCONbits.TMR0IF = 0;
  5301  0F3F  110B               	bcf	11,2	;volatile
  5302                           
  5303                           ;Timer.c: 17: SetTempCount ++;
  5304  0F40  3001               	movlw	1
  5305  0F41  07E2               	addwf	_SetTempCount,f	;volatile
  5306  0F42  3000               	movlw	0
  5307  0F43  1803               	skipnc
  5308  0F44  3001               	movlw	1
  5309  0F45  07E3               	addwf	_SetTempCount+1,f	;volatile
  5310  0F46  3000               	movlw	0
  5311  0F47  1803               	skipnc
  5312  0F48  3001               	movlw	1
  5313  0F49  07E4               	addwf	_SetTempCount+2,f	;volatile
  5314  0F4A  3000               	movlw	0
  5315  0F4B  1803               	skipnc
  5316  0F4C  3001               	movlw	1
  5317  0F4D  07E5               	addwf	_SetTempCount+3,f	;volatile
  5318                           
  5319                           ;Timer.c: 18: Time_out ++;
  5320  0F4E  3001               	movlw	1
  5321  0F4F  07DE               	addwf	_Time_out,f
  5322  0F50  3000               	movlw	0
  5323  0F51  1803               	skipnc
  5324  0F52  3001               	movlw	1
  5325  0F53  07DF               	addwf	_Time_out+1,f
  5326  0F54  3000               	movlw	0
  5327  0F55  1803               	skipnc
  5328  0F56  3001               	movlw	1
  5329  0F57  07E0               	addwf	_Time_out+2,f
  5330  0F58  3000               	movlw	0
  5331  0F59  1803               	skipnc
  5332  0F5A  3001               	movlw	1
  5333  0F5B  07E1               	addwf	_Time_out+3,f
  5334  0F5C                     i1l129:	
  5335  0F5C  0873               	movf	??_ISR+3,w
  5336  0F5D  00FF               	movwf	127
  5337  0F5E  0872               	movf	??_ISR+2,w
  5338  0F5F  008A               	movwf	10
  5339  0F60  0871               	movf	??_ISR+1,w
  5340  0F61  0084               	movwf	4
  5341  0F62  0E70               	swapf	??_ISR^(0+-128),w
  5342  0F63  0083               	movwf	3
  5343  0F64  0EFE               	swapf	126,f
  5344  0F65  0E7E               	swapf	126,w
  5345  0F66  0009               	retfie
  5346  0F67                     __end_of_ISR:	
  5347  007E                     btemp	set	126	;btemp
  5348  007E                     wtemp0	set	126
  5349                           
  5350                           	psect	intentry
  5351  0004                     __pintentry:	
  5352                           ;incstack = 0
  5353                           ; Regs used in _ISR: [wreg]
  5354                           
  5355  0004                     interrupt_function:	
  5356  007E                     saved_w	set	btemp
  5357  0004  00FE               	movwf	btemp
  5358  0005  0E03               	swapf	3,w
  5359  0006  00F0               	movwf	??_ISR
  5360  0007  0804               	movf	4,w
  5361  0008  00F1               	movwf	??_ISR+1
  5362  0009  080A               	movf	10,w
  5363  000A  00F2               	movwf	??_ISR+2
  5364  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5365  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5366  000D  087F               	movf	btemp+1,w
  5367  000E  00F3               	movwf	??_ISR+3
  5368  000F  120A  158A  2F3D   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         20
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     62      78
    BANK1            80     49      52
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_u8_ReadExternalEEPROM
    _Vid_WriteExternalEEPROM->_u8_ReadExternalEEPROM
    _u8_ReadExternalEEPROM->_i2c_rb
    _u8_ReadExternalEEPROM->_i2c_wb
    ___lwtoft->___ftpack
    ___ftmul->___ftpack
    _Task_vidDisplayTemp->___awmod
    ___lltoft->___ftpack
    ___ftdiv->___ftpack

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_TASK_vidWaterConditioning
    _Vid_WriteExternalEEPROM->_u8_ReadExternalEEPROM
    _u8_ReadExternalEEPROM->_i2c_rb
    _Task_vidGetTemp->___fttol
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    _Task_vidDisplayTemp->___awdiv
    _TASK_vidWaterConditioning->___fttol
    ___lltoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_TASK_vidWaterConditioning

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   19405
                                             61 BANK0      1     1      0
                           _ADC_Init
           _DisplaySevenSegment_init
                            _HW_init
            _TASK_vidReadOnOffSwitch
           _TASK_vidReadUPDOWNSwitch
    _TASK_vidSwitchOFFALLPeripherals
          _TASK_vidWaterConditioning
                _Task_vidDisplayTemp
                    _Task_vidGetTemp
                        _Timer0_init
            _Vid_WriteExternalEEPROM
                           _i2c_init
              _u8_ReadExternalEEPROM
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Vid_WriteExternalEEPROM                             10     7      3    1224
                                              8 BANK0     10     7      3
                          _i2c_start
                           _i2c_stop
                             _i2c_wb
              _u8_ReadExternalEEPROM
 ---------------------------------------------------------------------------------
 (1) _u8_ReadExternalEEPROM                                6     4      2     646
                                              6 COMMON     1     1      0
                                              3 BANK0      5     3      2
                             _i2c_rb
                          _i2c_start
                           _i2c_stop
                             _i2c_wb
 ---------------------------------------------------------------------------------
 (2) _i2c_wb                                               4     4      0     130
                                              4 COMMON     2     2      0
                                              0 BANK0      2     2      0
                             _Ndelay
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                             _Ndelay
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                             _Ndelay
 ---------------------------------------------------------------------------------
 (2) _i2c_rb                                               5     5      0     167
                                              4 COMMON     2     2      0
                                              0 BANK0      3     3      0
                             _Ndelay
 ---------------------------------------------------------------------------------
 (3) _Ndelay                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Task_vidGetTemp                                      1     1      0    9545
                                             55 BANK0      1     1      0
                           _ADC_Read
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2649
                                              5 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    3106
                                              9 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             2     0      2       0
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Task_vidDisplayTemp                                  3     3      0    1279
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                _displaySevenSegment
 ---------------------------------------------------------------------------------
 (2) _displaySevenSegment                                  1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     587
                                              4 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     599
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _TASK_vidWaterConditioning                           55    55      0    6711
                                             55 BANK0      6     6      0
                                              0 BANK1     49    49      0
                            ___ftdiv
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2643
                                              5 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     444
                                             41 BANK0     14    10      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3346
                                             25 BANK0     16    10      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lltoft (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2464
                                              4 COMMON     3     3      0
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (1) _TASK_vidSwitchOFFALLPeripherals                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TASK_vidReadUPDOWNSwitch                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TASK_vidReadOnOffSwitch                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HW_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DisplaySevenSegment_init                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _DisplaySevenSegment_init
   _HW_init
   _TASK_vidReadOnOffSwitch
   _TASK_vidReadUPDOWNSwitch
   _TASK_vidSwitchOFFALLPeripherals
   _TASK_vidWaterConditioning
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lltoft
       ___ftpack
   _Task_vidDisplayTemp
     ___awdiv
     ___awmod
     _displaySevenSegment
   _Task_vidGetTemp
     _ADC_Read
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _Timer0_init
   _Vid_WriteExternalEEPROM
     _i2c_start
       _Ndelay
     _i2c_stop
       _Ndelay
     _i2c_wb
       _Ndelay
     _u8_ReadExternalEEPROM
       _i2c_rb
         _Ndelay
       _i2c_start
         _Ndelay
       _i2c_stop
         _Ndelay
       _i2c_wb
         _Ndelay
   _i2c_init
   _u8_ReadExternalEEPROM
     _i2c_rb
       _Ndelay
     _i2c_start
       _Ndelay
     _i2c_stop
       _Ndelay
     _i2c_wb
       _Ndelay

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     31      34       7       65.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3E      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8C      12        0.0%
ABS                  0      0      8C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jul 19 23:49:38 2020

                        _DownSwitch_State 0077                               __CFG_CP$OFF 0000  
                                      l16 0EB4                                        l81 0EF5  
                                      l91 0F9E                                        l84 0F05  
                                      l78 0EEE                                        l95 0FAF  
                                      l88 0F97                                        l98 0FB6  
                            ___awdiv@sign 0025                ??_TASK_vidReadUPDOWNSwitch 0074  
                                     l101 0FC6                                       l201 06D6  
                                     l202 06F8                                       l203 0702  
                                     l273 00D0                                       l540 059B  
                                     l541 05A3                                       l533 0586  
                                     l197 07D8                                       l278 00F7  
                                     l624 04B7                              __CFG_CPD$OFF 0000  
                                     _ISR 0F3D         __end_of_TASK_vidWaterConditioning 02B8  
                                     fsr0 0004                                       indf 0000  
                            ___awmod@sign 0076                              __CFG_FOSC$HS 0000  
                            __CFG_LVP$OFF 0000                                      ?_ISR 0070  
                            ___ftdiv@cntr 0043                              ___ftdiv@sign 0048  
                              _ChangeMode 0068                                      l2112 0703  
                                    l2202 0FDD                                      l2140 0570  
                                    l2132 0558                                      l2300 073A  
                                    l2220 0777                                      l2136 055F  
                                    l2312 075B                                      l2304 0748  
                                    l2208 0FDF                                      l2146 058B  
                                    l2138 056B                                      l2322 03A3  
                                    l2242 05C8                                      l2170 0FCD  
                                    l2162 0FC9                                      l2148 0595  
                                    l2412 0F6D                                      l2260 05E9  
                                    l2308 0753                                      l2068 07B2  
                                    l2228 0791                                      l2350 041D  
                                    l2342 03FE                                      l2414 0F7F  
                                    l2270 060A                                      l2190 0FD7  
                                    l2182 0FD3                                      l2174 0FCF  
                                    l2166 0FCB                                      l2328 03B9  
                                    l2248 05D3                                      l2600 016E  
                                    l2504 0068                                      l1802 04C8  
                                    l2274 0612                                      l2266 05FF  
                                    l2258 05DB                                      l2290 0726  
                                    l2194 0FD9                                      l2186 0FD5  
                                    l2178 0FD1                                      l2370 02E6  
                                    l2506 0071                                      l2460 01E9  
                                    l2364 02D0                                      l2470 027F  
                                    l2286 071F                                      l2198 0FDB  
                                    l2382 0325                                      l2518 008E  
                                    l2464 01F5                                      l2528 00A0  
                                    l1770 045D                                      l2458 01C2  
                                    l2298 072C                                      l2394 034D  
                                    l2386 0335                                      l2482 062A  
                                    l2570 0111                                      l2562 00EB  
                                    l2554 00DC                                      l2538 00AE  
                                    l1852 0EFD                                      l2548 00C4  
                                    l1790 049F                                      l2398 035D  
                                    l2582 014B                                      l1864 0FA6  
                                    l2488 0636                                      l2576 012D  
                                    l2568 0102                                      l1874 0FBE  
                                    l2586 015B                                      l1796 04AC  
                                    l1788 048F                                      l2596 0169  
                                    l1798 04BA              __size_of_Task_vidDisplayTemp 0055  
                                    u3103 010F                                      u2224 07BB  
                                    u2305 0564                                      u2225 07B9  
                                    u3113 0149                                      u2325 057F  
                                    u2254 06E8                                      u2255 06E6  
                                    u2345 058E                                      u3137 0697  
                                    u3147 06C0                                      u1815 04AE  
                                    u2455 05DE                                      u2385 05AA  
                                    u2635 03CB                                      u1755 0464  
                                    u2475 05EA                                      u2555 072F  
                                    u2715 02F2                                      u2645 03DD  
                                    u2485 05F6                                      u2805 035E  
                                    u2725 0304                                      u2655 03FF  
                                    u2495 0600                                      u2575 0740  
                                    u2815 0366                                      u2665 0410  
                                    u1785 0490                                      u2585 0749  
                                    u2675 041E                                      u2835 0F72  
                                    u2915 0278                                      u2755 0336  
                                    u2925 02AF                                      u2765 033E  
                                    u2855 019D                                      u2945 066A  
                                    u2891 01DA                                      u2892 01DB  
                                    u2893 01E1                                      u2885 01C7  
                                    u2894 01E2                                      u2895 01E8  
                            __CFG_WRT$OFF 0000                                      _Temp 00D3  
                                    _main 0035                              ___ftpack@arg 0020  
                            ___ftpack@exp 0023                                      btemp 007E  
                        __end_of_ADC_Init 0F21                          __end_of_ADC_Read 0EC0  
                         __end_of_HW_init 0F3D                                      start 0012  
                            ___ftmul@cntr 0037                              ___ftmul@sign 0038  
        TASK_vidWaterConditioning@AvgTemp 00CC                                     ??_ISR 0070  
                            ___fttol@exp1 0056                              ___fttol@lval 0052  
                                   ?_main 0070                           __end_of___awdiv 0617  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 0760  
                         __end_of___ftdiv 0443                           __end_of___ftmul 038B  
                         ___awdiv@divisor 0020                           __end_of___fttol 04D1  
                                   i1l129 0F5C          TASK_vidWaterConditioning@SumTemp 00A0  
                         ___awdiv@counter 0024                                     _PORTD 0008  
                                   _TRISD 0088                              ___lltoft@exp 002A  
        __size_of_Vid_WriteExternalEEPROM 005A                             ___ftpack@sign 0024  
                          __CFG_BOREN$OFF 0000                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __initialization 0015                              __end_of_main 017C  
                        __end_of_i2c_init 0EA1                          __end_of_i2c_stop 0EED  
                                  ??_main 005D                             ___fttol@sign1 0051  
         Task_vidDisplayTemp@u8Temprature 002A                   _TASK_vidReadOnOffSwitch 0EED  
               u8_ReadExternalEEPROM@addr 0023                     _u8_ReadExternalEEPROM 0760  
                                  _ADRESH 001E                                    _ADRESL 009E  
                        ___awdiv@dividend 0022                                 ??_HW_init 0074  
                        __end_of___ftpack 05BC                          __end_of___lltoft 0F96  
                        __end_of___lwtoft 0800              __size_of_displaySevenSegment 0039  
                      __size_of_i2c_start 0010                            __CFG_PWRTE$OFF 0000  
                                  _Ndelay 0EA1                                    _i2c_rb 06C6  
                                  _i2c_wb 07A9                             ??_Timer0_init 0074  
                         _Task_vidGetTemp 04D1                                 ??___awdiv 0074  
                               ??___awmod 0074                                 ??___ftdiv 003F  
                               ??___ftmul 002F                                 ??___fttol 004D  
                        ___awdiv@quotient 0026                           ___awmod@divisor 0020  
                         ___awmod@counter 0075                     ___ftmul@f3_as_product 0034  
             ??_TASK_vidWaterConditioning 0057                                 ?_ADC_Init 0070  
                               ?_ADC_Read 0074                                    saved_w 007E  
              ??_DisplaySevenSegment_init 0074           TASK_vidWaterConditioning@AllSum 00C8  
                 __end_of__initialization 0031                      displaySevenSegment@v 0074  
               Vid_WriteExternalEEPROM@ah 002D                 Vid_WriteExternalEEPROM@al 002E  
               Vid_WriteExternalEEPROM@nt 002F                                ___ftdiv@f1 003C  
                              ___ftdiv@f2 0039                                ___ftdiv@f3 0044  
                             _Down_switch 0069                                ___ftmul@f1 0029  
                              ___ftmul@f2 002C                                ___fttol@f1 0049  
                          __pcstackCOMMON 0070                              __pidataBANK0 0003  
                              ___lltoft@c 0025                       _Task_vidDisplayTemp 0671  
               ??_TASK_vidReadOnOffSwitch 0074                       __end_of_Timer0_init 0ECD  
                             _CurrentTemp 00D2                                ___lwtoft@c 0025  
                       __end_of_i2c_start 0EDD                            _OPTION_REGbits 0081  
                  ?_u8_ReadExternalEEPROM 0023                                ??_ADC_Init 0074  
                              ??_ADC_Read 0076                   _Vid_WriteExternalEEPROM 0617  
                    ?_Task_vidDisplayTemp 0070                                __pbssBANK0 005E  
                              __pbssBANK1 00D1                                 ?_i2c_init 0070  
                               ?_i2c_stop 0070                   __end_of_Task_vidGetTemp 054E  
               _TASK_vidWaterConditioning 017C                                   ?_Ndelay 0070  
                                 ?_i2c_rb 0070                                   ?_i2c_wb 0070  
                              __pmaintext 0035                _ElectricHeaterCurrentState 006D  
                              __pintentry 0004                                 ?___ftpack 0020  
                               ?___lltoft 0025                                 ?___lwtoft 0025  
                   ??_Task_vidDisplayTemp 0028                                   _HW_init 0F21  
                                 i2c_rb@i 0022                                   i2c_wb@i 0021  
                              ??_i2c_init 0074         __size_of_TASK_vidReadUPDOWNSwitch 0031  
                              ??_i2c_stop 0074                 ?_TASK_vidReadUPDOWNSwitch 0070  
                         __size_of_Ndelay 0009                           __size_of_i2c_rb 004D  
                         __size_of_i2c_wb 003F                               _Timer0_init 0EC0  
                                 ___awdiv 05BC                                   ___awmod 0713  
                                 ___ftdiv 038B                                   ___ftmul 02B8  
                                 ___fttol 0443                                ??___ftpack 0074  
                              ??___lltoft 0029                                   __ptext1 0E99  
                                 __ptext2 0617                                   __ptext3 0760  
                                 __ptext4 07A9                                   __ptext5 0EDD  
                                 __ptext6 0ECD                                   __ptext7 06C6  
                                 __ptext8 0EA1                                   __ptext9 0EC0  
                     _displaySevenSegment 0FC7                                ??___lwtoft 0028  
                            __size_of_ISR 002A                 ??_Vid_WriteExternalEEPROM 002B  
                        ___awmod@dividend 0022                      end_of_initialization 0031  
                          _UpSwitch_State 0078                      ?_displaySevenSegment 0070  
                        ?_Task_vidGetTemp 0070                                 _PORTAbits 0005  
                               _PORTBbits 0006                                 _PORTCbits 0007  
                               _TRISAbits 0085                                 _TRISBbits 0086  
                               _TRISCbits 0087                Vid_WriteExternalEEPROM@val 002A  
              Vid_WriteExternalEEPROM@tmp 0030                         __size_of_ADC_Init 001B  
                       __size_of_ADC_Read 000C                     ??_displaySevenSegment 0074  
                               i2c_rb@ack 0020                                 i2c_rb@ret 0021  
                             ___ftdiv@exp 0047                                 i2c_wb@val 0020  
                             ___ftmul@exp 0033                            __end_of_Ndelay 0EAA  
                          __end_of_i2c_rb 0713                            __end_of_i2c_wb 07E8  
                               _UP_Switch 006A                   ??_u8_ReadExternalEEPROM 0076  
                     start_initialization 0015                               __end_of_ISR 0F67  
                               _i2c_start 0ECD                         __size_of_i2c_init 0008  
                       __size_of_i2c_stop 0010                                  ??_Ndelay 0074  
                                ??_i2c_rb 0074                                  ??_i2c_wb 0074  
             Vid_WriteExternalEEPROM@addr 0028         __size_of_DisplaySevenSegment_init 0004  
               ?_DisplaySevenSegment_init 0070                TASK_vidWaterConditioning@i 00D1  
              TASK_vidWaterConditioning@j 00D0                               __pdataBANK0 006D  
                          _u16AnalogeRead 0066          __end_of_TASK_vidReadUPDOWNSwitch 0FC7  
                       __size_of___ftpack 006E                         __size_of___lltoft 002F  
                             __pbssCOMMON 0077                                 ___latbits 0002  
                       __size_of___lwtoft 0018                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                                ?_i2c_start 0070  
                                ?_HW_init 0070                            _u16DigitalRead 006B  
                               __pnvBANK1 00D3                              ?_Timer0_init 0070  
                ?_TASK_vidReadOnOffSwitch 0070                                  ?___awdiv 0020  
                                ?___awmod 0020                                  ?___ftdiv 0039  
                                ?___ftmul 0029                                  ?___fttol 0049  
             __end_of_Task_vidDisplayTemp 06C6                                  _ADC_Init 0F06  
                                _ADC_Read 0EB4                         interrupt_function 0004  
                            _SetTempCount 0062                         _OnOffSwitch_State 0079  
                              _ADCON0bits 001F                                _ADCON1bits 009F  
                             ??_i2c_start 0074                  _TASK_vidReadUPDOWNSwitch 0F96  
                        __size_of_HW_init 001C                                  _i2c_init 0E99  
                                _i2c_stop 0EDD                  u8_ReadExternalEEPROM@ret 0025  
         __end_of_TASK_vidReadOnOffSwitch 0F06                                  _Time_out 005E  
                __size_of_Task_vidGetTemp 007D                          __size_of___awdiv 005B  
                        __size_of___awmod 004D                          __size_of___ftdiv 00B8  
                ?_Vid_WriteExternalEEPROM 0028                          __size_of___ftmul 00D3  
                        __size_of___fttol 008E                                  ___ftpack 054E  
                                ___lltoft 0F67                                  ___lwtoft 07E8  
          __size_of_u8_ReadExternalEEPROM 0049             __end_of_u8_ReadExternalEEPROM 07A9  
             __end_of_displaySevenSegment 1000                                  __ptext10 04D1  
                                __ptext11 07E8                                  __ptext20 0443  
                                __ptext12 02B8                                  __ptext21 038B  
                                __ptext13 0EB4                                  __ptext22 054E  
                                __ptext14 0671                                  __ptext23 0EAA  
                                __ptext15 0FC7                                  __ptext24 0F96  
                                __ptext16 0713                                  __ptext25 0EED  
                                __ptext17 05BC                                  __ptext26 0F21  
                                __ptext18 017C                                  __ptext27 0E95  
                                __ptext19 0F67                                  __ptext28 0F06  
                                __ptext29 0F3D          __end_of_DisplaySevenSegment_init 0E99  
                           __size_of_main 0147   __end_of_TASK_vidSwitchOFFALLPeripherals 0EB4  
__size_of_TASK_vidSwitchOFFALLPeripherals 000A         ??_TASK_vidSwitchOFFALLPeripherals 0074  
        ?_TASK_vidSwitchOFFALLPeripherals 0070           _TASK_vidSwitchOFFALLPeripherals 0EAA  
                    __size_of_Timer0_init 000D                   u8_ReadExternalEEPROM@ah 0027  
                 u8_ReadExternalEEPROM@al 0026                                _INTCONbits 000B  
                                intlevel1 0000           __end_of_Vid_WriteExternalEEPROM 0671  
      __size_of_TASK_vidWaterConditioning 013C                ?_TASK_vidWaterConditioning 0070  
                       ??_Task_vidGetTemp 0057          __size_of_TASK_vidReadOnOffSwitch 0019  
                _DisplaySevenSegment_init 0E95  
